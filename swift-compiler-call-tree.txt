
Swift compiler call tree with crash locations
=============================================
main (line 1677)
  frontend_main(llvm::ArrayRef<char const*>, char const*, void*) (line 3432)
    swift::performSILGeneration(swift::SourceFile&, swift::Optional<unsigned int>) (line 72)
      swift::SILModule::constructSIL(swift::Module*, swift::SourceFile*, swift::Optional<unsigned int>) (line 314)
        swift::Lowering::SILGenModule::emitSourceFile(swift::SourceFile*, unsigned int) (line 395)
          swift::ASTVisitor<swift::Lowering::SILGenFunction, void, void, void, void, void, void>::visit(swift::Stmt*) (line 152)
            swift::Lowering::SILGenFunction::visitBraceStmt(swift::BraceStmt*) (line 332)
              swift::Lowering::SILGenFunction::visitPatternBindingDecl(swift::PatternBindingDecl*) (line 190)
                swift::Lowering::SILGenFunction::emitExprInto(swift::Expr*, swift::Lowering::Initialization*) (line 235)
                  swift::ASTVisitor<(anonymous namespace)::RValueEmitter, swift::Lowering::RValue, void, void, void, void, void, swift::Lowering::SGFContext>::visit(swift::Expr*, swift::Lowering::SGFContext) (line 81)
                    swift::Lowering::SILGenFunction::emitApplyExpr(swift::ApplyExpr*, swift::Lowering::SGFContext) (line 47)
                      prepareApplyExpr(swift::Lowering::SILGenFunction&, swift::Expr*) (line 189)
                        swift::ASTVisitor<(anonymous namespace)::SILGenApply, void, void, void, void, void, void>::visit(swift::Expr*) (line 71)
                          (anonymous namespace)::SILGenApply::visitApplyExpr(swift::ApplyExpr*) (line 671)
                            swift::ASTVisitor<(anonymous namespace)::SILGenApply, void, void, void, void, void, void>::visit(swift::Expr*) (line 2285)
                              (anonymous namespace)::SILGenApply::visitExpr(swift::Expr*) (line 50)
                                swift::Lowering::SILGenFunction::emitRValueAsSingleValue(swift::Expr*, swift::Lowering::SGFContext) (line 45)
                                  swift::ASTVisitor<(anonymous namespace)::RValueEmitter, swift::Lowering::RValue, void, void, void, void, void, swift::Lowering::SGFContext>::visit(swift::Expr*, swift::Lowering::SGFContext) (line 2870)
                                    (anonymous namespace)::RValueEmitter::visitAbstractClosureExpr(swift::AbstractClosureExpr*, swift::Lowering::SGFContext) (line 97)
                                      swift::Lowering::SILGenModule::emitClosure(swift::AbstractClosureExpr*) (line 119)
                                        swift::SILFunction* swift::Lowering::SILGenModule::preEmitFunction<swift::AbstractClosureExpr>(swift::SILDeclRef, swift::AbstractClosureExpr*, swift::SILLocation) (line 91)
                                          swift::Lowering::SILGenModule::getFunction(swift::SILDeclRef, swift::ForDefinition_t) (line 204)
                                            swift::Lowering::TypeConverter::getConstantInfo(swift::SILDeclRef) (line 691)
                                              getUncachedSILFunctionTypeForConstant(swift::SILModule&, swift::SILDeclRef, swift::CanTypeWrapper<swift::AnyFunctionType>, swift::CanTypeWrapper<swift::AnyFunctionType>, swift::CanTypeWrapper<swift::AnyFunctionType>, swift::CanTypeWrapper<swift::AnyFunctionType>, swift::AnyFunctionType::Representation) (line 776)
                                                getSILFunctionType(swift::SILModule&, swift::CanType, swift::CanTypeWrapper<swift::AnyFunctionType>, swift::CanTypeWrapper<swift::AnyFunctionType>, swift::AnyFunctionType::ExtInfo, (anonymous namespace)::Conventions const&) (line 556)
                                                  swift::SubstTypeVisitor<(anonymous namespace)::DestructureInputs, void>::visit(swift::CanType, swift::CanType) (line 136)
                                                    (anonymous namespace)::DestructureInputs::visitType(swift::CanType, swift::CanType) (line 52)
                                                      swift::Lowering::TypeConverter::getTypeLowering(swift::Lowering::AbstractionPattern, swift::Type, unsigned int) (line 1999)
                                                        swift::Lowering::TypeConverter::getTypeLoweringForUncachedLoweredType(swift::Lowering::TypeConverter::TypeKey) (line 263)
                                                          swift::Lowering::TypeLowering const* swift::CanTypeVisitor<(anonymous namespace)::LowerType, swift::Lowering::TypeLowering const*>::visit<>(swift::CanType) (line 125)
                                                            (anonymous namespace)::LowerType::visitAnyStructType(swift::CanType, swift::StructDecl*) (line 40)
                                                              swift::NominalTypeDecl::getMembers(bool) const (line 28)
                                                              – Crash case at this location: stacks/0049-swift-nominaltypedecl-getmembers.txt
          swift::Lowering::SILGenModule::emitFunction(swift::FuncDecl*) (line 198)
            swift::SILFunction* swift::Lowering::SILGenModule::preEmitFunction<swift::FuncDecl>(swift::SILDeclRef, swift::FuncDecl*, swift::SILLocation) (line 91)
              swift::Lowering::SILGenModule::getFunction(swift::SILDeclRef, swift::ForDefinition_t) (line 204)
                swift::Lowering::TypeConverter::getConstantInfo(swift::SILDeclRef) (line 691)
                  getUncachedSILFunctionTypeForConstant(swift::SILModule&, swift::SILDeclRef, swift::CanTypeWrapper<swift::AnyFunctionType>, swift::CanTypeWrapper<swift::AnyFunctionType>, swift::CanTypeWrapper<swift::AnyFunctionType>, swift::CanTypeWrapper<swift::AnyFunctionType>, swift::AnyFunctionType::Representation) (line 776)
                    getSILFunctionType(swift::SILModule&, swift::CanType, swift::CanTypeWrapper<swift::AnyFunctionType>, swift::CanTypeWrapper<swift::AnyFunctionType>, swift::AnyFunctionType::ExtInfo, (anonymous namespace)::Conventions const&) (line 265)
                      swift::Lowering::TypeConverter::getTypeLowering(swift::Lowering::AbstractionPattern, swift::Type, unsigned int) (line 1999)
                        swift::Lowering::TypeConverter::getTypeLoweringForUncachedLoweredType(swift::Lowering::TypeConverter::TypeKey) (line 263)
                          swift::Lowering::TypeLowering const* swift::CanTypeVisitor<(anonymous namespace)::LowerType, swift::Lowering::TypeLowering const*>::visit<>(swift::CanType) (line 863)
                            (anonymous namespace)::LowerType::visitAnyEnumType(swift::CanType, swift::EnumDecl*) (line 410)
                              LoweredTypeKind swift::CanTypeVisitor<(anonymous namespace)::TypeClassifier, LoweredTypeKind>::visit<>(swift::CanType) (line 96)
                                swift::Lowering::TypeConverter::getTypeLowering(swift::Lowering::AbstractionPattern, swift::Type, unsigned int) (line 1999)
                                  swift::Lowering::TypeConverter::getTypeLoweringForUncachedLoweredType(swift::Lowering::TypeConverter::TypeKey) (line 263)
                                    swift::Lowering::TypeLowering const* swift::CanTypeVisitor<(anonymous namespace)::LowerType, swift::Lowering::TypeLowering const*>::visit<>(swift::CanType) (line 125)
                                      (anonymous namespace)::LowerType::visitAnyStructType(swift::CanType, swift::StructDecl*) (line 260)
                                      – Crash case at this location: stacks/0061-visit-any-struct-type.txt
          swift::Lowering::SILGenModule::visitNominalTypeDecl(swift::NominalTypeDecl*) (line 30)
            SILGenType::emitType() (line 315)
              swift::Lowering::SILGenModule::getWitnessTable(swift::ProtocolConformance*) (line 1531)
                (anonymous namespace)::SILGenConformance::emitFuncEntry(swift::FuncDecl*, swift::ValueDecl*, llvm::ArrayRef<swift::Substitution>) (line 213)
                  swift::Lowering::SILGenModule::emitProtocolWitness(swift::ProtocolConformance*, swift::SILLinkage, swift::SILDeclRef, swift::SILDeclRef, swift::Lowering::IsFreeFunctionWitness_t, llvm::ArrayRef<swift::Substitution>) (line 114)
                    swift::Lowering::TypeConverter::getConstantInfo(swift::SILDeclRef) (line 602)
                      swift::Lowering::TypeConverter::getLoweredASTFunctionType(swift::CanTypeWrapper<swift::AnyFunctionType>, unsigned int, swift::AnyFunctionType::ExtInfo) (line 770)
                      – Crash case at this location: stacks/0314-swift-lowering-typeconverter-getloweredastfunctiontype.txt
                  swift::Lowering::SILGenModule::emitProtocolWitness(swift::ProtocolConformance*, swift::SILLinkage, swift::SILDeclRef, swift::SILDeclRef, swift::Lowering::IsFreeFunctionWitness_t, llvm::ArrayRef<swift::Substitution>) (line 2776)
                    swift::Lowering::SILGenFunction::emitProtocolWitness(swift::ProtocolConformance*, swift::SILDeclRef, swift::SILDeclRef, llvm::ArrayRef<swift::Substitution>, swift::Lowering::IsFreeFunctionWitness_t, swift::Lowering::HasInOutSelfAbstractionDifference_t) (line 3833)
                      swift::Lowering::SILGenFunction::emitGlobalFunctionRef(swift::SILLocation, swift::SILDeclRef, swift::Lowering::SILConstantInfo) (line 250)
                        swift::Lowering::SILGenModule::emitCurryThunk(swift::SILDeclRef, swift::SILDeclRef, swift::FuncDecl*) (line 208)
                          swift::Lowering::SILGenFunction::emitCurryThunk(swift::FuncDecl*, swift::SILDeclRef, swift::SILDeclRef) (line 269)
                          – Crash case at this location: stacks/0226-swift-lowering-silgenfunction-emitcurrythunk.txt
                    swift::Lowering::SILGenFunction::emitProtocolWitness(swift::ProtocolConformance*, swift::SILDeclRef, swift::SILDeclRef, llvm::ArrayRef<swift::Substitution>, swift::Lowering::IsFreeFunctionWitness_t, swift::Lowering::HasInOutSelfAbstractionDifference_t) (line 548)
                      collectParams(swift::Lowering::SILGenFunction&, swift::SILLocation, llvm::SmallVectorImpl<swift::Lowering::ManagedValue>&) (line 363)
                        swift::Lowering::SILGenFunction::emitManagedBufferWithCleanup(swift::SILValue) (line 63)
                          swift::Lowering::TypeConverter::getTypeLowering(swift::SILType) (line 101)
                            swift::Lowering::TypeConverter::getTypeLoweringForUncachedLoweredType(swift::Lowering::TypeConverter::TypeKey) (line 263)
                              swift::Lowering::TypeLowering const* swift::CanTypeVisitor<(anonymous namespace)::LowerType, swift::Lowering::TypeLowering const*>::visit<>(swift::CanType) (line 125)
                                (anonymous namespace)::LowerType::visitAnyStructType(swift::CanType, swift::StructDecl*) (line 292)
                                  swift::ArchetypeBuilder::substDependentType(swift::Type) (line 50)
                                    swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                      substDependentTypes(swift::ArchetypeBuilder&, swift::Type) (line 107)
                                        swift::ArchetypeBuilder::resolveArchetype(swift::Type) (line 273)
                                        – Crash case at this location: stacks/0041-szone-malloc-should-clear.txt
            SILGenType::emitType() (line 203)
              swift::ASTVisitor<SILGenType, void, void, void, void, void, void>::visit(swift::Decl*) (line 228)
                swift::Lowering::SILGenModule::emitConstructor(swift::ConstructorDecl*) (line 31)
                  swift::Lowering::SILGenModule::emitAbstractFuncDecl(swift::AbstractFunctionDecl*) (line 103)
                    swift::Lowering::SILGenModule::emitDefaultArgGenerators(llvm::PointerUnion<swift::ValueDecl*, swift::AbstractClosureExpr*>, llvm::ArrayRef<swift::Pattern*>) (line 504)
                      swift::Lowering::SILGenFunction::emitGeneratorFunction(swift::SILDeclRef, swift::Expr*) (line 181)
                        swift::Lowering::SILGenFunction::emitProlog(llvm::ArrayRef<swift::Pattern*>, swift::Type, swift::DeclContext*) (line 48)
                          swift::Mangle::Mangler::mangleNominalType(swift::NominalTypeDecl*, swift::ResilienceExpansion, swift::Mangle::Mangler::BindGenerics, swift::GenericParamList*) (line 34)
                          – Crash case at this location: stacks/0322-swift-mangle-mangler-manglenominaltype.txt
                swift::Lowering::SILGenModule::emitConstructor(swift::ConstructorDecl*) (line 376)
                  swift::Lowering::SILGenFunction::emitClassConstructorAllocator(swift::ConstructorDecl*) (line 141)
                    swift::ASTVisitor<(anonymous namespace)::ArgumentForwardVisitor, void, void, void, void, void, void>::visit(swift::Pattern*) (line 155)
                      (anonymous namespace)::ArgumentForwardVisitor::makeArgument(swift::Type, swift::VarDecl*) (line 221)
                        swift::Lowering::TypeConverter::getTypeLowering(swift::Lowering::AbstractionPattern, swift::Type, unsigned int) (line 1999)
                          swift::Lowering::TypeConverter::getTypeLoweringForUncachedLoweredType(swift::Lowering::TypeConverter::TypeKey) (line 194)
                            swift::ArchetypeBuilder::substDependentType(swift::Type) (line 50)
                              swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                substDependentTypes(swift::ArchetypeBuilder&, swift::Type) (line 56)
                                – Crash case at this location: stacks/0043-substdependenttypes.txt
              swift::ASTVisitor<SILGenType, void, void, void, void, void, void>::visit(swift::Decl*) (line 355)
                swift::Lowering::SILGenModule::emitFunction(swift::FuncDecl*) (line 233)
                  swift::Lowering::SILGenFunction::emitFunction(swift::FuncDecl*) (line 256)
                    swift::ASTVisitor<swift::Lowering::SILGenFunction, void, void, void, void, void, void>::visit(swift::Stmt*) (line 152)
                      swift::Lowering::SILGenFunction::visitBraceStmt(swift::BraceStmt*) (line 232)
                        swift::ASTVisitor<swift::Lowering::SILGenFunction, void, void, void, void, void, void>::visit(swift::Stmt*) (line 194)
                          swift::Lowering::SILGenFunction::visitForEachStmt(swift::ForEachStmt*) (line 1836)
                            swift::ASTVisitor<swift::Lowering::SILGenFunction, void, void, void, void, void, void>::visit(swift::Stmt*) (line 152)
                              swift::Lowering::SILGenFunction::visitBraceStmt(swift::BraceStmt*) (line 297)
                                swift::Lowering::SILGenFunction::emitIgnoredExpr(swift::Expr*) (line 237)
                                  swift::ASTVisitor<(anonymous namespace)::RValueEmitter, swift::Lowering::RValue, void, void, void, void, void, swift::Lowering::SGFContext>::visit(swift::Expr*, swift::Lowering::SGFContext) (line 81)
                                    swift::Lowering::SILGenFunction::emitApplyExpr(swift::ApplyExpr*, swift::Lowering::SGFContext) (line 58)
                                      (anonymous namespace)::CallEmission::apply(swift::Lowering::SGFContext) (line 1128)
                                        (anonymous namespace)::ArgEmitter::emit(swift::Lowering::RValueSource&&, swift::Lowering::AbstractionPattern) (line 98)
                                          (anonymous namespace)::ArgEmitter::emitExpanded(swift::Lowering::RValueSource&&, swift::Lowering::AbstractionPattern) (line 722)
                                          – Crash case at this location: stacks/0240-argemitter-emitexpanded.txt
                      swift::Lowering::SILGenFunction::visitBraceStmt(swift::BraceStmt*) (line 297)
                        swift::Lowering::SILGenFunction::emitIgnoredExpr(swift::Expr*) (line 237)
                          swift::ASTVisitor<(anonymous namespace)::RValueEmitter, swift::Lowering::RValue, void, void, void, void, void, swift::Lowering::SGFContext>::visit(swift::Expr*, swift::Lowering::SGFContext) (line 81)
                            swift::Lowering::SILGenFunction::emitApplyExpr(swift::ApplyExpr*, swift::Lowering::SGFContext) (line 58)
                              (anonymous namespace)::CallEmission::apply(swift::Lowering::SGFContext) (line 1128)
                                (anonymous namespace)::ArgEmitter::emit(swift::Lowering::RValueSource&&, swift::Lowering::AbstractionPattern) (line 98)
                                  (anonymous namespace)::ArgEmitter::emitExpanded(swift::Lowering::RValueSource&&, swift::Lowering::AbstractionPattern) (line 722)
                                    (anonymous namespace)::ArgEmitter::emit(swift::Lowering::RValueSource&&, swift::Lowering::AbstractionPattern) (line 1479)
                                      swift::Lowering::SILGenFunction::emitRValue(swift::Expr*, swift::Lowering::SGFContext) (line 22)
                                        swift::ASTVisitor<(anonymous namespace)::RValueEmitter, swift::Lowering::RValue, void, void, void, void, void, swift::Lowering::SGFContext>::visit(swift::Expr*, swift::Lowering::SGFContext) (line 29018)
                                          swift::Lowering::SILGenFunction::emitRValueForPropertyLoad(swift::SILLocation, swift::Lowering::ManagedValue, bool, swift::VarDecl*, llvm::ArrayRef<swift::Substitution>, swift::AccessKind, swift::Type, swift::Lowering::SGFContext) (line 333)
                                          – Crash case at this location: stacks/0323-swift-apply-generic-protocol.txt
                      swift::Lowering::SILGenFunction::visitBraceStmt(swift::BraceStmt*) (line 370)
                        swift::Lowering::SILGenFunction::visitNominalTypeDecl(swift::NominalTypeDecl*) (line 33)
                          SILGenType::emitType() (line 203)
                            swift::Lowering::SILGenModule::emitGlobalInitialization(swift::PatternBindingDecl*) (line 530)
                              swift::Lowering::SILGenModule::emitLazyGlobalInitializer(llvm::StringRef, swift::PatternBindingDecl*) (line 442)
                                swift::Lowering::SILGenFunction::emitLazyGlobalInitializer(swift::PatternBindingDecl*) (line 117)
                                  swift::Lowering::SILGenFunction::visitPatternBindingDecl(swift::PatternBindingDecl*) (line 190)
                                    swift::Lowering::SILGenFunction::emitExprInto(swift::Expr*, swift::Lowering::Initialization*) (line 235)
                                      swift::ASTVisitor<(anonymous namespace)::RValueEmitter, swift::Lowering::RValue, void, void, void, void, void, swift::Lowering::SGFContext>::visit(swift::Expr*, swift::Lowering::SGFContext) (line 81)
                                        swift::Lowering::SILGenFunction::emitApplyExpr(swift::ApplyExpr*, swift::Lowering::SGFContext) (line 47)
                                          prepareApplyExpr(swift::Lowering::SILGenFunction&, swift::Expr*) (line 189)
                                            swift::ASTVisitor<(anonymous namespace)::SILGenApply, void, void, void, void, void, void>::visit(swift::Expr*) (line 71)
                                              (anonymous namespace)::SILGenApply::visitApplyExpr(swift::ApplyExpr*) (line 671)
                                                swift::ASTVisitor<(anonymous namespace)::SILGenApply, void, void, void, void, void, void>::visit(swift::Expr*) (line 2285)
                                                  (anonymous namespace)::SILGenApply::visitExpr(swift::Expr*) (line 50)
                                                    swift::Lowering::SILGenFunction::emitRValueAsSingleValue(swift::Expr*, swift::Lowering::SGFContext) (line 45)
                                                      swift::ASTVisitor<(anonymous namespace)::RValueEmitter, swift::Lowering::RValue, void, void, void, void, void, swift::Lowering::SGFContext>::visit(swift::Expr*, swift::Lowering::SGFContext) (line 2870)
                                                        (anonymous namespace)::RValueEmitter::visitAbstractClosureExpr(swift::AbstractClosureExpr*, swift::Lowering::SGFContext) (line 202)
                                                          swift::Lowering::SILGenFunction::emitClosureValue(swift::SILLocation, swift::SILDeclRef, llvm::ArrayRef<swift::Substitution>, swift::AnyFunctionRef) (line 1303)
                                                          – Crash case at this location: stacks/0242-swift-lowering-silgenfunction-emitclosurevalue.txt
          swift::Lowering::SILGenModule::visitExtensionDecl(swift::ExtensionDecl*) (line 21)
            SILGenExtension::emitExtension(swift::ExtensionDecl*) (line 59)
              swift::ASTVisitor<SILGenExtension, void, void, void, void, void, void>::visit(swift::Decl*) (line 207)
                swift::Lowering::SILGenModule::emitConstructor(swift::ConstructorDecl*) (line 200)
                  swift::SILFunction* swift::Lowering::SILGenModule::preEmitFunction<swift::ConstructorDecl>(swift::SILDeclRef, swift::ConstructorDecl*, swift::SILLocation) (line 91)
                    swift::Lowering::SILGenModule::getFunction(swift::SILDeclRef, swift::ForDefinition_t) (line 204)
                      swift::Lowering::TypeConverter::getConstantInfo(swift::SILDeclRef) (line 387)
                      – Crash case at this location: stacks/0241-swift-lowering-typeconverter-getconstantinfo.txt
  frontend_main(llvm::ArrayRef<char const*>, char const*, void*) (line 5275)
    swift::RunImmediately(swift::CompilerInstance&, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, swift::IRGenOptions&, swift::SILOptions const&) (line 1066)
      llvm::ExecutionEngine::runFunctionAsMain(llvm::Function*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, char const* const*) (line 1523)
        llvm::JIT::runFunction(llvm::Function*, std::__1::vector<llvm::GenericValue, std::__1::allocator<llvm::GenericValue> > const&) (line 329)
        – Crash case at this location: stacks/0037-no-stacktrace.txt
  frontend_main(llvm::ArrayRef<char const*>, char const*, void*) (line 5444)
    swift::performIRGeneration(swift::IRGenOptions&, swift::SourceFile&, swift::SILModule*, llvm::StringRef, llvm::LLVMContext&, unsigned int) (line 51)
      performIRGeneration(swift::IRGenOptions&, swift::Module*, swift::SILModule*, llvm::StringRef, llvm::LLVMContext&, swift::SourceFile*, unsigned int) (line 1924)
        swift::irgen::IRGenModule::emitSourceFile(swift::SourceFile&, unsigned int) (line 116)
          swift::irgen::IRGenModule::emitStructDecl(swift::StructDecl*) (line 22)
            swift::irgen::emitStructMetadata(swift::irgen::IRGenModule&, swift::StructDecl*) (line 2109)
              (anonymous namespace)::NominalTypeDescriptorBuilderBase<(anonymous namespace)::StructNominalTypeDescriptorBuilder>::emit() (line 1302)
                (anonymous namespace)::buildFieldTypeAccessorFn(swift::irgen::IRGenModule&, swift::NominalTypeDecl*, swift::OptionalTransformRange<swift::IteratorRange<swift::DeclIterator>, swift::NominalTypeDecl::ToStoredProperty>) (line 2518)
                  swift::irgen::emitPolymorphicParametersForGenericValueWitness(swift::irgen::IRGenFunction&, swift::NominalTypeDecl*, llvm::Value*) (line 511)
                    (anonymous namespace)::EmitPolymorphicParameters::emitWithSourceBound(swift::irgen::Explosion&) (line 1192)
                      swift::irgen::IRGenFunction::bindArchetype(swift::ArchetypeType*, llvm::Value*, llvm::ArrayRef<llvm::Value*>) (line 94)
                        llvm::Value::setName(llvm::Twine const&) (line 594)
                        – Crash case at this location: stacks/0033-error.txt
      performIRGeneration(swift::IRGenOptions&, swift::Module*, swift::SILModule*, llvm::StringRef, llvm::LLVMContext&, swift::SourceFile*, unsigned int) (line 1900)
        swift::irgen::IRGenModule::emitGlobalTopLevel() (line 208)
          swift::irgen::IRGenModule::emitSILFunction(swift::SILFunction*) (line 9179)
            swift::SILVisitor<(anonymous namespace)::IRGenSILFunction, void>::visit(swift::ValueBase*) (line 34721)
              swift::irgen::emitPolymorphicArguments(swift::irgen::IRGenFunction&, swift::CanTypeWrapper<swift::SILFunctionType>, swift::CanTypeWrapper<swift::SILFunctionType>, llvm::ArrayRef<swift::Substitution>, swift::irgen::Explosion&) (line 451)
                swift::irgen::IRGenFunction::emitTypeMetadataRef(swift::CanType) (line 280)
                – Crash case at this location: stacks/0271-swift-irgen-irgenfunction-emittypemetadataref.txt
            swift::SILVisitor<(anonymous namespace)::IRGenSILFunction, void>::visit(swift::ValueBase*) (line 22869)
              swift::irgen::emitOpaqueExistentialContainerUpcast(swift::irgen::IRGenFunction&, swift::irgen::Address, swift::SILType, swift::irgen::Address, swift::SILType, bool) (line 169)
                llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >::CreateConstInBoundsGEP2_32(llvm::Value*, unsigned int, unsigned int, llvm::Twine const&) (line 163)
                  llvm::GetElementPtrInst::Create(llvm::Value*, llvm::ArrayRef<llvm::Value*>, llvm::Twine const&, llvm::Instruction*) (line 90)
                    llvm::GetElementPtrInst::getIndexedType(llvm::Type*, llvm::ArrayRef<llvm::Value*>) (line 26)
                    – Crash case at this location: stacks/1340-llvm-getelementptrinst-getindexedtype.txt
            swift::SILVisitor<(anonymous namespace)::IRGenSILFunction, void>::visit(swift::ValueBase*) (line 27762)
              swift::irgen::emitMetatypeRef(swift::irgen::IRGenFunction&, swift::CanTypeWrapper<swift::MetatypeType>, swift::irgen::Explosion&) (line 55)
                swift::irgen::IRGenFunction::emitTypeMetadataRef(swift::CanType) (line 158)
                  getTypeMetadataAccessFunction(swift::irgen::IRGenModule&, swift::CanType, swift::ForDefinition_t) (line 850)
                    emitDirectTypeMetadataRef(swift::irgen::IRGenFunction&, swift::CanType) (line 204)
                      (anonymous namespace)::EmitTypeMetadataRef::visitAnyMetatypeType(swift::CanTypeWrapper<swift::AnyMetatypeType>) (line 170)
                        llvm::IRBuilder<true, llvm::ConstantFolder, llvm::IRBuilderDefaultInserter<true> >::CreateCall(llvm::Value*, llvm::Value*, llvm::Twine const&) (line 150)
                          [libc++.1.dylib] operator new(unsigned long) (line 30)
                          – Crash case at this location: stacks/0272-llvm-irbuilder-createcall.txt
            swift::SILVisitor<(anonymous namespace)::IRGenSILFunction, void>::visit(swift::ValueBase*) (line 13266)
              (anonymous namespace)::OpaqueArchetypeTypeInfo::destroy(swift::irgen::IRGenFunction&, swift::irgen::Address, swift::SILType) const (line 24)
                swift::irgen::IRGenFunction::emitTypeMetadataRefForLayout(swift::SILType) (line 25)
                  llvm::Value* swift::CanTypeVisitor<(anonymous namespace)::EmitTypeMetadataRefForLayout, llvm::Value*>::visit<>(swift::CanType) (line 64)
                    swift::irgen::IRGenFunction::emitTypeMetadataRef(swift::CanType) (line 280)
                    – Crash case at this location: stacks/0054-swift-substitutedtype-get.txt
      performIRGeneration(swift::IRGenOptions&, swift::Module*, swift::SILModule*, llvm::StringRef, llvm::LLVMContext&, swift::SourceFile*, unsigned int) (line 2038)
        swift::irgen::IRGenModule::emitLazyDefinitions() (line 138)
          swift::irgen::emitEnumMetadata(swift::irgen::IRGenModule&, swift::EnumDecl*) (line 441)
            swift::irgen::emitValueWitnessTable(swift::irgen::IRGenModule&, swift::CanType) (line 148)
              swift::irgen::IRGenModule::getAddrOfValueWitnessTable(swift::CanType, llvm::Type*) (line 132)
                getAddrOfLLVMVariable(swift::irgen::IRGenModule&, llvm::DenseMap<swift::irgen::LinkEntity, llvm::Constant*, llvm::DenseMapInfo<swift::irgen::LinkEntity> >&, swift::irgen::LinkEntity, llvm::Type*, llvm::Type*, llvm::Type*, swift::irgen::DebugTypeInfo) (line 506)
                  llvm::Value::replaceAllUsesWith(llvm::Value*) (line 82)
                    llvm::ConstantExpr::replaceUsesOfWithOnConstant(llvm::Value*, llvm::Value*, llvm::Use*) (line 236)
                      llvm::ConstantExpr::getGetElementPtr(llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool) (line 51)
                        llvm::ConstantFoldGetElementPtr(llvm::Constant*, bool, llvm::ArrayRef<llvm::Value*>) (line 2517)
                          llvm::ConstantExpr::getGetElementPtr(llvm::Constant*, llvm::ArrayRef<llvm::Value*>, bool) (line 107)
                          – Crash case at this location: stacks/0326-llvm-constantexpr-getgetelementptr.txt
        swift::irgen::IRGenModule::emitLazyDefinitions() (line 199)
          swift::irgen::IRGenModule::emitSILFunction(swift::SILFunction*) (line 9179)
          – Crash case at this location: stacks/0269-swift-irgen-irgenmodule-emitsilfunction.txt
  frontend_main(llvm::ArrayRef<char const*>, char const*, void*) (line 2008)
    swift::CompilerInstance::performSema() (line 2060)
      swift::performTypeChecking(swift::SourceFile&, swift::TopLevelContext&, unsigned int) (line 1073)
        swift::FileUnit::forAllVisibleModules(std::__1::function<bool (std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>)>) (line 105)
          swift::Module::forAllVisibleModules(llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, bool, std::__1::function<bool (std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>)>) (line 574)
            std::__1::__function::__func<std::__1::reference_wrapper<swift::FileUnit::forAllVisibleModules(std::__1::function<void (std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>)>)::'lambda'(std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> const&) const>, std::__1::allocator<std::__1::reference_wrapper<swift::FileUnit::forAllVisibleModules(std::__1::function<void (std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>)>)::'lambda'(std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> const&) const> >, bool (std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>)>::operator()(std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>&&) (line 49)
              std::__1::__function::__func<std::__1::reference_wrapper<swift::performTypeChecking(swift::SourceFile&, swift::TopLevelContext&, unsigned int)::$_1 const>, std::__1::allocator<std::__1::reference_wrapper<swift::performTypeChecking(swift::SourceFile&, swift::TopLevelContext&, unsigned int)::$_1 const> >, void (std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>)>::operator()(std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>&&) (line 2496)
                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                          swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                            void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                          swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                            swift::TypeBase::getCanonicalType() (line 775)
                                                              swift::TypeBase::getCanonicalType() (line 1403)
                                                              – Crash case at this location: stacks/1889-swift-typebase-getcanonicaltype.txt
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                  swift::ASTPrinter::printTextImpl(llvm::StringRef) (line 254)
                                                                  – Crash case at this location: stacks/0966-swift-astprinter-printtextimpl.txt
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                                swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                                  swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                                    std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 785)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                        getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                        – Crash case at this location: stacks/1611-getselftypeforcontainer.txt
                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                          swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                            swift::TypeBase::getCanonicalType() (line 775)
                                                              swift::TypeBase::getCanonicalType() (line 1403)
                                                              – Crash case at this location: stacks/1640-swift-typebase-getcanonicaltype.txt
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                              – Crash case at this location: stacks/1092-getselftypeforcontainer.txt
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                                swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                  swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                  – Crash case at this location: stacks/1389-swift-type-walk.txt
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                                  applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                                    swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 750)
                                                      swift::TypeChecker::checkSubstitutions(llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, llvm::DenseMap<swift::SubstitutableType*, llvm::SmallVector<swift::ProtocolConformance*, 2u>, llvm::DenseMapInfo<swift::SubstitutableType*> >&, swift::DeclContext*, swift::SourceLoc, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >*) (line 300)
                                                      – Crash case at this location: stacks/1423-swift-typechecker-checksubstitutions.txt
                                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                                – Crash case at this location: stacks/1706-resolvetypedecl.txt
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                                  swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                                    void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                          getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 53)
                                                                            swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                                            – Crash case at this location: stacks/1538-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                        resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                        – Crash case at this location: stacks/0286-resolvetypedecl.txt
                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                        existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                            swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                              swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                  swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                    swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                      std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                          getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                          – Crash case at this location: stacks/0520-getselftypeforcontainer.txt
                                    swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                      std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                      swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                        swift::TypeBase::getCanonicalType() (line 775)
                                                          swift::TypeBase::getCanonicalType() (line 1403)
                                                          – Crash case at this location: stacks/1659-swift-typebase-getcanonicaltype.txt
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                          getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                          – Crash case at this location: stacks/1629-getselftypeforcontainer.txt
                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                            swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                              swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                              applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                                swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 750)
                                                  swift::TypeChecker::checkSubstitutions(llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, llvm::DenseMap<swift::SubstitutableType*, llvm::SmallVector<swift::ProtocolConformance*, 2u>, llvm::DenseMapInfo<swift::SubstitutableType*> >&, swift::DeclContext*, swift::SourceLoc, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >*) (line 300)
                                                  – Crash case at this location: stacks/0905-swift-typechecker-checksubstitutions.txt
                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                              swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                              – Crash case at this location: stacks/0684-swift-type-walk.txt
                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 441)
                            (anonymous namespace)::DeclChecker::visitAssociatedTypeDecl(swift::AssociatedTypeDecl*) (line 102)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                      – Crash case at this location: stacks/1942-resolvetypedecl.txt
              std::__1::__function::__func<std::__1::reference_wrapper<swift::performTypeChecking(swift::SourceFile&, swift::TopLevelContext&, unsigned int)::$_1 const>, std::__1::allocator<std::__1::reference_wrapper<swift::performTypeChecking(swift::SourceFile&, swift::TopLevelContext&, unsigned int)::$_1 const> >, void (std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>)>::operator()(std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>&&) (line 5487)
                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                        resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                        – Crash case at this location: stacks/1513-resolvetypedecl.txt
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                            swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                              swift::TypeBase::getCanonicalType() (line 775)
                                                swift::TypeBase::getCanonicalType() (line 1403)
                                                – Crash case at this location: stacks/0793-swift-typebase-getcanonicaltype.txt
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                  – Crash case at this location: stacks/0509-getselftypeforcontainer.txt
                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                  swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                    swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                      std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 785)
                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                          getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                          – Crash case at this location: stacks/1045-getselftypeforcontainer.txt
                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                                                  validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                                                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                      validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                                          swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                                            swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                                            – Crash case at this location: stacks/1855-swift-pattern-foreachvariable.txt
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                – Crash case at this location: stacks/0925-no-stacktrace.txt
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                            swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                              swift::TypeBase::getCanonicalType() (line 775)
                                                swift::TypeBase::getCanonicalType() (line 1403)
                                                – Crash case at this location: stacks/0931-swift-typebase-getcanonicaltype.txt
                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                            – Crash case at this location: stacks/0501-resolvetypedecl.txt
      swift::performTypeChecking(swift::SourceFile&, swift::TopLevelContext&, unsigned int) (line 1734)
        typeCheckFunctionsAndExternalDecls(swift::TypeChecker&) (line 221)
          swift::TypeChecker::typeCheckAbstractFunctionBody(swift::AbstractFunctionDecl*) (line 130)
            swift::TypeChecker::typeCheckConstructorBodyUntil(swift::ConstructorDecl*, swift::SourceLoc) (line 712)
              swift::TypeChecker::constructCallToSuperInit(swift::ConstructorDecl*, swift::ClassDecl*) (line 378)
                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                  swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                    swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                      swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                            – Crash case at this location: stacks/1334-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                  swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                    swift::Expr::walk(swift::ASTWalker&) (line 53)
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3053)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 5200)
                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                            – Crash case at this location: stacks/0069-swift-typevisitor.txt
                                              swift::Parser::parseTypeIdentifier() (line 1450)
                                              – Crash case at this location: stacks/1529-swift-parser-parsetypeidentifier.txt
                                              swift::constraints::ConstraintSystem::lookThroughImplicitlyUnwrappedOptionalType(swift::Type) (line 22)
                                              – Crash case at this location: stacks/0358-swift-constraints-constraintsystem-lookthroughimplicitlyunwrappedoptionaltype.txt
                                              std::__1::__function::__func<swift::ArchetypeBuilder::mapTypeIntoContext(swift::Module*, swift::GenericParamList*, swift::Type)::$_3, std::__1::allocator<swift::ArchetypeBuilder::mapTypeIntoContext(swift::Module*, swift::GenericParamList*, swift::Type)::$_3>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 62)
                                              – Crash case at this location: stacks/0894-std-function-func-swift-archetypebuilder-maptypeintocontext.txt
                                              swift::TypeBase::getAnyOptionalObjectType(swift::OptionalTypeKind&) (line 15)
                                              – Crash case at this location: stacks/0653-swift-typebase-getanyoptionalobjecttype.txt
                                              llvm::OnDiskChainedHashTable<swift::ModuleFile::DeclTableInfo>::find(swift::Identifier const&, swift::ModuleFile::DeclTableInfo*) (line 47)
                                              – Crash case at this location: stacks/0579-llvm-ondiskchainedhashtable-swift-modulefile-decltableinfo-find.txt
                                              swift::Lexer::getLocForEndOfToken(swift::SourceManager const&, swift::SourceLoc) (line 535)
                                              – Crash case at this location: stacks/1476-swift-lexer-getlocforendoftoken.txt
                                              swift::Parser::parseExprIdentifier() (line 642)
                                              – Crash case at this location: stacks/0592-swift-parser-parseexpridentifier.txt
                                              swift::Parser::parseDecl(llvm::SmallVectorImpl<swift::Decl*>&, swift::OptionSet<swift::Parser::ParseDeclFlags, unsigned int>) (line 2901)
                                              – Crash case at this location: stacks/0616-swift-parser-parsedecl.txt
                                              swift::TypeChecker::coercePatternToType(swift::Pattern*&, swift::DeclContext*, swift::Type, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 2019)
                                              – Crash case at this location: stacks/0798-swift-typechecker-coercepatterntotype.txt
                                              swift::constraints::ConstraintGraph::removeConstraint(swift::constraints::Constraint*) (line 234)
                                              – Crash case at this location: stacks/1589-swift-constraints-constraintgraph-removeconstraint.txt
                                              swift::constraints::Solution::Solution(swift::constraints::Solution&&) (line 319)
                                              – Crash case at this location: stacks/1626-swift-constraints-solution-solution.txt
                                              llvm::SmallVectorImpl<swift::DiagnosticArgument>::operator=(llvm::SmallVectorImpl<swift::DiagnosticArgument>&&) (line 285)
                                              – Crash case at this location: stacks/1043-llvm-smallvectorimpl-swift-diagnosticargument-operator.txt
                                              swift::ClangModuleUnit::getImportedModules(llvm::SmallVectorImpl<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >&, swift::Module::ImportFilter) const (line 1607)
                                              – Crash case at this location: stacks/1471-swift-clangmoduleunit-getimportedmodules.txt
                                              swift::ParenType::get(swift::ASTContext const&, swift::Type) (line 278)
                                              – Crash case at this location: stacks/0468-swift-parentype-get.txt
                                              swift::Parser::parseExprSequence(swift::Diag<>, bool, bool) (line 153)
                                              – Crash case at this location: stacks/0618-swift-parser-parseexprsequence.txt
                                              swift::TypeBase::getCanonicalType() (line 1122)
                                              – Crash case at this location: stacks/1559-swift-typebase-getcanonicaltype.txt
                                              swift::DiagnosticEngine::flushActiveDiagnostic() (line 4667)
                                              – Crash case at this location: stacks/0764-as.txt
                                              bool swift::Parser::parseToken<>(swift::tok, swift::SourceLoc&, swift::Diag<>) (line 134)
                                              – Crash case at this location: stacks/1727-bool.txt
                                              swift::Parser::parseToken(swift::tok, swift::SourceLoc&, swift::Diagnostic const&) (line 643)
                                              – Crash case at this location: stacks/1729-swift-parser-parsetoken.txt
                                              swift::constraints::ConstraintGraph::lookupNode(swift::TypeVariableType*) (line 50)
                                              – Crash case at this location: stacks/1784-swift-constraints-constraintgraph-lookupnode.txt
                                              llvm::FoldingSetNodeID::operator==(llvm::FoldingSetNodeID const&) const (line 40)
                                              – Crash case at this location: stacks/1912-llvm-foldingsetnodeid-operator.txt
                                              swift::GenericSignature::get(llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>) (line 453)
                                              – Crash case at this location: stacks/0438-swift-genericsignature-get.txt
                                              swift::Lexer::lexIdentifier() (line 183)
                                              – Crash case at this location: stacks/1270-swift-lexer-lexidentifier.txt
                                              swift::Module::lookupValue(llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, swift::NLKind, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 90)
                                              – Crash case at this location: stacks/1711-swift-module-lookupvalue.txt
                                              swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 708)
                                              – Crash case at this location: stacks/0491-swift-type-transform.txt
                                              swift::TuplePattern::create(swift::ASTContext&, swift::SourceLoc, llvm::ArrayRef<swift::TuplePatternElt>, swift::SourceLoc, bool, swift::SourceLoc, swift::Optional<bool>) (line 280)
                                              – Crash case at this location: stacks/0895-swift-tuplepattern-create.txt
                                              swift::ModuleFile::maybeReadSubstitution(llvm::BitstreamCursor&) (line 825)
                                              – Crash case at this location: stacks/0982-b.txt
                                              swift::TypeChecker::typeCheckExpressionShallow(swift::Expr*&, swift::DeclContext*, swift::Type) (line 1108)
                                              – Crash case at this location: stacks/0638-swift-typechecker-typecheckexpressionshallow.txt
                                              swift::ModuleFile::getType(swift::Fixnum<31u, unsigned int>) (line 8359)
                                              – Crash case at this location: stacks/1750-swift-modulefile-gettype.txt
                                              swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 133)
                                              – Crash case at this location: stacks/0814-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                                              swift::DiagnosticEngine::diagnose(swift::SourceLoc, swift::Diagnostic const&) (line 500)
                                              – Crash case at this location: stacks/1680-swift-diagnosticengine-diagnose.txt
                                              swift::constraints::ConstraintGraphNode::addConstraint(swift::constraints::Constraint*) (line 219)
                                              – Crash case at this location: stacks/0652-swift-constraints-constraintgraphnode-addconstraint.txt
                                              swift::TypeBase::isExistentialType(llvm::SmallVectorImpl<swift::ProtocolDecl*>&) (line 22)
                                              – Crash case at this location: stacks/0081-resolvetypedecl.txt
                                              swift::Parser::parseStmtReturn() (line 308)
                                              – Crash case at this location: stacks/1422-swift-parser-parsestmtreturn.txt
                                              swift::StreamPrinter::printText(llvm::StringRef) (line 51)
                                              – Crash case at this location: stacks/0665-swift-streamprinter-printtext.txt
                                              swift::Parser::parseTypeSimple(swift::Diag<>) (line 368)
                                              – Crash case at this location: stacks/0855-swift-parser-parsetypesimple.txt
                                              swift::Type::walk(swift::TypeWalker&) const (line 75)
                                              – Crash case at this location: stacks/1304-swift-type-walk.txt
                                              cleanupIllFormedExpression(swift::ASTContext&, swift::constraints::ConstraintSystem*, swift::Expr*)::CleanupIllFormedExpression::walkToExprPost(swift::Expr*) (line 290)
                                              – Crash case at this location: stacks/1820-cleanupillformedexpression.txt
                                              swift::ArchetypeBuilder::resolveArchetype(swift::Type) (line 70)
                                              – Crash case at this location: stacks/0887-swift-archetypebuilder-resolvearchetype.txt
                                              void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                              – Crash case at this location: stacks/0475-void.txt
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 80)
                                              – Crash case at this location: stacks/0449-swift-typechecker-validatedecl.txt
                                              swift::ModuleFile::lookupValue(swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&) (line 1472)
                                              – Crash case at this location: stacks/1036-swift-modulefile-lookupvalue.txt
            swift::TypeChecker::typeCheckConstructorBodyUntil(swift::ConstructorDecl*, swift::SourceLoc) (line 355)
              swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 473)
                swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 123)
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 1857)
                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1582)
                      finalizeGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::DeclContext*, swift::TypeChecker&) (line 522)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                  – Crash case at this location: stacks/1130-swift-declcontext-lookupqualified.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2526)
                    void checkCircularity<swift::ClassDecl>(swift::TypeChecker&, swift::ClassDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::ClassDecl*>&) (line 132)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                  – Crash case at this location: stacks/1191-swift-declcontext-lookupqualified.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2695)
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                      validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                        swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                            swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                              swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                    swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                      swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                      – Crash case at this location: stacks/1192-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                            swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                              swift::Expr::walk(swift::ASTWalker&) (line 76)
                                (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                    (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                          swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                                swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                      swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                        swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                              swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                – Crash case at this location: stacks/1054-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                            swift::Expr::walk(swift::ASTWalker&) (line 26)
                              (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                  – Crash case at this location: stacks/1899-swift-declcontext-lookupqualified.txt
                      validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                          validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                      – Crash case at this location: stacks/1384-swift-declcontext-lookupqualified.txt
                                        swift::ModuleFile::lookupValue(swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&) (line 1472)
                                        – Crash case at this location: stacks/1547-swift-modulefile-lookupvalue.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                    swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                      swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                      – Crash case at this location: stacks/0296-swift-type-walk.txt
                                                        swift::PrintingDiagnosticConsumer::handleDiagnostic(swift::SourceManager&, swift::SourceLoc, swift::DiagnosticKind, llvm::StringRef, swift::DiagnosticInfo const&) (line 1288)
                                                        – Crash case at this location: stacks/1193-swift-printingdiagnosticconsumer-handlediagnostic.txt
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 685)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                          swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                            swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                              – Crash case at this location: stacks/1170-getselftypeforcontainer.txt
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 832)
                                          checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                          swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                            swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                              std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                                  – Crash case at this location: stacks/0180-szone-free-definite-size.txt
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                        resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                        – Crash case at this location: stacks/1309-resolvetypedecl.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2164)
                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                                swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                  swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                  – Crash case at this location: stacks/1516-swift-type-walk.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5734)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                                                                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                                                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                                                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                                                                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                                                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                                                                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                                                                                              swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                                                                                swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                                                                                – Crash case at this location: stacks/1100-swift-type-walk.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                        swift::GenericSignature::get(llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>) (line 477)
                                                        – Crash case at this location: stacks/1792-swift-genericsignature-get.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                  – Crash case at this location: stacks/1946-resolvetypedecl.txt
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 832)
                                              checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                                                        validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                                                          swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                                            swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                                                                              swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                                                                                swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                                                                  swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                                      swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                                        – Crash case at this location: stacks/0442-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 9408)
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 1857)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                        resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                          applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                            swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 750)
                                              swift::TypeChecker::checkSubstitutions(llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, llvm::DenseMap<swift::SubstitutableType*, llvm::SmallVector<swift::ProtocolConformance*, 2u>, llvm::DenseMapInfo<swift::SubstitutableType*> >&, swift::DeclContext*, swift::SourceLoc, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >*) (line 300)
                                              – Crash case at this location: stacks/1245-swift-typechecker-checksubstitutions.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 3728)
                    void (anonymous namespace)::DeclChecker::checkExplicitConformance<swift::StructDecl>(swift::StructDecl*, swift::Type) (line 138)
                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 2294)
                        swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3731)
                          (anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*) (line 1141)
                            matchWitness(swift::TypeChecker&, swift::NormalProtocolConformance*, swift::DeclContext*, swift::ValueDecl*, swift::ValueDecl*) (line 682)
                              swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                              – Crash case at this location: stacks/1365-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3691)
                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                          swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                            swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                  swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                    std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                        getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                        – Crash case at this location: stacks/0574-getselftypeforcontainer.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2078)
                    swift::TypeChecker::addImplicitConstructors(swift::NominalTypeDecl*, llvm::SmallVectorImpl<swift::Decl*>&) (line 754)
                      createImplicitConstructor(swift::TypeChecker&, swift::NominalTypeDecl*, (anonymous namespace)::ImplicitConstructorKind) (line 476)
                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                          validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 2164)
                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 489)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                                      – Crash case at this location: stacks/0278-getselftypeforcontainer.txt
                          validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                            swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                              swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                  swift::Expr::walk(swift::ASTWalker&) (line 76)
                                    (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                      swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                            swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                              swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                    swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                      swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                      – Crash case at this location: stacks/1298-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 271)
                    swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                      swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                        swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                          swift::Expr::walk(swift::ASTWalker&) (line 53)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3458)
                              swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*)::ExprWalker::walkToExprPre(swift::Expr*) (line 1112)
                                swift::TypeChecker::typeCheckClosureBody(swift::ClosureExpr*) (line 143)
                                  swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 473)
                                    swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 123)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6663)
                                        void (anonymous namespace)::DeclChecker::checkExplicitConformance<swift::EnumDecl>(swift::EnumDecl*, swift::Type) (line 138)
                                          swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3751)
                                            (anonymous namespace)::ConformanceChecker::resolveWitnessViaDerivation(swift::ValueDecl*) (line 159)
                                              swift::DerivedConformance::deriveEquatable(swift::TypeChecker&, swift::NominalTypeDecl*, swift::ValueDecl*) (line 1710)
                                              – Crash case at this location: stacks/1121-swift-derivedconformance-deriveequatable.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6649)
                    swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                    – Crash case at this location: stacks/0808-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2164)
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2164)
                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 3728)
                        void (anonymous namespace)::DeclChecker::checkExplicitConformance<swift::StructDecl>(swift::StructDecl*, swift::Type) (line 138)
                          swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3731)
                            (anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*) (line 1141)
                              matchWitness(swift::TypeChecker&, swift::NormalProtocolConformance*, swift::DeclContext*, swift::ValueDecl*, swift::ValueDecl*) (line 1021)
                                swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 802)
                                  swift::constraints::ConstraintSystem::openType(swift::Type, swift::constraints::ConstraintLocatorBuilder, swift::DeclContext*, bool, swift::constraints::DependentTypeOpener*) (line 264)
                                    swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                      (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 1050)
                                        swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 327)
                                          swift::ArchetypeBuilder::mapTypeIntoContext(swift::DeclContext*, swift::Type) (line 149)
                                            swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                            – Crash case at this location: stacks/0795-swift-type-transform.txt
                                        swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 335)
                                        – Crash case at this location: stacks/1199-swift-constraints-constraintsystem-opengeneric.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 1857)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1605)
                        swift::NominalTypeDecl::computeType() (line 29)
                          swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                          – Crash case at this location: stacks/1095-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                          – Crash case at this location: stacks/1194-swift-declcontext-lookupqualified.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                      swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                        std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 139)
                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 2394)
                            swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                            – Crash case at this location: stacks/1099-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 186)
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                  swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                  – Crash case at this location: stacks/0890-swift-completegenerictyperesolver-resolvedependentmembertype.txt
                                    swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 115)
                                    – Crash case at this location: stacks/0742-swift-metatypetype-get.txt
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 266)
                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                        swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                        – Crash case at this location: stacks/1920-swift-completegenerictyperesolver-resolvedependentmembertype.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 53)
                        swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                        – Crash case at this location: stacks/0881-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                          swift::Lexer::lexIdentifier() (line 183)
                          – Crash case at this location: stacks/1184-swift-lexer-lexidentifier.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 17223)
                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3731)
                        (anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*) (line 1141)
                          matchWitness(swift::TypeChecker&, swift::NormalProtocolConformance*, swift::DeclContext*, swift::ValueDecl*, swift::ValueDecl*) (line 1021)
                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 802)
                              swift::constraints::ConstraintSystem::openType(swift::Type, swift::constraints::ConstraintLocatorBuilder, swift::DeclContext*, bool, swift::constraints::DependentTypeOpener*) (line 264)
                                swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                  (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 1050)
                                    swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 327)
                                      swift::ArchetypeBuilder::mapTypeIntoContext(swift::DeclContext*, swift::Type) (line 149)
                                        swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                        – Crash case at this location: stacks/0162-swift-type-transform.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                    validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                      swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                        swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                          swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                            swift::Expr::walk(swift::ASTWalker&) (line 53)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3053)
                                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                                    (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                      swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 5200)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                            swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                              swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                    swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                      swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                      – Crash case at this location: stacks/0439-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                        swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                          swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                            swift::Expr::walk(swift::ASTWalker&) (line 53)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3572)
                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1635)
                                  swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*)::ExprWalker::walkToExprPre(swift::Expr*) (line 1112)
                                    swift::TypeChecker::typeCheckClosureBody(swift::ClosureExpr*) (line 143)
                                      swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 473)
                                        swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 123)
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2526)
                                            void checkCircularity<swift::ClassDecl>(swift::TypeChecker&, swift::ClassDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::ClassDecl*>&) (line 132)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                                          – Crash case at this location: stacks/1051-swift-declcontext-lookupqualified.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                  swift::TypeBase::getCanonicalType() (line 775)
                                                    swift::TypeBase::getCanonicalType() (line 1403)
                                                    – Crash case at this location: stacks/0853-swift-typebase-getcanonicaltype.txt
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                    – Crash case at this location: stacks/0685-getselftypeforcontainer.txt
                                                      swift::ModuleFile::getType(swift::Fixnum<31u, unsigned int>) (line 8359)
                                                      – Crash case at this location: stacks/1627-swift-modulefile-gettype.txt
                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                    – Crash case at this location: stacks/0460-bool.txt
                                                      swift::ASTContext::setConformsTo(swift::CanType, swift::ProtocolDecl*, llvm::PointerIntPair<swift::ProtocolConformance*, 1u, bool, llvm::PointerLikeTypeTraits<swift::ProtocolConformance*> >) (line 102)
                                                      – Crash case at this location: stacks/1387-swift-astcontext-setconformsto.txt
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                  swift::TypeBase::getCanonicalType() (line 775)
                                                    swift::TypeBase::getCanonicalType() (line 1403)
                                                      llvm::BitstreamCursor::readRecord(unsigned int, llvm::SmallVectorImpl<unsigned long long>&, llvm::StringRef*) (line 671)
                                                      – Crash case at this location: stacks/1329-llvm-bitstreamcursor-readrecord.txt
                                                      void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                                      – Crash case at this location: stacks/1930-void.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 17223)
                    swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 2294)
                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3731)
                        (anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*) (line 1141)
                          matchWitness(swift::TypeChecker&, swift::NormalProtocolConformance*, swift::DeclContext*, swift::ValueDecl*, swift::ValueDecl*) (line 682)
                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                            – Crash case at this location: stacks/0865-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2287)
                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                      swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                        swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                        – Crash case at this location: stacks/1187-swift-type-walk.txt
              swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 353)
                swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 878)
                  swift::TypeChecker::typeCheckCondition(llvm::PointerUnion<swift::PatternBindingDecl*, swift::Expr*>&, swift::DeclContext*) (line 77)
                    swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                      swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                        swift::Expr::walk(swift::ASTWalker&) (line 53)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                              swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 13144)
                                (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 3459)
                                  (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 1457)
                                  – Crash case at this location: stacks/1098-no-stacktrace.txt
                swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 2241)
                  swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 554)
                    swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                      swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                        swift::Expr::walk(swift::ASTWalker&) (line 26)
                          swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*)::ExprWalker::walkToExprPre(swift::Expr*) (line 151)
                            swift::Expr::walk(swift::ASTWalker&) (line 76)
                              swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 9733)
                                (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 3459)
                                  (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 1457)
                                  – Crash case at this location: stacks/1164-no-stacktrace.txt
              swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 554)
                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                  swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                    swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                      swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                            – Crash case at this location: stacks/1200-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1000)
                  swift::constraints::ConstraintSystem::salvage(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::Expr*, bool) (line 1700)
                    swift::constraints::ConstraintSystem::diagnoseFailureFromConstraints(swift::Expr*) (line 1176)
                    – Crash case at this location: stacks/0502-swift-constraints-constraintsystem-diagnosefailurefromconstraints.txt
                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                  swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                    swift::Expr::walk(swift::ASTWalker&) (line 53)
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3572)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1679)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                              (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                    swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                          swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                  swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                        swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                          swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                          – Crash case at this location: stacks/0293-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                        resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                          (anonymous namespace)::RawMemoryObject::readBytes(unsigned long long, unsigned long long, unsigned char*) const (line 58)
                                          – Crash case at this location: stacks/0981-resolvetypedecl.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2711)
                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                            (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                  swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                        swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                              swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                      swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                          std::__1::__function::__func<swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const::$_0, std::__1::allocator<swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const::$_0>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 381)
                                                          – Crash case at this location: stacks/0319-std-function-func-swift-constraints-solution-computesubstitutions.txt
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 144)
                                                          – Crash case at this location: stacks/1202-swift-typechecker-validatedecl.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3053)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 5200)
                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                            – Crash case at this location: stacks/0403-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                    swift::Expr::walk(swift::ASTWalker&) (line 76)
                      (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                        swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                          (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                      swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                            swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                              swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                    swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                      swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                        swift::ClangModuleUnit::getImportedModules(llvm::SmallVectorImpl<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >&, swift::Module::ImportFilter) const (line 1607)
                                                        – Crash case at this location: stacks/1833-swift-clangmoduleunit-getimportedmodules.txt
                                                        void swift::constraints::ConstraintSystem::recordFailure<swift::Type&, swift::Type&>(swift::constraints::ConstraintLocator*, swift::constraints::Failure::FailureKind, swift::Type&&&, swift::Type&&&) (line 611)
                                                        – Crash case at this location: stacks/1838-void.txt
                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                  swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                    swift::Expr::walk(swift::ASTWalker&) (line 26)
                      swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*)::ExprWalker::walkToExprPre(swift::Expr*) (line 1112)
                        swift::TypeChecker::typeCheckClosureBody(swift::ClosureExpr*) (line 143)
                          swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 473)
                            swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 123)
                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                – Crash case at this location: stacks/1151-getselftypeforcontainer.txt
          swift::TypeChecker::typeCheckAbstractFunctionBody(swift::AbstractFunctionDecl*) (line 97)
            swift::TypeChecker::typeCheckFunctionBodyUntil(swift::FuncDecl*, swift::SourceLoc) (line 375)
              swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 353)
                swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 2049)
                  swift::TypeChecker::coercePatternToType(swift::Pattern*&, swift::DeclContext*, swift::Type, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 1202)
                    swift::TypeChecker::typeCheckExprPattern(swift::ExprPattern*, swift::DeclContext*, swift::Type) (line 949)
                      swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                        swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                          swift::Expr::walk(swift::ASTWalker&) (line 53)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                                (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                    (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                          swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                                swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                      swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                        swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                              swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                – Crash case at this location: stacks/1642-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 2564)
                  swift::TypeChecker::typeCheckForEachBinding(swift::DeclContext*, swift::ForEachStmt*) (line 78)
                    swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                      swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                        swift::Expr::walk(swift::ASTWalker&) (line 76)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                            – Crash case at this location: stacks/0785-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                                              swift::DiagnosticEngine::flushActiveDiagnostic() (line 4667)
                                              – Crash case at this location: stacks/0963-swift-diagnosticengine-flushactivediagnostic.txt
                                              std::__1::__function::__func<mapSignatureType(swift::ASTContext&, swift::Type)::$_3, std::__1::allocator<mapSignatureType(swift::ASTContext&, swift::Type)::$_3>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 21)
                                              – Crash case at this location: stacks/0306-std-function-func-mapsignaturetype.txt
                        swift::Expr::walk(swift::ASTWalker&) (line 53)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                              (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                  swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                          resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                          – Crash case at this location: stacks/0302-resolvetypedecl.txt
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                      swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                            swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                              swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 1968)
                                                              – Crash case at this location: stacks/1901-swift-constraints-constraintsystem-matchtypes.txt
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1679)
                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                      swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                            swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                            – Crash case at this location: stacks/0355-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 878)
                  swift::TypeChecker::typeCheckCondition(llvm::PointerUnion<swift::PatternBindingDecl*, swift::Expr*>&, swift::DeclContext*) (line 77)
                    swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                      swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                        swift::Expr::walk(swift::ASTWalker&) (line 53)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                              swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 13144)
                                (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 3459)
                                  (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 1457)
                                    (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 440)
                                    – Crash case at this location: stacks/1119-no-stacktrace.txt
                    swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                      swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                        swift::Expr::walk(swift::ASTWalker&) (line 53)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6498)
                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                    swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                      swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                            swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                              swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                              – Crash case at this location: stacks/0941-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6591)
                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                      swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                            swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                            – Crash case at this location: stacks/0586-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                        swift::Expr::walk(swift::ASTWalker&) (line 76)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                              swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                      – Crash case at this location: stacks/0835-no-stacktrace.txt
                swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 3898)
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                    swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                      swift::Expr::walk(swift::ASTWalker&) (line 26)
                        swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*)::ExprWalker::walkToExprPre(swift::Expr*) (line 1112)
                          swift::TypeChecker::typeCheckClosureBody(swift::ClosureExpr*) (line 143)
                            swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 473)
                              swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 123)
                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 17223)
                                  swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3731)
                                    (anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*) (line 1141)
                                      matchWitness(swift::TypeChecker&, swift::NormalProtocolConformance*, swift::DeclContext*, swift::ValueDecl*, swift::ValueDecl*) (line 682)
                                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                        – Crash case at this location: stacks/0362-clang-stmt-statisticsenabled.txt
                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2164)
                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 1857)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                                        – Crash case at this location: stacks/1154-swift-declcontext-lookupqualified.txt
                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2287)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1605)
                                      swift::NominalTypeDecl::computeType() (line 29)
                                        swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                                        – Crash case at this location: stacks/0432-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 11407)
                                    swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                                    – Crash case at this location: stacks/1250-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 53)
                                      swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                                      – Crash case at this location: stacks/1155-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6663)
                                  void (anonymous namespace)::DeclChecker::checkExplicitConformance<swift::EnumDecl>(swift::EnumDecl*, swift::Type) (line 138)
                                    swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3751)
                                      (anonymous namespace)::ConformanceChecker::resolveWitnessViaDerivation(swift::ValueDecl*) (line 159)
                                        swift::DerivedConformance::deriveEquatable(swift::TypeChecker&, swift::NominalTypeDecl*, swift::ValueDecl*) (line 1710)
                                        – Crash case at this location: stacks/1152-swift-derivedconformance-deriveequatable.txt
                                      (anonymous namespace)::ConformanceChecker::resolveWitnessViaDerivation(swift::ValueDecl*) (line 199)
                                        matchWitness(swift::TypeChecker&, swift::NormalProtocolConformance*, swift::DeclContext*, swift::ValueDecl*, swift::ValueDecl*) (line 682)
                                          swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                          – Crash case at this location: stacks/1088-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                                            swift::GenericSignature::get(llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>) (line 324)
                                            – Crash case at this location: stacks/0315-swift-genericsignature-get.txt
                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                          swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                            swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                              std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2552)
                                                          swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 194)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                              swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                swift::TypeBase::getCanonicalType() (line 775)
                                                                  swift::TypeBase::getCanonicalType() (line 1403)
                                                                  – Crash case at this location: stacks/1157-swift-typebase-getcanonicaltype.txt
                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                  swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                    swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                    – Crash case at this location: stacks/1280-swift-type-walk.txt
                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2287)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 48)
                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                                                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                                                              – Crash case at this location: stacks/1263-no-stacktrace.txt
                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 1857)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1582)
                                    finalizeGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::DeclContext*, swift::TypeChecker&) (line 522)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                                – Crash case at this location: stacks/1159-swift-declcontext-lookupqualified.txt
                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2078)
                                  swift::TypeChecker::addImplicitConstructors(swift::NominalTypeDecl*, llvm::SmallVectorImpl<swift::Decl*>&) (line 257)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 13583)
                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 186)
                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 266)
                                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                                          swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                                          – Crash case at this location: stacks/1173-swift-completegenerictyperesolver-resolvedependentmembertype.txt
                                  swift::TypeChecker::addImplicitConstructors(swift::NominalTypeDecl*, llvm::SmallVectorImpl<swift::Decl*>&) (line 754)
                                    createImplicitConstructor(swift::TypeChecker&, swift::NominalTypeDecl*, (anonymous namespace)::ImplicitConstructorKind) (line 476)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                        validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                          swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                            swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                              swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                                swift::Expr::walk(swift::ASTWalker&) (line 76)
                                                  (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                                    swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                          swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                            swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                  swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                    swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                    – Crash case at this location: stacks/1264-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                                        validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                            validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 2164)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 489)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                                                                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                                                    – Crash case at this location: stacks/1246-getselftypeforcontainer.txt
                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2695)
                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                            validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                    swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                            – Crash case at this location: stacks/1156-getselftypeforcontainer.txt
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                                            validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                                              swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                                                                  swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                                                                    swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                                                      swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                            – Crash case at this location: stacks/1260-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                            swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 554)
                              swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1000)
                                swift::constraints::ConstraintSystem::salvage(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::Expr*, bool) (line 1700)
                                  swift::constraints::ConstraintSystem::diagnoseFailureFromConstraints(swift::Expr*) (line 1176)
                                  – Crash case at this location: stacks/1254-swift-constraints-constraintsystem-diagnosefailurefromconstraints.txt
                              swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                  swift::Expr::walk(swift::ASTWalker&) (line 53)
                                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3572)
                                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1679)
                                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                            (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                                  swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                                        swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                              swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                                swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                      swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                          swift::ModuleFile::maybeReadConformance(swift::Type, llvm::BitstreamCursor&) (line 345)
                                                                          – Crash case at this location: stacks/1278-swift-modulefile-maybereadconformance.txt
                                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                              swift::Parser::parseExprList(swift::tok, swift::tok) (line 546)
                                                              – Crash case at this location: stacks/0360-swift-parser-parseexprlist.txt
                                                              swift::TuplePattern::createSimple(swift::ASTContext&, swift::SourceLoc, llvm::ArrayRef<swift::TuplePatternElt>, swift::SourceLoc, bool, swift::SourceLoc) (line 240)
                                                              – Crash case at this location: stacks/1253-swift-tuplepattern-createsimple.txt
                                                              swift::Lexer::lexOperatorIdentifier() (line 507)
                                                              – Crash case at this location: stacks/1020-swift-lexer-lexoperatoridentifier.txt
                                                              swift::Parser::parseIdentifier(swift::Identifier&, swift::SourceLoc&, swift::Diagnostic const&) (line 140)
                                                              – Crash case at this location: stacks/1284-swift-parser-parseidentifier.txt
                                                              swift::DiagnosticEngine::diagnose(swift::SourceLoc, swift::Diagnostic const&) (line 500)
                                                              – Crash case at this location: stacks/1275-swift-diagnosticengine-diagnose.txt
                                                              swift::ModuleFile::maybeReadConformance(swift::Type, llvm::BitstreamCursor&) (line 345)
                                                              – Crash case at this location: stacks/1262-swift-modulefile-maybereadconformance.txt
                                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1679)
                                      (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                        swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                              swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                      swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                        – Crash case at this location: stacks/0138-swift-modulefile-maybereadpattern.txt
                                  swift::Expr::walk(swift::ASTWalker&) (line 76)
                                    (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                      swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                            swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                              swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                    swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                      swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                        void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                                        – Crash case at this location: stacks/1289-void.txt
                              swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                                swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                                  swift::Expr::walk(swift::ASTWalker&) (line 76)
                                    swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 90)
                                      (anonymous namespace)::ExprRewriter::visitApplyExpr(swift::ApplyExpr*) (line 79)
                                        (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 585)
                                          (anonymous namespace)::ExprRewriter::coerceCallArguments(swift::Expr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 2391)
                                            getCallerDefaultArg(swift::TypeChecker&, swift::DeclContext*, swift::SourceLoc, swift::ConcreteDeclRef&, unsigned int) (line 61)
                                            – Crash case at this location: stacks/1265-getcallerdefaultarg.txt
                      swift::Expr::walk(swift::ASTWalker&) (line 53)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1635)
                          swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*)::ExprWalker::walkToExprPre(swift::Expr*) (line 1112)
                            swift::TypeChecker::typeCheckClosureBody(swift::ClosureExpr*) (line 143)
                              swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 473)
                                swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 123)
                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2287)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                                      – Crash case at this location: stacks/1274-resolvetypedecl.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3458)
                          swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*)::ExprWalker::walkToExprPre(swift::Expr*) (line 1112)
                            swift::TypeChecker::typeCheckClosureBody(swift::ClosureExpr*) (line 143)
                              swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 473)
                                swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 123)
                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 9408)
                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                    swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                      swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                      – Crash case at this location: stacks/1909-swift-type-walk.txt
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1000)
                    swift::constraints::ConstraintSystem::salvage(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::Expr*, bool) (line 300)
                      swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                        swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 182)
                            swift::constraints::ConstraintSystem::simplifyFixConstraint(swift::constraints::Fix, swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 993)
                              swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 113)
                                swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 125)
                                  connectedComponentsDFS(swift::constraints::ConstraintGraph&, swift::constraints::ConstraintGraphNode&, unsigned int, llvm::SmallVectorImpl<unsigned int>&) (line 75)
                                  – Crash case at this location: stacks/0343-connectedcomponentsdfs.txt
                        swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                          swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 4065)
                            swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                              swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                  swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 4065)
                                    swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 182)
                                        swift::constraints::ConstraintSystem::simplifyFixConstraint(swift::constraints::Fix, swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 993)
                                          swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 113)
                                            swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 125)
                                            – Crash case at this location: stacks/0482-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                    swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                      swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                        swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 182)
                            swift::constraints::ConstraintSystem::simplifyFixConstraint(swift::constraints::Fix, swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 993)
                              swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 113)
                                swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 125)
                                – Crash case at this location: stacks/1382-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                    swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                      swift::Expr::walk(swift::ASTWalker&) (line 53)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3217)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3159)
                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                      swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                            swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                              swift::Parser::parseDecl(llvm::SmallVectorImpl<swift::Decl*>&, swift::OptionSet<swift::Parser::ParseDeclFlags, unsigned int>) (line 2431)
                                                              – Crash case at this location: stacks/1896-swift-parser-parsedecl.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                              (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                    swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                          swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                  swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                        swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                          swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                            swift::TypeBase::getCanonicalType() (line 1057)
                                                            – Crash case at this location: stacks/1460-swift-typebase-getcanonicaltype.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1679)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                              (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                    swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                          swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                  swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                        swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                          swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                            swift::TypeBase::getAnyOptionalObjectType(swift::OptionalTypeKind&) (line 15)
                                                            – Crash case at this location: stacks/1438-swift-typebase-getanyoptionalobjecttype.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 5200)
                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                              llvm::FoldingSet<swift::DeclName::CompoundDeclName>::NodeEquals(llvm::FoldingSetImpl::Node*, llvm::FoldingSetNodeID const&, unsigned int, llvm::FoldingSetNodeID&) const (line 75)
                                              – Crash case at this location: stacks/1549-llvm-foldingset-swift-declname-compounddeclname-nodeequals.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3753)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6498)
                              (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                      swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                        swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                              swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                  swift::Parser::parseExprUnary(swift::Diag<>, bool) (line 805)
                                                  – Crash case at this location: stacks/1500-swift-parser-parseexprunary.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2687)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3323)
                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                      swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                            swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                              llvm::FoldingSet<swift::TupleType>::NodeEquals(llvm::FoldingSetImpl::Node*, llvm::FoldingSetNodeID const&, unsigned int, llvm::FoldingSetNodeID&) const (line 71)
                                                              – Crash case at this location: stacks/1728-llvm-foldingset-swift-tupletype-nodeequals.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2183)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                                  (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                    swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                          swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                            swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                  swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                    swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                      swift::ProtocolType::canonicalizeProtocols(llvm::SmallVectorImpl<swift::ProtocolDecl*>&) (line 1326)
                                                      – Crash case at this location: stacks/0892-swift-protocoltype-canonicalizeprotocols.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6567)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1935)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                                (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 5200)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                        swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                          swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                  swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                    swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 65)
                                                    – Crash case at this location: stacks/1933-swift-constraints-constraintsystem-solve.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3478)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1385)
                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                        existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                            swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                              swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                  swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                    swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                      std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                          getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                          – Crash case at this location: stacks/1355-getselftypeforcontainer.txt
                      swift::Expr::walk(swift::ASTWalker&) (line 76)
                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 108)
                            (anonymous namespace)::ConstraintGenerator::addMemberRefConstraints(swift::Expr*, swift::Expr*, swift::ValueDecl*) (line 246)
                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                  swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                    swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 1544)
                                      swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 708)
                                        swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                        – Crash case at this location: stacks/0535-swift-type-transform.txt
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                  swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                        swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                          swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                            llvm::FoldingSet<swift::TupleType>::NodeEquals(llvm::FoldingSetImpl::Node*, llvm::FoldingSetNodeID const&, unsigned int, llvm::FoldingSetNodeID&) const (line 36)
                                            – Crash case at this location: stacks/0547-llvm-foldingset-swift-tupletype-nodeequals.txt
                                          swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 802)
                                            swift::constraints::ConstraintSystem::openType(swift::Type, swift::constraints::ConstraintLocatorBuilder, swift::DeclContext*, bool, swift::constraints::DependentTypeOpener*) (line 264)
                                              swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                                (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 1050)
                                                  swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 335)
                                                  – Crash case at this location: stacks/0805-swift-constraints-constraintsystem-opengeneric.txt
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                            (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                  swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                        swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                              swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                      swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                          swift::GenericTypeParamType::get(unsigned int, unsigned int, swift::ASTContext const&) (line 585)
                                                          – Crash case at this location: stacks/1789-swift-generictypeparamtype-get.txt
                swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 1403)
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                    swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                      swift::Expr::walk(swift::ASTWalker&) (line 76)
                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                            (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                  swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                        swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                              swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                      swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                          swift::ModuleFile::maybeReadGenericParams(swift::DeclContext*, llvm::BitstreamCursor&, swift::GenericParamList*) (line 1910)
                                                          – Crash case at this location: stacks/0730-swift-modulefile-maybereadgenericparams.txt
                                                          swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 200)
                                                          – Crash case at this location: stacks/0916-swift-metatypetype-get.txt
                                                          swift::ModuleFile::maybeReadConformance(swift::Type, llvm::BitstreamCursor&) (line 345)
                                                          – Crash case at this location: stacks/0911-no-stacktrace.txt
                                                          swift::Parser::parseExprSequence(swift::Diag<>, bool, bool) (line 153)
                                                          – Crash case at this location: stacks/1660-swift-parser-parseexprsequence.txt
                                                          swift::DiagnosticEngine::diagnose(swift::SourceLoc, swift::Diagnostic const&) (line 500)
                                                          – Crash case at this location: stacks/1625-swift-diagnosticengine-diagnose.txt
                      swift::Expr::walk(swift::ASTWalker&) (line 53)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                              swift::constraints::ConstraintGraph::addConstraint(swift::constraints::Constraint*) (line 142)
                                              – Crash case at this location: stacks/0859-x.txt
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 7222)
                              swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 426)
                                swift::constraints::ConstraintSystem::getTypeOfReference(swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 655)
                                  swift::constraints::ConstraintSystem::openType(swift::Type, swift::constraints::ConstraintLocatorBuilder, swift::DeclContext*, bool, swift::constraints::DependentTypeOpener*) (line 264)
                                    swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                      (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 2165)
                                        swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 335)
                                        – Crash case at this location: stacks/0786-end.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6591)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                              (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                    swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                          swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                  swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                        swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                          swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                            swift::TypeChecker::coercePatternToType(swift::Pattern*&, swift::DeclContext*, swift::Type, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 2019)
                                                            – Crash case at this location: stacks/1499-swift-typechecker-coercepatterntotype.txt
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1000)
                    swift::constraints::ConstraintSystem::salvage(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::Expr*, bool) (line 817)
                      swift::constraints::ConstraintSystem::diagnoseFailureFromConstraints(swift::Expr*) (line 924)
                        getBoundTypesFromConstraint(swift::constraints::ConstraintSystem*, swift::Expr*, swift::constraints::Constraint*) (line 112)
                          swift::TypeBase::isEqual(swift::Type) (line 26)
                          – Crash case at this location: stacks/0800-swift-typebase-isequal.txt
                swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 1681)
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                    validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                              – Crash case at this location: stacks/1620-resolvetypedecl.txt
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                            swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                              existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                  swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                    swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                    – Crash case at this location: stacks/1894-swift-type-walk.txt
              swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 554)
                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                  swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                    swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                      swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                            – Crash case at this location: stacks/0294-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                              swift::TypeBase::isSpecialized() (line 122)
                              – Crash case at this location: stacks/0794-swift-typebase-isspecialized.txt
                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                  swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                    swift::Expr::walk(swift::ASTWalker&) (line 26)
                      swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*)::ExprWalker::walkToExprPre(swift::Expr*) (line 795)
                        swift::Expr::walk(swift::ASTWalker&) (line 53)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                              swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 9123)
                                (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 511)
                                  swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const (line 1204)
                                  – Crash case at this location: stacks/1455-swift-constraints-solution-computesubstitutions.txt
                    swift::Expr::walk(swift::ASTWalker&) (line 53)
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1679)
                        swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 2921)
                          (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 585)
                            (anonymous namespace)::ExprRewriter::coerceCallArguments(swift::Expr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 2391)
                              getCallerDefaultArg(swift::TypeChecker&, swift::DeclContext*, swift::SourceLoc, swift::ConcreteDeclRef&, unsigned int) (line 61)
                              – Crash case at this location: stacks/0750-getcallerdefaultarg.txt
                    swift::Expr::walk(swift::ASTWalker&) (line 76)
                      swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 2921)
                        (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 585)
                          (anonymous namespace)::ExprRewriter::coerceCallArguments(swift::Expr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 2391)
                            getCallerDefaultArg(swift::TypeChecker&, swift::DeclContext*, swift::SourceLoc, swift::ConcreteDeclRef&, unsigned int) (line 61)
                            – Crash case at this location: stacks/0496-getcallerdefaultarg.txt
                      swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 90)
                        (anonymous namespace)::ExprRewriter::visitApplyExpr(swift::ApplyExpr*) (line 79)
                          (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 1457)
                            (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 511)
                              swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const (line 1204)
                              – Crash case at this location: stacks/0671-swift-constraints-solution-computesubstitutions.txt
                              swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const (line 994)
                                swift::TypeChecker::substType(swift::Module*, swift::Type, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool) (line 36)
                                  swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const (line 122)
                                    swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                      std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 949)
                                        getMemberForBaseType(swift::Module*, swift::Type, swift::AssociatedTypeDecl*, swift::Identifier, swift::LazyResolver*) (line 409)
                                          swift::constraints::ConstraintSystem::assignFixedType(swift::TypeVariableType*, swift::Type, bool) (line 784)
                                          – Crash case at this location: stacks/1954-swift-constraints-constraintsystem-assignfixedtype.txt
                          (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 585)
                            (anonymous namespace)::ExprRewriter::coerceCallArguments(swift::Expr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 2391)
                              getCallerDefaultArg(swift::TypeChecker&, swift::DeclContext*, swift::SourceLoc, swift::ConcreteDeclRef&, unsigned int) (line 61)
                              – Crash case at this location: stacks/0292-swift-constraints-constraintgraph-addconstraint.txt
                      swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 4209)
                        (anonymous namespace)::ExprRewriter::applyMemberRefExpr(swift::Expr*, swift::Expr*, swift::SourceLoc, swift::SourceLoc, bool) (line 1100)
                          (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 3459)
                            (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 1457)
                              std::__1::__function::__func<swift::constraints::ConstraintSystem::simplifyType(swift::Type, llvm::SmallPtrSet<swift::TypeVariableType*, 16u>&)::$_5, std::__1::allocator<swift::constraints::ConstraintSystem::simplifyType(swift::Type, llvm::SmallPtrSet<swift::TypeVariableType*, 16u>&)::$_5>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 608)
                              – Crash case at this location: stacks/1148-std-function-func-swift-constraints-constraintsystem-simplifytype.txt
                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                  swift::Expr::walk(swift::ASTWalker&) (line 53)
                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1563)
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3914)
                        (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1192)
                            swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                              llvm::raw_fd_ostream::write_impl(char const*, unsigned long) (line 89)
                              – Crash case at this location: stacks/0335-llvm-raw-fd-ostream-write-impl.txt
                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1543)
                      (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1192)
                          swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                            swift::DiagnosticEngine::flushActiveDiagnostic() (line 4667)
                            – Crash case at this location: stacks/0898-swift-diagnosticengine-flushactivediagnostic.txt
                  swift::Expr::walk(swift::ASTWalker&) (line 26)
                    (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1192)
                        swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                        – Crash case at this location: stacks/0279-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                          swift::SILDeserializer::readSILInstruction(swift::SILFunction*, swift::SILBasicBlock*, unsigned int, llvm::SmallVectorImpl<unsigned long long>&) (line 12709)
                          – Crash case at this location: stacks/1858-llvm-densemap-swift-valuedecl.txt
                          swift::ModuleFile::getImportedModules(llvm::SmallVectorImpl<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >&, swift::Module::ImportFilter) (line 356)
                          – Crash case at this location: stacks/1293-swift-modulefile-getimportedmodules.txt
                          swift::Parser::parseExprUnary(swift::Diag<>, bool) (line 805)
                          – Crash case at this location: stacks/1271-swift-parser-parseexprunary.txt
                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1000)
                  swift::constraints::ConstraintSystem::salvage(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::Expr*, bool) (line 1700)
                    swift::constraints::ConstraintSystem::diagnoseFailureFromConstraints(swift::Expr*) (line 1176)
                    – Crash case at this location: stacks/0103-swift-constraints-constraintsystem-diagnosefailurefromconstraints.txt
                    – Crash case at this location: stacks/0781-swift-constraints-constraintsystem-diagnosefailurefromconstraints.txt
                      swift::constraints::ConstraintGraphNode::getAdjacency(swift::TypeVariableType*) (line 290)
                      – Crash case at this location: stacks/0273-swift-constraints-constraintgraphnode-getadjacency.txt
                  swift::constraints::ConstraintSystem::salvage(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::Expr*, bool) (line 817)
                    swift::constraints::ConstraintSystem::diagnoseFailureFromConstraints(swift::Expr*) (line 924)
                      getBoundTypesFromConstraint(swift::constraints::ConstraintSystem*, swift::Expr*, swift::constraints::Constraint*) (line 112)
                        swift::TypeBase::isEqual(swift::Type) (line 26)
                        – Crash case at this location: stacks/0731-swift-typebase-isequal.txt
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 420)
                          – Crash case at this location: stacks/0349-swift-typechecker-resolveidentifiertype.txt
                          swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 173)
                          – Crash case at this location: stacks/0567-swift-constraints-constraintsystem-matchtypes.txt
                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                  swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                    swift::Expr::walk(swift::ASTWalker&) (line 76)
                      (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                        swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 7574)
                          swift::constraints::ConstraintSystem::openType(swift::Type, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&, swift::DeclContext*, bool, swift::constraints::DependentTypeOpener*) (line 202)
                            swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                              (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 2165)
                                swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 335)
                                – Crash case at this location: stacks/1059-swift-constraints-constraintsystem-opengeneric.txt
                        swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                          swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                    llvm::FoldingSet<swift::GenericFunctionType>::NodeEquals(llvm::FoldingSetImpl::Node*, llvm::FoldingSetNodeID const&, unsigned int, llvm::FoldingSetNodeID&) const (line 86)
                                    – Crash case at this location: stacks/0353-resolvetypedecl.txt
                                    swift::PrintingDiagnosticConsumer::handleDiagnostic(swift::SourceManager&, swift::SourceLoc, swift::DiagnosticKind, llvm::StringRef, swift::DiagnosticInfo const&) (line 1288)
                                    – Crash case at this location: stacks/1128-swift-printingdiagnosticconsumer-handlediagnostic.txt
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                  existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                                – Crash case at this location: stacks/1573-resolvetypedecl.txt
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                    – Crash case at this location: stacks/0289-getselftypeforcontainer.txt
                                                                      swift::TypeAliasDecl* swift::ClangImporter::Implementation::createDeclWithClangNode<swift::TypeAliasDecl, swift::SourceLoc, swift::Identifier&, swift::SourceLoc&, swift::TypeLoc, swift::DeclContext*&>(swift::ClangNode, swift::SourceLoc&&, swift::Identifier&&&, swift::SourceLoc&&&, swift::TypeLoc&&, swift::DeclContext*&&&) (line 146)
                                                                      – Crash case at this location: stacks/0994-swift-typealiasdecl.txt
                                                                      swift::NominalTypeDecl::computeType() (line 185)
                                                                      – Crash case at this location: stacks/1252-swift-nominaltypedecl-computetype.txt
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                  swift::TypeBase::getCanonicalType() (line 775)
                                                                    swift::TypeBase::getCanonicalType() (line 1403)
                                                                    – Crash case at this location: stacks/1924-swift-typebase-getcanonicaltype.txt
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                      – Crash case at this location: stacks/0553-resolvetypedecl.txt
                        swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                              swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                      swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                        – Crash case at this location: stacks/0178-llvm-foldingset-swift-genericsignature-nodeequals.txt
                                          swift::ScopeInfo::addToScope(swift::ValueDecl*, swift::Parser&) (line 239)
                                          – Crash case at this location: stacks/1617-swift-scopeinfo-addtoscope.txt
                                          swift::BoundGenericType::get(swift::NominalTypeDecl*, swift::Type, llvm::ArrayRef<swift::Type>) (line 331)
                                          – Crash case at this location: stacks/1216-swift-boundgenerictype-get.txt
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 80)
                                          – Crash case at this location: stacks/1096-swift-typechecker-validatedecl.txt
                                          swift::DeclName::printPretty(llvm::raw_ostream&) const (line 139)
                                          – Crash case at this location: stacks/1212-swift-declname-printpretty.txt
                                          swift::ArchetypeBuilder::mapTypeIntoContext(swift::DeclContext*, swift::Type) (line 185)
                                          – Crash case at this location: stacks/0525-swift-archetypebuilder-maptypeintocontext.txt
                                          swift::ModuleFile::getDecl(swift::Fixnum<31u, unsigned int>, swift::Optional<swift::DeclContext*>) (line 9392)
                                          – Crash case at this location: stacks/0914-swift-modulefile-getdecl.txt
                                          swift::Parser::parseExprOrStmt(swift::ASTNode&) (line 401)
                                          – Crash case at this location: stacks/1126-swift-parser-parseexprorstmt.txt
                                          swift::Lexer::lexIdentifier() (line 183)
                                          – Crash case at this location: stacks/1227-swift-lexer-lexidentifier.txt
                                          swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 161)
                                          – Crash case at this location: stacks/0327-swift-typechecker-typecheckdecl.txt
                                          swift::Parser::skipSingle() (line 327)
                                          – Crash case at this location: stacks/1224-swift-parser-skipsingle.txt
                                          llvm::OnDiskChainedHashTable<swift::ModuleFile::DeclTableInfo>::find(swift::Identifier const&, swift::ModuleFile::DeclTableInfo*) (line 47)
                                          – Crash case at this location: stacks/1662-llvm-ondiskchainedhashtable-swift-modulefile-decltableinfo-find.txt
                                          swift::Parser::parseIdentifier(swift::Identifier&, swift::SourceLoc&, swift::Diagnostic const&) (line 140)
                                          – Crash case at this location: stacks/0328-swift-parser-parseidentifier.txt
                                          swift::Optional<swift::Diagnostic>::operator=(swift::Optional<swift::Diagnostic>&&) (line 245)
                                          – Crash case at this location: stacks/1215-swift-optional-swift-diagnostic-operator.txt
                        swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 7004)
                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1884)
                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 53)
                              swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                              – Crash case at this location: stacks/1285-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                        swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                          (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                      swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                            swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                              swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                    swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                      swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                      – Crash case at this location: stacks/0020-swift-typechecker-conformstoprotocol.txt
                                                        llvm::SmallVectorImpl<swift::DiagnosticArgument>::operator=(llvm::SmallVectorImpl<swift::DiagnosticArgument>&&) (line 285)
                                                        – Crash case at this location: stacks/1243-llvm-smallvectorimpl-swift-diagnosticargument-operator.txt
                                                        void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                                        – Crash case at this location: stacks/0830-void.txt
                                                        swift::Optional<swift::Diagnostic>::operator=(swift::Optional<swift::Diagnostic>&&) (line 245)
                                                        – Crash case at this location: stacks/1189-swift-optional-swift-diagnostic-operator.txt
                                                        swift::PrintingDiagnosticConsumer::handleDiagnostic(swift::SourceManager&, swift::SourceLoc, swift::DiagnosticKind, llvm::StringRef, swift::DiagnosticInfo const&) (line 1288)
                                                        – Crash case at this location: stacks/1207-swift-printingdiagnosticconsumer-handlediagnostic.txt
                                                        swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 2113)
                                                        – Crash case at this location: stacks/1167-swift-constraints-constraintsystem-opengeneric.txt
                                                        swift::GenericFunctionType::get(swift::GenericSignature*, swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 438)
                                                        – Crash case at this location: stacks/1442-swift-genericfunctiontype-get.txt
                                                        swift::TypeBase::getTypeOfMember(swift::Module*, swift::ValueDecl const*, swift::LazyResolver*, swift::Type) (line 1434)
                                                        – Crash case at this location: stacks/1203-swift-typebase-gettypeofmember.txt
                                                        swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 133)
                                                        – Crash case at this location: stacks/1606-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                                                        swift::ModuleFile::getImportedModules(llvm::SmallVectorImpl<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >&, swift::Module::ImportFilter) (line 356)
                                                        – Crash case at this location: stacks/1331-swift-modulefile-getimportedmodules.txt
                                                        swift::ModuleFile::getDecl(swift::Fixnum<31u, unsigned int>, swift::Optional<swift::DeclContext*>) (line 9392)
                                                        – Crash case at this location: stacks/1208-swift-modulefile-getdecl.txt
                                                        swift::TypeDecl::getDeclaredType() const (line 38)
                                                        – Crash case at this location: stacks/0667-swift-typedecl-getdeclaredtype.txt
                                                        swift::ASTPrinter::printTextImpl(llvm::StringRef) (line 254)
                                                        – Crash case at this location: stacks/1764-swift-astprinter-printtextimpl.txt
                                                        swift::Lexer::getLocForEndOfToken(swift::SourceManager const&, swift::SourceLoc) (line 535)
                                                        – Crash case at this location: stacks/0922-swift-lexer-getlocforendoftoken.txt
                                                        swift::Parser::parseExprPostfix(swift::Diag<>, bool) (line 350)
                                                        – Crash case at this location: stacks/1204-swift-parser-parseexprpostfix.txt
                                                        swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 3521)
                                                        – Crash case at this location: stacks/1047-no-stacktrace.txt
                    swift::Expr::walk(swift::ASTWalker&) (line 53)
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                    swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                      swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                            swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                              swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                swift::constraints::ConstraintSystem::simplifyConformsToConstraint(swift::Type, swift::ProtocolDecl*, swift::constraints::ConstraintLocatorBuilder, unsigned int, bool) (line 50)
                                                – Crash case at this location: stacks/1882-swift-constraints-constraintsystem-simplifyconformstoconstraint.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                              (anonymous namespace)::ExprRewriter::coerceToType(swift::Expr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 57)
                                              – Crash case at this location: stacks/1210-no-stacktrace.txt
                                              swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 133)
                                              – Crash case at this location: stacks/1747-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1935)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6696)
                                    swift::ASTVisitor<(anonymous namespace)::Traversal, swift::Expr*, swift::Stmt*, void, swift::Pattern*, bool, void>::visit(swift::Pattern*) (line 881)
                                      swift::ASTVisitor<(anonymous namespace)::Traversal, swift::Expr*, swift::Stmt*, void, swift::Pattern*, bool, void>::visit(swift::Pattern*) (line 1390)
                                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                            – Crash case at this location: stacks/0558-ioctl.txt
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1385)
                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9229)
                              – Crash case at this location: stacks/0334-swift-astvisitor.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 246)
                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                            (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                  swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                        swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                              swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                      swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                          swift::ParenType::get(swift::ASTContext const&, swift::Type) (line 278)
                                                          – Crash case at this location: stacks/1002-swift-parentype-get.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6474)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1935)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6591)
                                  (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                    swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                      (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                            swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                                  swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                        swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                          swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                  swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                    swift::Parser::parseExprArray(swift::SourceLoc, swift::Expr*) (line 669)
                                                                    – Crash case at this location: stacks/0792-swift-parser-parseexprarray.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1935)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1679)
                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                      swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                            swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                              swift::Parser::consumeToken() (line 68)
                                                              – Crash case at this location: stacks/0924-swift-parser-consumetoken.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 246)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                              (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                    swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                          swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                  swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                        swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                          swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                            swift::constraints::ConstraintSystem::addTypeVariableConstraintsToWorkList(swift::TypeVariableType*) (line 52)
                                                            – Crash case at this location: stacks/1239-swift-constraints-constraintsystem-addtypevariableconstraintstoworklist.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 5200)
                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                              void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                              – Crash case at this location: stacks/1360-void.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                                (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                        swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                          swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                  swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                  – Crash case at this location: stacks/0472-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3478)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1385)
                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                      swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                            swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                              llvm::OnDiskChainedHashTable<swift::ModuleFile::DeclTableInfo>::find(swift::Identifier const&, swift::ModuleFile::DeclTableInfo*) (line 206)
                                                              – Crash case at this location: stacks/1248-llvm-ondiskchainedhashtable-swift-modulefile-decltableinfo-find.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2687)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                              (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                      swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                        swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                              swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                  swift::ASTPrinter::printTextImpl(llvm::StringRef) (line 254)
                                                  – Crash case at this location: stacks/1437-swift-astprinter-printtextimpl.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                              (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                    swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                          swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                  swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                        swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                          swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                            swift::TypeChecker::buildArrayInjectionFnRef(swift::DeclContext*, swift::ArraySliceType*, swift::Type, swift::SourceLoc) (line 292)
                                                            – Crash case at this location: stacks/1770-swift-typechecker-buildarrayinjectionfnref.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2687)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1679)
                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                      swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                            swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                              swift::Parser::parseExprPostfix(swift::Diag<>, bool) (line 326)
                                                              – Crash case at this location: stacks/1846-swift-parser-parseexprpostfix.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3217)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3135)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                              (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                  swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                          resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                            swift::ScopeInfo::addToScope(swift::ValueDecl*, swift::Parser&) (line 239)
                                            – Crash case at this location: stacks/0903-swift-scopeinfo-addtoscope.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1679)
                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                            (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                  swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                        swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                              swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                      swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                          swift::constraints::ConstraintSystem::assignFixedType(swift::TypeVariableType*, swift::Type, bool) (line 827)
                                                          – Crash case at this location: stacks/1065-swift-constraints-constraintsystem-assignfixedtype.txt
                                                          llvm::SmallVectorImpl<swift::DiagnosticArgument>::operator=(llvm::SmallVectorImpl<swift::DiagnosticArgument>&&) (line 285)
                                                          – Crash case at this location: stacks/1663-llvm-smallvectorimpl-swift-diagnosticargument-operator.txt
                                                          swift::constraints::Solution::Solution(swift::constraints::Solution&&) (line 319)
                                                          – Crash case at this location: stacks/1552-swift-constraints-solution-solution.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3478)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 135)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1385)
                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9229)
                                llvm::FoldingSet<swift::TupleType>::NodeEquals(llvm::FoldingSetImpl::Node*, llvm::FoldingSetNodeID const&, unsigned int, llvm::FoldingSetNodeID&) const (line 36)
                                – Crash case at this location: stacks/1821-llvm-foldingset-swift-tupletype-nodeequals.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1361)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2971)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 246)
                                (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                    (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                          swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                                swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                      swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                        swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                              swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                  swift::Parser::parseToken(swift::tok, swift::SourceLoc&, swift::Diagnostic const&) (line 96)
                                                                  – Crash case at this location: stacks/1165-swift-parser-parsetoken.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3572)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                              swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                        swift::TypeBase::getCanonicalType() (line 1191)
                                        – Crash case at this location: stacks/1757-swift-typebase-getcanonicaltype.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2687)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                                (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                        swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                          swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                  swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                    swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6984)
                                                    – Crash case at this location: stacks/1739-swift-constraints-constraintsystem-solvesimplified.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1385)
                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                            swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                  swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                    existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                      – Crash case at this location: stacks/1461-getselftypeforcontainer.txt
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9229)
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 5092)
                            – Crash case at this location: stacks/0476-swift-typechecker-validatedecl.txt
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1290)
                            swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                            – Crash case at this location: stacks/0891-a.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2711)
                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                            (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                  swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                        swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                              swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                      swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                          swift::ASTPrinter::printName(swift::Identifier) (line 2979)
                                                          – Crash case at this location: stacks/1654-swift-astprinter-printname.txt
                                                          swift::constraints::ConstraintGraph::addConstraint(swift::constraints::Constraint*) (line 142)
                                                          – Crash case at this location: stacks/0866-swift-constraints-constraintgraph-addconstraint.txt
                                                          swift::Parser::~Parser() (line 69)
                                                          – Crash case at this location: stacks/0364-swift-typechecker-isrepresentableinobjc.txt
                                                          swift::Type::walk(swift::TypeWalker&) const (line 75)
                                                          – Crash case at this location: stacks/1174-swift-type-walk.txt
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                            swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                  swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                    existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                  swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                    swift::TypeBase::getCanonicalType() (line 775)
                                                                      swift::TypeBase::getCanonicalType() (line 1403)
                                                                      – Crash case at this location: stacks/1542-swift-typebase-getcanonicaltype.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                  swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                        swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                          swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                            swift::TypeChecker::getProtocol(swift::SourceLoc, swift::KnownProtocolKind) (line 36)
                                            – Crash case at this location: stacks/0313-swift-typechecker-getprotocol.txt
                                            bool swift::Parser::parseIdentifier<>(swift::Identifier&, swift::SourceLoc&, swift::Diag<>) (line 134)
                                            – Crash case at this location: stacks/1235-bool.txt
                                            swift::CompleteGenericTypeResolver::resolveGenericTypeParamType(swift::GenericTypeParamType*) (line 18)
                                            – Crash case at this location: stacks/1232-swift-completegenerictyperesolver-resolvegenerictypeparamtype.txt
                                            swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 484)
                                            – Crash case at this location: stacks/1039-swift-typechecker-conformstoprotocol.txt
                                            swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                            – Crash case at this location: stacks/1233-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                                            swift::Parser::parseBraceItems(llvm::SmallVectorImpl<swift::ASTNode>&, swift::BraceItemListKind, swift::BraceItemListKind) (line 3673)
                                            – Crash case at this location: stacks/1090-swift-parser-parsebraceitems.txt
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 5200)
                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                  swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                        swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                          swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                            swift::Parser::parseExprPostfix(swift::Diag<>, bool) (line 394)
                                            – Crash case at this location: stacks/1667-swift-parser-parseexprpostfix.txt
                                            swift::constraints::ConstraintLocator::Profile(llvm::FoldingSetNodeID&, swift::Expr*, llvm::ArrayRef<swift::constraints::ConstraintLocator::PathElement>) (line 325)
                                            – Crash case at this location: stacks/1412-swift-constraints-constraintlocator-profile.txt
                                            swift::PrintingDiagnosticConsumer::handleDiagnostic(swift::SourceManager&, swift::SourceLoc, swift::DiagnosticKind, llvm::StringRef, swift::DiagnosticInfo const&) (line 1288)
                                            – Crash case at this location: stacks/0959-swift-printingdiagnosticconsumer-handlediagnostic.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                            (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                  swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                        swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                              swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                      swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                          swift::DiagnosticEngine::flushActiveDiagnostic() (line 4667)
                                                          – Crash case at this location: stacks/0389-swift-diagnosticengine-flushactivediagnostic.txt
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                  swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                        swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                          swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                            swift::TypeDecl::getDeclaredType() const (line 78)
                                            – Crash case at this location: stacks/1385-swift-typedecl-getdeclaredtype.txt
              swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 473)
                swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 123)
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 3728)
                    void (anonymous namespace)::DeclChecker::checkExplicitConformance<swift::StructDecl>(swift::StructDecl*, swift::Type) (line 138)
                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3731)
                        (anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*) (line 1141)
                          matchWitness(swift::TypeChecker&, swift::NormalProtocolConformance*, swift::DeclContext*, swift::ValueDecl*, swift::ValueDecl*) (line 682)
                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                            – Crash case at this location: stacks/0369-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                              llvm::PrettyStackTraceEntry::~PrettyStackTraceEntry() (line 34)
                              – Crash case at this location: stacks/0609-llvm-prettystacktraceentry-prettystacktraceentry.txt
                              swift::ClangModuleUnit::getAdapterModule() const (line 71)
                              – Crash case at this location: stacks/0837-swift-clangmoduleunit-getadaptermodule.txt
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 80)
                              – Crash case at this location: stacks/0987-swift-typechecker-validatedecl.txt
                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3691)
                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                          swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                            swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                  swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                    std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                    swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                      swift::TypeBase::getCanonicalType() (line 775)
                                                        swift::TypeBase::getCanonicalType() (line 1403)
                                                        – Crash case at this location: stacks/1541-swift-typebase-getcanonicaltype.txt
                                  swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                    std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                        getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                        – Crash case at this location: stacks/1917-getselftypeforcontainer.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                            validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 48)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                          swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                            swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                  swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                    std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                    swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                      swift::TypeBase::getCanonicalType() (line 775)
                                                                        swift::TypeBase::getCanonicalType() (line 1403)
                                                                        – Crash case at this location: stacks/1398-swift-typebase-getcanonicaltype.txt
                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                            validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                      – Crash case at this location: stacks/0645-resolvetypedecl.txt
                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1192)
                                    swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                                    – Crash case at this location: stacks/1166-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 635)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1192)
                                    swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                                    – Crash case at this location: stacks/0784-no-stacktrace.txt
                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1192)
                                      swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                                      – Crash case at this location: stacks/0734-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                    – Crash case at this location: stacks/0743-resolvetypedecl.txt
                                    – Crash case at this location: stacks/0836-resolvetypedecl.txt
                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 48)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 3885)
                                                                        – Crash case at this location: stacks/1019-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                      – Crash case at this location: stacks/1081-getselftypeforcontainer.txt
                                                                        swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 738)
                                                                        – Crash case at this location: stacks/0767-swift-constraints-constraintsystem-solve.txt
                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 569)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 48)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                    – Crash case at this location: stacks/0420-getselftypeforcontainer.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 642)
                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 186)
                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                                    swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                                    – Crash case at this location: stacks/1621-swift-completegenerictyperesolver-resolvedependentmembertype.txt
                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 266)
                                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                                          swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                                          – Crash case at this location: stacks/1323-swift-completegenerictyperesolver-resolvedependentmembertype.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2164)
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                              swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                  vtable for llvm::PrettyStackTraceEntry (line 16)
                                                                                  – Crash case at this location: stacks/1705-vtable.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 9408)
                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 271)
                        swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                            swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                              swift::Expr::walk(swift::ASTWalker&) (line 76)
                                (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                        swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                          swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                  swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                    swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 200)
                                                    – Crash case at this location: stacks/1928-swift-metatypetype-get.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                      validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                          validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                      – Crash case at this location: stacks/0681-swift-declcontext-lookupqualified.txt
                                        swift::ModuleFile::getDecl(swift::Fixnum<31u, unsigned int>, swift::Optional<swift::DeclContext*>) (line 7248)
                                        – Crash case at this location: stacks/1009-swift-modulefile-getdecl.txt
                                        swift::Parser::parseTypeSimple(swift::Diag<>) (line 368)
                                        – Crash case at this location: stacks/1856-swift-parser-parsetypesimple.txt
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                          swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                            swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                            – Crash case at this location: stacks/0682-swift-type-walk.txt
                      validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                        swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1000)
                            swift::constraints::ConstraintSystem::salvage(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::Expr*, bool) (line 300)
                              swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                  swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                    swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                      swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                        swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 3230)
                                          swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                            swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 3230)
                                              swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                                swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                                  swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                                    swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 182)
                                                        swift::constraints::ConstraintSystem::simplifyFixConstraint(swift::constraints::Fix, swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 993)
                                                          swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 113)
                                                            swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 125)
                                                            – Crash case at this location: stacks/0386-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                            swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                              swift::Expr::walk(swift::ASTWalker&) (line 76)
                                (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                        swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                          swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                  swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                    swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 200)
                                                    – Crash case at this location: stacks/1231-swift-metatypetype-get.txt
                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                            swift::Expr::walk(swift::ASTWalker&) (line 26)
                              (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                  – Crash case at this location: stacks/0485-swift-declcontext-lookupqualified.txt
                                    void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                    – Crash case at this location: stacks/0803-void.txt
                                    swift::constraints::Solution::Solution(swift::constraints::Solution&&) (line 319)
                                    – Crash case at this location: stacks/1572-swift-constraints-solution-solution.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                        swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                          swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                            std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 785)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                – Crash case at this location: stacks/1359-getselftypeforcontainer.txt
                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                  swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                    swift::TypeBase::getCanonicalType() (line 775)
                                                      swift::TypeBase::getCanonicalType() (line 1403)
                                                        swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 200)
                                                        – Crash case at this location: stacks/1482-swift-metatypetype-get.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 17223)
                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3731)
                        (anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*) (line 1141)
                          matchWitness(swift::TypeChecker&, swift::NormalProtocolConformance*, swift::DeclContext*, swift::ValueDecl*, swift::ValueDecl*) (line 1021)
                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 802)
                              swift::constraints::ConstraintSystem::openType(swift::Type, swift::constraints::ConstraintLocatorBuilder, swift::DeclContext*, bool, swift::constraints::DependentTypeOpener*) (line 264)
                                swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                  (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 1050)
                                    swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 327)
                                      swift::ArchetypeBuilder::mapTypeIntoContext(swift::DeclContext*, swift::Type) (line 149)
                                        swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                        – Crash case at this location: stacks/1080-swift-type-transform.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 3728)
                      void (anonymous namespace)::DeclChecker::checkExplicitConformance<swift::StructDecl>(swift::StructDecl*, swift::Type) (line 138)
                        swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3731)
                          (anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*) (line 1141)
                            matchWitness(swift::TypeChecker&, swift::NormalProtocolConformance*, swift::DeclContext*, swift::ValueDecl*, swift::ValueDecl*) (line 1021)
                              swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 802)
                                swift::constraints::ConstraintSystem::openType(swift::Type, swift::constraints::ConstraintLocatorBuilder, swift::DeclContext*, bool, swift::constraints::DependentTypeOpener*) (line 264)
                                  swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                    (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 1050)
                                      swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 327)
                                        swift::ArchetypeBuilder::mapTypeIntoContext(swift::DeclContext*, swift::Type) (line 149)
                                          swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                          – Crash case at this location: stacks/0753-swift-type-transform.txt
                              swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 1252)
                                swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 327)
                                  swift::ArchetypeBuilder::mapTypeIntoContext(swift::DeclContext*, swift::Type) (line 149)
                                    swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                    – Crash case at this location: stacks/0698-swift-type-transform.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2695)
                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 865)
                          swift::NominalTypeDecl::computeType() (line 29)
                            swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                              swift::NominalType::get(swift::NominalTypeDecl*, swift::Type, swift::ASTContext const&) (line 53)
                              – Crash case at this location: stacks/1005-swift-nominaltype-get.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2164)
                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 544)
                          (anonymous namespace)::DeclChecker::visitAssociatedTypeDecl(swift::AssociatedTypeDecl*) (line 102)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                  swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                    existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 441)
                                        (anonymous namespace)::DeclChecker::visitAssociatedTypeDecl(swift::AssociatedTypeDecl*) (line 102)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                    swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 1036)
                                                      swift::TypeBase::getTypeOfMember(swift::Module*, swift::ValueDecl const*, swift::LazyResolver*, swift::Type) (line 393)
                                                        swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                                          std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 949)
                                                          – Crash case at this location: stacks/0676-std-function-func-swift-type-subst.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6663)
                      void (anonymous namespace)::DeclChecker::checkExplicitConformance<swift::EnumDecl>(swift::EnumDecl*, swift::Type) (line 138)
                        swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3731)
                          (anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*) (line 1141)
                            matchWitness(swift::TypeChecker&, swift::NormalProtocolConformance*, swift::DeclContext*, swift::ValueDecl*, swift::ValueDecl*) (line 3559)
                              swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const (line 432)
                                swift::ArchetypeBuilder::mapTypeIntoContext(swift::DeclContext*, swift::Type) (line 149)
                                  swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                    std::__1::__function::__func<swift::ArchetypeBuilder::mapTypeIntoContext(swift::Module*, swift::GenericParamList*, swift::Type)::$_3, std::__1::allocator<swift::ArchetypeBuilder::mapTypeIntoContext(swift::Module*, swift::GenericParamList*, swift::Type)::$_3>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 331)
                                      llvm::FoldingSetNodeID::operator==(llvm::FoldingSetNodeID const&) const (line 40)
                                      – Crash case at this location: stacks/1082-llvm-foldingsetnodeid-operator.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 8191)
                      (anonymous namespace)::RawValueKey::RawValueKey(swift::LiteralExpr*) (line 174)
                        swift::IntegerLiteralExpr::getValue() const (line 43)
                        – Crash case at this location: stacks/0720-szone-malloc-should-clear.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5734)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                – Crash case at this location: stacks/0654-swift-declcontext-lookupqualified.txt
                                  swift::ASTContext::getIdentifier(llvm::StringRef) const (line 175)
                                  – Crash case at this location: stacks/0656-swift-astcontext-getidentifier.txt
                                  void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                  – Crash case at this location: stacks/0519-void.txt
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                  swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 238)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                                  swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                    swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                    – Crash case at this location: stacks/1297-swift-type-walk.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 271)
                      swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                        swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                          swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                            swift::Expr::walk(swift::ASTWalker&) (line 53)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                  swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                        swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                          swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                            llvm::FoldingSet<swift::TupleType>::NodeEquals(llvm::FoldingSetImpl::Node*, llvm::FoldingSetNodeID const&, unsigned int, llvm::FoldingSetNodeID&) const (line 71)
                                                            – Crash case at this location: stacks/1504-llvm-foldingset-swift-tupletype-nodeequals.txt
                        swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                          swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                            swift::Expr::walk(swift::ASTWalker&) (line 53)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3458)
                                swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*)::ExprWalker::walkToExprPre(swift::Expr*) (line 1112)
                                  swift::TypeChecker::typeCheckClosureBody(swift::ClosureExpr*) (line 143)
                                    swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 554)
                                      swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                        swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                          swift::Expr::walk(swift::ASTWalker&) (line 53)
                                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                                              (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                                swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                      swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                        swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                              swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                  swift::Parser::parseExprIdentifier() (line 1092)
                                                                  – Crash case at this location: stacks/1286-swift-parser-parseexpridentifier.txt
                                                                  swift::GenericParamList::addNestedArchetypes(swift::ArchetypeType*, llvm::SmallPtrSetImpl<swift::ArchetypeType*>&, llvm::SmallVectorImpl<swift::ArchetypeType*>&) (line 153)
                                                                  – Crash case at this location: stacks/0316-swift-genericparamlist-addnestedarchetypes.txt
                                      swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                                        swift::Expr::walk(swift::ASTWalker&) (line 26)
                                          (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                                  swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                    swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                    – Crash case at this location: stacks/1153-swift-type-walk.txt
                                    swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 353)
                                      swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 3898)
                                        swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                          swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                            swift::Expr::walk(swift::ASTWalker&) (line 53)
                                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                                                (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                        swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                          swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                  swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                    swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 133)
                                                                    – Crash case at this location: stacks/1269-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                                                                    std::__1::__function::__func<swift::constraints::ConstraintSystem::simplifyType(swift::Type, llvm::SmallPtrSet<swift::TypeVariableType*, 16u>&)::$_5, std::__1::allocator<swift::constraints::ConstraintSystem::simplifyType(swift::Type, llvm::SmallPtrSet<swift::TypeVariableType*, 16u>&)::$_5>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 608)
                                                                    – Crash case at this location: stacks/1214-std-function-func-swift-constraints-constraintsystem-simplifytype.txt
                            swift::Expr::walk(swift::ASTWalker&) (line 26)
                              swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*)::ExprWalker::walkToExprPre(swift::Expr*) (line 1112)
                                swift::TypeChecker::typeCheckClosureBody(swift::ClosureExpr*) (line 143)
                                  swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 554)
                                    swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                      swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                        swift::Expr::walk(swift::ASTWalker&) (line 53)
                                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1361)
                                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 246)
                                                (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                                    (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                                          swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                                                swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                                      swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                                        swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                              swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                                swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                                – Crash case at this location: stacks/1211-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                  – Crash case at this location: stacks/0399-resolvetypedecl.txt
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                                                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 186)
                                                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 2539)
                                                        (anonymous namespace)::TypeResolver::resolveASTFunctionType(swift::FunctionTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::AnyFunctionType::ExtInfo) (line 80)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                                                swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                                                – Crash case at this location: stacks/1311-swift-completegenerictyperesolver-resolvedependentmembertype.txt
                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                                                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 186)
                                                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 266)
                                                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                                                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                        validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                                                  swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                                                    swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 115)
                                                                    – Crash case at this location: stacks/1841-swift-metatypetype-get.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2287)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1605)
                        swift::NominalTypeDecl::computeType() (line 29)
                          swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                          – Crash case at this location: stacks/0552-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1557)
                        checkGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::TypeChecker&, swift::DeclContext*) (line 146)
                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                      applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                        swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 750)
                                          swift::TypeChecker::checkSubstitutions(llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, llvm::DenseMap<swift::SubstitutableType*, llvm::SmallVector<swift::ProtocolConformance*, 2u>, llvm::DenseMapInfo<swift::SubstitutableType*> >&, swift::DeclContext*, swift::SourceLoc, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >*) (line 300)
                                          – Crash case at this location: stacks/0351-swift-typechecker-checksubstitutions.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 642)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 569)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                        – Crash case at this location: stacks/0560-swift-declcontext-lookupqualified.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 53)
                        swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                        – Crash case at this location: stacks/0379-swift-type-transform.txt
                        – Crash case at this location: stacks/0542-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                          swift::Lexer::lexIdentifier() (line 183)
                          – Crash case at this location: stacks/0381-swift-lexer-lexidentifier.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 1857)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1605)
                        swift::NominalTypeDecl::computeType() (line 29)
                          swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                            swift::DiagnosticEngine::flushActiveDiagnostic() (line 4667)
                            – Crash case at this location: stacks/0610-swift-diagnosticengine-flushactivediagnostic.txt
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 476)
                            collectRequirements(swift::ArchetypeBuilder&, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::SmallVectorImpl<swift::Requirement>&) (line 910)
                              swift::resolvePotentialArchetypeToType(swift::ArchetypeBuilder&, llvm::ArrayRef<swift::GenericTypeParamType*>, swift::ArchetypeBuilder::PotentialArchetype*) (line 53)
                                swift::resolvePotentialArchetypeToType(swift::ArchetypeBuilder&, llvm::ArrayRef<swift::GenericTypeParamType*>, swift::ArchetypeBuilder::PotentialArchetype*) (line 334)
                                  swift::ArchetypeBuilder::resolveArchetype(swift::Type) (line 25)
                                  – Crash case at this location: stacks/0352-swift-archetypebuilder-resolvearchetype.txt
                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                          – Crash case at this location: stacks/0570-swift-declcontext-lookupqualified.txt
                                          – Crash case at this location: stacks/1201-swift-declcontext-lookupqualified.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 11407)
                      swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                        swift::Lexer::lexIdentifier() (line 183)
                        – Crash case at this location: stacks/1115-swift-lexer-lexidentifier.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                    swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                      swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                        swift::AvailabilityAttr::isUnavailable(swift::Decl const*) (line 22)
                                                        – Crash case at this location: stacks/1397-swift-availabilityattr-isunavailable.txt
                                                        swift::Module::lookupConformance(swift::Type, swift::ProtocolDecl*, swift::LazyResolver*) (line 2889)
                                                        – Crash case at this location: stacks/1013-swift-module-lookupconformance.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                      swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                        swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                          std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 139)
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 2394)
                              swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                swift::PrintingDiagnosticConsumer::handleDiagnostic(swift::SourceManager&, swift::SourceLoc, swift::DiagnosticKind, llvm::StringRef, swift::DiagnosticInfo const&) (line 1288)
                                – Crash case at this location: stacks/0408-swift-printingdiagnosticconsumer-handlediagnostic.txt
                      swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                        std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 139)
                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 2394)
                            swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                            – Crash case at this location: stacks/0551-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                            – Crash case at this location: stacks/0751-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 1598)
                    swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 93)
                    – Crash case at this location: stacks/0416-swift-typechecker-conformstoprotocol.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 22825)
                      swift::PolymorphicFunctionType::get(swift::Type, swift::Type, swift::GenericParamList*, swift::AnyFunctionType::ExtInfo const&) (line 93)
                        swift::TypeBase::operator new(unsigned long, swift::ASTContext const&, swift::AllocationArena, unsigned int) (line 78)
                        – Crash case at this location: stacks/1349-swift-typebase-operator.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 927)
                        swift::TupleType::get(llvm::ArrayRef<swift::TupleTypeElt>, swift::ASTContext const&) (line 317)
                        – Crash case at this location: stacks/0929-swift-tupletype-get.txt
                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                          validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 3294)
                                swift::TupleType::get(llvm::ArrayRef<swift::TupleTypeElt>, swift::ASTContext const&) (line 462)
                                – Crash case at this location: stacks/1636-swift-tupletype-get.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 21588)
                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 220)
                      – Crash case at this location: stacks/1378-swift-typechecker-typecheckpattern.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                            swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                              swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                  swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                    swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                      std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                                swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                  swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                  – Crash case at this location: stacks/1850-swift-type-walk.txt
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                                                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                      validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                              swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                – Crash case at this location: stacks/0478-swift-type-walk.txt
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                    swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                      swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                      – Crash case at this location: stacks/0738-swift-type-walk.txt
                                                        swift::TypeBase::getTypeVariables(llvm::SmallVectorImpl<swift::TypeVariableType*>&) (line 113)
                                                        – Crash case at this location: stacks/1473-swift-typebase-gettypevariables.txt
                                                        swift::TypeChecker::callWitness(swift::Expr*, swift::DeclContext*, swift::ProtocolDecl*, swift::ProtocolConformance*, swift::DeclName, llvm::MutableArrayRef<swift::Expr*>, swift::Diag<>) (line 816)
                                                        – Crash case at this location: stacks/1391-swift-typechecker-callwitness.txt
                                                        swift::ClangModuleUnit::getImportedModules(llvm::SmallVectorImpl<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >&, swift::Module::ImportFilter) const (line 1576)
                                                        – Crash case at this location: stacks/0824-x.txt
                                                        swift::TypeBase::getAnyOptionalObjectType(swift::OptionalTypeKind&) (line 15)
                                                        – Crash case at this location: stacks/1748-swift-typebase-getanyoptionalobjecttype.txt
                                                        swift::TypeBase::getCanonicalType() (line 1734)
                                                        – Crash case at this location: stacks/1427-swift-typebase-getcanonicaltype.txt
                                                        swift::ModuleFile::maybeReadGenericParams(swift::DeclContext*, llvm::BitstreamCursor&, swift::GenericParamList*) (line 1910)
                                                        – Crash case at this location: stacks/1450-swift-modulefile-maybereadgenericparams.txt
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                    swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                      swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                        swift::ArchetypeType::setNestedTypes(swift::ASTContext&, llvm::MutableArrayRef<std::__1::pair<swift::Identifier, llvm::PointerUnion<swift::ArchetypeType*, swift::Type> > >) (line 45)
                                                                        – Crash case at this location: stacks/0716-swift-archetypetype-setnestedtypes.txt
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 48)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1582)
                                      finalizeGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::DeclContext*, swift::TypeChecker&) (line 522)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                                  – Crash case at this location: stacks/0713-swift-declcontext-lookupqualified.txt
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                          swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                            swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                                                                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                                                                                  swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 852)
                                                                                                                    swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                                                                                    – Crash case at this location: stacks/0958-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 22856)
                      swift::FunctionType::get(swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 158)
                      – Crash case at this location: stacks/0818-c.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 544)
                      (anonymous namespace)::DeclChecker::visitAssociatedTypeDecl(swift::AssociatedTypeDecl*) (line 102)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                              swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                    validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                        validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                    swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 1036)
                                                      swift::TypeBase::getTypeOfMember(swift::Module*, swift::ValueDecl const*, swift::LazyResolver*, swift::Type) (line 393)
                                                        swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                                          std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 949)
                                                          – Crash case at this location: stacks/0550-std-function-func-swift-type-subst.txt
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                  applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                    swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 238)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                              – Crash case at this location: stacks/1102-resolvetypedecl.txt
                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 48)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                                    – Crash case at this location: stacks/0228-swift-clangimporter-loadextensions.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 186)
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 266)
                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                        swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                          swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 115)
                                          – Crash case at this location: stacks/0740-swift-metatypetype-get.txt
                                          swift::Lexer::lexIdentifier() (line 183)
                                          – Crash case at this location: stacks/0626-swift-lexer-lexidentifier.txt
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                  swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                    swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 115)
                                    – Crash case at this location: stacks/0492-swift-metatypetype-get.txt
                                    std::__1::__function::__func<mapSignatureType(swift::ASTContext&, swift::Type)::$_3, std::__1::allocator<mapSignatureType(swift::ASTContext&, swift::Type)::$_3>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 21)
                                    – Crash case at this location: stacks/1908-std-function-func-mapsignaturetype.txt
                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                        existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                            swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                              swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                  swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                    swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                      std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                          getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                          – Crash case at this location: stacks/0780-getselftypeforcontainer.txt
                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                                                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 927)
                                                  swift::TupleType::get(llvm::ArrayRef<swift::TupleTypeElt>, swift::ASTContext const&) (line 317)
                                                  – Crash case at this location: stacks/1733-swift-tupletype-get.txt
                                                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                    validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                              – Crash case at this location: stacks/1799-resolvetypedecl.txt
                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                              swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                – Crash case at this location: stacks/1303-swift-type-walk.txt
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                    swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                            – Crash case at this location: stacks/1630-getselftypeforcontainer.txt
                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                                                                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                                                              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                                                validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                                                                        swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                                                                          existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                                – Crash case at this location: stacks/0694-getselftypeforcontainer.txt
                                                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                        swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                          swift::TypeBase::getCanonicalType() (line 775)
                                                                            swift::TypeBase::getCanonicalType() (line 1403)
                                                                            – Crash case at this location: stacks/1788-swift-typebase-getcanonicaltype.txt
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                  – Crash case at this location: stacks/0759-resolvetypedecl.txt
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                  swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                    swift::TypeBase::getCanonicalType() (line 775)
                                                                      swift::TypeBase::getCanonicalType() (line 1403)
                                                                      – Crash case at this location: stacks/0993-swift-typebase-getcanonicaltype.txt
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19092)
                                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                                                            swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                                                              existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                    – Crash case at this location: stacks/1409-getselftypeforcontainer.txt
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                  swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                    swift::TypeBase::getCanonicalType() (line 775)
                                                                      swift::TypeBase::getCanonicalType() (line 1403)
                                                                      – Crash case at this location: stacks/1714-swift-typebase-getcanonicaltype.txt
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                      – Crash case at this location: stacks/1696-getselftypeforcontainer.txt
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                  existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                      validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                          validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                      swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 1036)
                                                        swift::TypeBase::getTypeOfMember(swift::Module*, swift::ValueDecl const*, swift::LazyResolver*, swift::Type) (line 393)
                                                          swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                                            std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 949)
                                                            – Crash case at this location: stacks/1487-std-function-func-swift-type-subst.txt
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 441)
                                      (anonymous namespace)::DeclChecker::visitAssociatedTypeDecl(swift::AssociatedTypeDecl*) (line 102)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                    swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 1036)
                                                      swift::TypeBase::getTypeOfMember(swift::Module*, swift::ValueDecl const*, swift::LazyResolver*, swift::Type) (line 393)
                                                        swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                                          std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 949)
                                                          – Crash case at this location: stacks/1857-std-function-func-swift-type-subst.txt
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 766)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19092)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 766)
                                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                                        swift::GenericParamList::deriveAllArchetypes(llvm::ArrayRef<swift::GenericTypeParamDecl*>, llvm::SmallVectorImpl<swift::ArchetypeType*>&) (line 406)
                                                                        – Crash case at this location: stacks/1446-swift-genericparamlist-deriveallarchetypes.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                      swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                        swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                          std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 785)
                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 1801)
                              – Crash case at this location: stacks/1506-swift-typechecker-validategenericfuncsignature.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5734)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1192)
                              swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                              – Crash case at this location: stacks/0549-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 48)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                          swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                            swift::TypeBase::getCanonicalType() (line 775)
                                                              swift::TypeBase::getCanonicalType() (line 1403)
                                                                swift::ClangModuleUnit::getImportedModules(llvm::SmallVectorImpl<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >&, swift::Module::ImportFilter) const (line 211)
                                                                – Crash case at this location: stacks/1787-swift-clangmoduleunit-getimportedmodules.txt
                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                void swift::constraints::ConstraintSystem::recordFailureSimplified<swift::Type, swift::DeclName>(swift::constraints::ConstraintLocator*, swift::constraints::Failure::FailureKind, swift::Type&&, swift::DeclName&&) (line 385)
                                                                – Crash case at this location: stacks/1736-void.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2552)
                                            swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 194)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                  swift::TypeBase::getCanonicalType() (line 775)
                                                    swift::TypeBase::getCanonicalType() (line 1403)
                                                    – Crash case at this location: stacks/1195-swift-typebase-getcanonicaltype.txt
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                      – Crash case at this location: stacks/0919-getselftypeforcontainer.txt
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                  swift::TypeBase::getCanonicalType() (line 775)
                                                    swift::TypeBase::getCanonicalType() (line 1403)
                                                    – Crash case at this location: stacks/0331-llvm-raw-fd-ostream-write-impl.txt
                                                    – Crash case at this location: stacks/0513-swift-typebase-getcanonicaltype.txt
                                                      swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 133)
                                                      – Crash case at this location: stacks/0906-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                                                      swift::ClangModuleUnit::getAdapterModule() const (line 71)
                                                      – Crash case at this location: stacks/0710-swift-clangmoduleunit-getadaptermodule.txt
                                                      llvm::FoldingSet<swift::BoundGenericType>::NodeEquals(llvm::FoldingSetImpl::Node*, llvm::FoldingSetNodeID const&, unsigned int, llvm::FoldingSetNodeID&) const (line 91)
                                                      – Crash case at this location: stacks/1854-llvm-foldingset-swift-boundgenerictype-nodeequals.txt
                                                      swift::ModuleFile::lookupValue(swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&) (line 1472)
                                                      – Crash case at this location: stacks/1328-swift-modulefile-lookupvalue.txt
                                                      swift::PrintingDiagnosticConsumer::handleDiagnostic(swift::SourceManager&, swift::SourceLoc, swift::DiagnosticKind, llvm::StringRef, swift::DiagnosticInfo const&) (line 1288)
                                                      – Crash case at this location: stacks/0997-swift-printingdiagnosticconsumer-handlediagnostic.txt
                                                      swift::Parser::skipSingle() (line 327)
                                                      – Crash case at this location: stacks/1494-swift-parser-skipsingle.txt
                                                      swift::StreamPrinter::printText(llvm::StringRef) (line 51)
                                                      – Crash case at this location: stacks/1755-swift-streamprinter-printtext.txt
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                    – Crash case at this location: stacks/1922-getselftypeforcontainer.txt
                                                      swift::Parser::parseDeclInit(swift::OptionSet<swift::Parser::ParseDeclFlags, unsigned int>, swift::DeclAttributes&) (line 1377)
                                                      – Crash case at this location: stacks/1379-swift-parser-parsedeclinit.txt
                                                      swift::Parser::consumeToken() (line 68)
                                                      – Crash case at this location: stacks/1925-swift-parser-consumetoken.txt
                                                      swift::DiagnosticEngine::flushActiveDiagnostic() (line 4667)
                                                      – Crash case at this location: stacks/1501-swift-diagnosticengine-flushactivediagnostic.txt
                                                      swift::ModuleFile::lookupValue(swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&) (line 1472)
                                                      – Crash case at this location: stacks/1950-swift-modulefile-lookupvalue.txt
                                                      swift::TypeBase::getTypeVariables(llvm::SmallVectorImpl<swift::TypeVariableType*>&) (line 112)
                                                      – Crash case at this location: stacks/1390-swift-typebase-gettypevariables.txt
                                                      swift::ArchetypeType::setNestedTypes(swift::ASTContext&, llvm::MutableArrayRef<std::__1::pair<swift::Identifier, llvm::PointerUnion<swift::ArchetypeType*, swift::Type> > >) (line 45)
                                                      – Crash case at this location: stacks/0371-swift-archetypetype-setnestedtypes.txt
                                                      swift::constraints::ConstraintGraph::unbindTypeVariable(swift::TypeVariableType*, swift::Type) (line 505)
                                                      – Crash case at this location: stacks/1362-swift-constraints-constraintgraph-unbindtypevariable.txt
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                – Crash case at this location: stacks/1314-getselftypeforcontainer.txt
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                                                      validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                                                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                          validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                                              swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                                                swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                                                – Crash case at this location: stacks/0746-vtable.txt
                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                              swift::ArchetypeType::setNestedTypes(swift::ASTContext&, llvm::MutableArrayRef<std::__1::pair<swift::Identifier, llvm::PointerUnion<swift::ArchetypeType*, swift::Type> > >) (line 111)
                                                                              – Crash case at this location: stacks/1466-swift-archetypetype-setnestedtypes.txt
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                        swift::AvailabilityAttr::isUnavailable(swift::Decl const*) (line 22)
                                                        – Crash case at this location: stacks/0695-swift-availabilityattr-isunavailable.txt
                                                        swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 1036)
                                                        – Crash case at this location: stacks/1884-swift-typechecker-resolvetypeincontext.txt
                                                        swift::ClangModuleUnit::getAdapterModule() const (line 71)
                                                        – Crash case at this location: stacks/1063-swift-clangmoduleunit-getadaptermodule.txt
                                                        swift::ModuleFile::maybeReadPattern() (line 772)
                                                        – Crash case at this location: stacks/1363-swift-modulefile-maybereadpattern.txt
                                                        swift::BraceStmt::create(swift::ASTContext&, swift::SourceLoc, llvm::ArrayRef<swift::ASTNode>, swift::SourceLoc, swift::Optional<bool>) (line 205)
                                                        – Crash case at this location: stacks/1497-swift-bracestmt-create.txt
                                                        swift::ClangModuleUnit::getImportedModules(llvm::SmallVectorImpl<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >&, swift::Module::ImportFilter) const (line 1607)
                                                        – Crash case at this location: stacks/1383-swift-clangmoduleunit-getimportedmodules.txt
                                                        swift::Lexer::lexIdentifier() (line 183)
                                                        – Crash case at this location: stacks/1357-swift-lexer-lexidentifier.txt
                                                        clang::Stmt::StatisticsEnabled (line 38865)
                                                        – Crash case at this location: stacks/0481-getselftypeforcontainer.txt
                                                        swift::constraints::ConstraintSystem::simplifyType(swift::Type, llvm::SmallPtrSet<swift::TypeVariableType*, 16u>&) (line 90)
                                                        – Crash case at this location: stacks/0907-c-t.txt
                                                        swift::GenericSignature::get(llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>) (line 477)
                                                        – Crash case at this location: stacks/1707-swift-genericsignature-get.txt
                                                        swift::TypeBase::getDesugaredType() (line 277)
                                                        – Crash case at this location: stacks/1401-swift-typebase-getdesugaredtype.txt
                                                        swift::constraints::ConstraintGraph::Change::undo(swift::constraints::ConstraintGraph&) (line 74)
                                                        – Crash case at this location: stacks/1453-swift-constraints-constraintgraph-change-undo.txt
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                      swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                        swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                          std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 785)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                              – Crash case at this location: stacks/0410-getselftypeforcontainer.txt
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6131)
                                                    checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                          getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                          – Crash case at this location: stacks/1945-getselftypeforcontainer.txt
                                                            swift::GenericFunctionType::get(swift::GenericSignature*, swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 438)
                                                            – Crash case at this location: stacks/1393-swift-genericfunctiontype-get.txt
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                          getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                            swift::ModuleFile::getDecl(swift::Fixnum<31u, unsigned int>, swift::Optional<swift::DeclContext*>) (line 7248)
                                                                            – Crash case at this location: stacks/1399-swift-modulefile-getdecl.txt
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                                  validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                                                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                      validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                                          swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                                            swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                                              std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 785)
                                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                  – Crash case at this location: stacks/1721-getselftypeforcontainer.txt
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                  swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                    swift::TypeBase::getCanonicalType() (line 775)
                                                      swift::TypeBase::getCanonicalType() (line 1403)
                                                        swift::constraints::ConstraintGraphNode::addConstraint(swift::constraints::Constraint*) (line 219)
                                                        – Crash case at this location: stacks/1073-swift-constraints-constraintgraphnode-addconstraint.txt
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                        swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                          swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                            std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 785)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 599)
                                                                  – Crash case at this location: stacks/1366-swift-constraints-constraintsystem-simplifyconstraint.txt
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                        llvm::OnDiskChainedHashTable<swift::ModuleFile::DeclTableInfo>::find(swift::Identifier const&, swift::ModuleFile::DeclTableInfo*) (line 47)
                                                        – Crash case at this location: stacks/1368-llvm-ondiskchainedhashtable-swift-modulefile-decltableinfo-find.txt
                                                        swift::constraints::ConstraintLocator::Profile(llvm::FoldingSetNodeID&, swift::Expr*, llvm::ArrayRef<swift::constraints::ConstraintLocator::PathElement>) (line 233)
                                                        – Crash case at this location: stacks/0584-swift-constraints-constraintlocator-profile.txt
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                              applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                                swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 238)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                    – Crash case at this location: stacks/1521-getselftypeforcontainer.txt
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                              swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                swift::TypeBase::getCanonicalType() (line 775)
                                                                  swift::TypeBase::getCanonicalType() (line 1403)
                                                                  – Crash case at this location: stacks/1801-swift-typebase-getcanonicaltype.txt
                                                                    void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                                                    – Crash case at this location: stacks/0852-void.txt
                                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                            – Crash case at this location: stacks/1067-resolvetypedecl.txt
                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                  swift::TypeBase::getCanonicalType() (line 775)
                                                    swift::TypeBase::getCanonicalType() (line 1403)
                                                    – Crash case at this location: stacks/0503-swift-typebase-getcanonicaltype.txt
                                                    – Crash case at this location: stacks/0719-swift-typebase-getcanonicaltype.txt
                                                      swift::ModuleFile::lookupValue(swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&) (line 1472)
                                                      – Crash case at this location: stacks/0699-swift-modulefile-lookupvalue.txt
                                                      swift::Lexer::lexImpl() (line 681)
                                                      – Crash case at this location: stacks/1832-swift-lexer-leximpl.txt
                                                      swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 133)
                                                      – Crash case at this location: stacks/1735-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                                                      void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                                      – Crash case at this location: stacks/1715-void.txt
                                                      swift::TypeBase::getAnyOptionalObjectType(swift::OptionalTypeKind&) (line 15)
                                                      – Crash case at this location: stacks/1402-swift-typebase-getanyoptionalobjecttype.txt
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                                  validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                                                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                      validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                                          swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                                            swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                                              std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 785)
                                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                  – Crash case at this location: stacks/1837-getselftypeforcontainer.txt
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                    – Crash case at this location: stacks/0208-swift-typebase-getanyoptionalobjecttype.txt
                                                    – Crash case at this location: stacks/0218-swift-parser-parsegenericarguments.txt
                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                      – Crash case at this location: stacks/1145-swift-constraints-constraintsystem-addconstraint.txt
                                                      swift::Lexer::lexImpl() (line 1152)
                                                      – Crash case at this location: stacks/1358-swift-lexer-leximpl.txt
                                                      swift::ArchetypeType::getNestedType(swift::Identifier) const (line 182)
                                                      – Crash case at this location: stacks/1110-swift-archetypetype-getnestedtype.txt
                                                      swift::InOutType::get(swift::Type) (line 340)
                                                      – Crash case at this location: stacks/1053-swift-inouttype-get.txt
                                                      swift::FunctionType::get(swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 158)
                                                      – Crash case at this location: stacks/1129-swift-functiontype-get.txt
                                                      swift::TypeBase::getDesugaredType() (line 277)
                                                      – Crash case at this location: stacks/1645-swift-typebase-getdesugaredtype.txt
                                                      swift::UnboundGenericType::get(swift::NominalTypeDecl*, swift::Type, swift::ASTContext const&) (line 392)
                                                      – Crash case at this location: stacks/0986-swift-unboundgenerictype-get.txt
                                                      – Crash case at this location: stacks/1103-swift-unboundgenerictype-get.txt
                                                      swift::AbstractStorageDecl::makeComputed(swift::SourceLoc, swift::FuncDecl*, swift::FuncDecl*, swift::FuncDecl*, swift::SourceLoc) (line 108)
                                                      – Crash case at this location: stacks/1459-swift-abstractstoragedecl-makecomputed.txt
                                                      swift::TypeBase::getCanonicalType() (line 1057)
                                                      – Crash case at this location: stacks/1477-swift-typebase-getcanonicaltype.txt
                                                      swift::PrintingDiagnosticConsumer::handleDiagnostic(swift::SourceManager&, swift::SourceLoc, swift::DiagnosticKind, llvm::StringRef, swift::DiagnosticInfo const&) (line 1288)
                                                      – Crash case at this location: stacks/1348-swift-printingdiagnosticconsumer-handlediagnostic.txt
                                                      swift::GenericParamList::addNestedArchetypes(swift::ArchetypeType*, llvm::SmallPtrSetImpl<swift::ArchetypeType*>&, llvm::SmallVectorImpl<swift::ArchetypeType*>&) (line 153)
                                                      – Crash case at this location: stacks/1139-swift-genericparamlist-addnestedarchetypes.txt
                                                      swift::Type::walk(swift::TypeWalker&) const (line 75)
                                                      – Crash case at this location: stacks/0791-swift-type-walk.txt
                                                      swift::ASTContext::setConformsTo(swift::CanType, swift::ProtocolDecl*, llvm::PointerIntPair<swift::ProtocolConformance*, 1u, bool, llvm::PointerLikeTypeTraits<swift::ProtocolConformance*> >) (line 102)
                                                      – Crash case at this location: stacks/0972-no-stacktrace.txt
                                                      – Crash case at this location: stacks/1111-swift-astcontext-setconformsto.txt
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18426)
                                                    (anonymous namespace)::DeclChecker::checkDynamicSelfReturn(swift::FuncDecl*, swift::TypeRepr*, unsigned int) (line 574)
                                                      swift::constraints::ConstraintSystem::simplify() (line 103)
                                                      – Crash case at this location: stacks/0350-swift-constraints-constraintsystem-simplify.txt
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                        getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                          swift::ModuleFile::getType(swift::Fixnum<31u, unsigned int>) (line 8359)
                                                          – Crash case at this location: stacks/0812-swift-modulefile-gettype.txt
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2552)
                                            swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 194)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                    – Crash case at this location: stacks/0563-cerror.txt
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                            – Crash case at this location: stacks/0415-resolvetypedecl.txt
                                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 48)
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                      swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                        swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                        – Crash case at this location: stacks/1716-swift-type-walk.txt
                                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                              applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                                swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 238)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                              swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                swift::TypeBase::getCanonicalType() (line 775)
                                                                  swift::TypeBase::getCanonicalType() (line 1403)
                                                                  – Crash case at this location: stacks/1692-swift-typebase-getcanonicaltype.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2723)
                    checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 832)
                        checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 569)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                  swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 623)
                                                                                  – Crash case at this location: stacks/0118-swift-dependentgenerictyperesolver-resolvegenerictypeparamtype.txt
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                                  validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                                    swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                      swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                                                        swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                                                          swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                                            swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                  swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                  – Crash case at this location: stacks/0277-swift-typechecker-getinterfacetypefrominternaltype.txt
                                                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 210)
                                                                    – Crash case at this location: stacks/0107-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                              validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                                swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                                                    swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                                                      swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                                        swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                            swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                              swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                swift::ModuleFile::getType(swift::Fixnum<31u, unsigned int>) (line 8359)
                                                                – Crash case at this location: stacks/1259-swift-modulefile-gettype.txt
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                                                                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                                                                                      swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 852)
                                                                                                                        swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                                                                                        – Crash case at this location: stacks/0074-swift-typeloc-iserror.txt
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                        std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 239)
                                                        – Crash case at this location: stacks/1142-std-function-func-swift-type-subst.txt
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                                                                                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                                                                                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                                                                                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                                                        validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                                                                                        validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                                                                                          swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                                                                            swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                                                                                                              swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                                                                                                                swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                                                                                                  swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                                                                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                                                                      swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                                                                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                                                                        – Crash case at this location: stacks/1258-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                                                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                                                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                                                              validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                                                                swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                                                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                                                                                    swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                                                                                      swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                                                                        swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                                                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                                            swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                                              swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                                                llvm::errs()::S (line 0)
                                                                                                – Crash case at this location: stacks/1209-llvm-errs.txt
                                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 186)
                                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                                                  swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                                                  – Crash case at this location: stacks/1848-swift-completegenerictyperesolver-resolvedependentmembertype.txt
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 186)
                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                      swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                        swift::TypeBase::isSpecialized() (line 122)
                                        – Crash case at this location: stacks/1818-swift-typebase-isspecialized.txt
                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                        swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                          swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                          – Crash case at this location: stacks/1652-swift-type-walk.txt
                                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                            – Crash case at this location: stacks/1485-swift-constraints-constraintsystem-addconstraint.txt
                                                            swift::TuplePattern::create(swift::ASTContext&, swift::SourceLoc, llvm::ArrayRef<swift::TuplePatternElt>, swift::SourceLoc, bool, swift::SourceLoc, swift::Optional<bool>) (line 280)
                                                            – Crash case at this location: stacks/0304-swift-tuplepattern-create.txt
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 832)
                                                                checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                          swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                            swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                              std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                                                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                                                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                                                                                                      validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                                                                                                        swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                                                                                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                                                                                                                            swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                                                                                                                              swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                                                                                                                swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                                                                                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                                                                                    swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                                                                                      swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                                                                                      – Crash case at this location: stacks/1236-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                                                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                                                                                                        validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                                                                                                          swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                                                                                            swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                                                                                                                              swift::Expr::walk(swift::ASTWalker&) (line 26)
                                                                                                                                (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                                                                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                                                                                                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                                                                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                                                                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                                                                                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                                                                                                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                                                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                                                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                                                                                                                                        resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                                                                                                                                          swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 852)
                                                                                                                                                                            swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                                                                                                                                            – Crash case at this location: stacks/1282-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                            swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                              swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1582)
                                                                                                                          finalizeGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::DeclContext*, swift::TypeChecker&) (line 522)
                                                                                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                                                                                                                      – Crash case at this location: stacks/1114-swift-declcontext-lookupqualified.txt
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                        validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                          swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                            swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                              swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                swift::Expr::walk(swift::ASTWalker&) (line 76)
                                  (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                    swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                          swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                            swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                  swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                    swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                    – Crash case at this location: stacks/1196-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                                swift::Expr::walk(swift::ASTWalker&) (line 53)
                                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                            (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                                  swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                                        swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                              swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                                swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                      swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                        – Crash case at this location: stacks/1024-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                            swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                              swift::Expr::walk(swift::ASTWalker&) (line 26)
                                (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                        (anonymous namespace)::RawMemoryObject::readBytes(unsigned long long, unsigned long long, unsigned char*) const (line 58)
                                                                        – Crash case at this location: stacks/1225-getselftypeforcontainer.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2526)
                    void checkCircularity<swift::ClassDecl>(swift::TypeChecker&, swift::ClassDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::ClassDecl*>&) (line 132)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                  – Crash case at this location: stacks/0648-swift-declcontext-lookupqualified.txt
                                    std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 239)
                                    – Crash case at this location: stacks/1107-std-function-func-swift-type-subst.txt
                                    llvm::OnDiskChainedHashTable<swift::ModuleFile::DeclTableInfo>::find(swift::Identifier const&, swift::ModuleFile::DeclTableInfo*) (line 47)
                                    – Crash case at this location: stacks/0877-as.txt
                    void checkCircularity<swift::ClassDecl>(swift::TypeChecker&, swift::ClassDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::ClassDecl*>&) (line 361)
                      void checkCircularity<swift::ClassDecl>(swift::TypeChecker&, swift::ClassDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::ClassDecl*>&) (line 361)
                      – Crash case at this location: stacks/0407-void.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2695)
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                      swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                        std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 5671)
                          addAccessorsToStoredVar(swift::AbstractStorageDecl*, swift::TypeChecker&) (line 474)
                            swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 123)
                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 196)
                                    swift::ArchetypeBuilder::inferRequirements(swift::Pattern*) (line 52)
                                      swift::Type::walk(swift::TypeWalker&) const (line 54)
                                        swift::TypeVisitor<(anonymous namespace)::Traversal, bool>::visit(swift::Type) (line 191)
                                          swift::TypeVisitor<(anonymous namespace)::Traversal, bool>::visit(swift::Type) (line 3133)
                                          – Crash case at this location: stacks/1819-swift-typevisitor.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1192)
                                                swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                                                – Crash case at this location: stacks/1380-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                        swift::GenericTypeParamDecl::GenericTypeParamDecl(swift::DeclContext*, swift::Identifier, swift::SourceLoc, unsigned int, unsigned int) (line 301)
                                                        – Crash case at this location: stacks/1907-swift-generictypeparamdecl-generictypeparamdecl.txt
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                  swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                    swift::TypeBase::getCanonicalType() (line 775)
                                                      swift::TypeBase::getCanonicalType() (line 1403)
                                                        swift::ModuleFile::getDecl(swift::Fixnum<31u, unsigned int>, swift::Optional<swift::DeclContext*>) (line 9392)
                                                        – Crash case at this location: stacks/0811-swift-modulefile-getdecl.txt
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                                      swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                        swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                          swift::NominalTypeDecl::computeType() (line 185)
                                                                                          – Crash case at this location: stacks/1465-swift-nominaltypedecl-computetype.txt
                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                        swift::Parser::parseExprCallSuffix(swift::ParserResult<swift::Expr>, swift::Identifier, swift::SourceLoc) (line 138)
                                                        – Crash case at this location: stacks/1141-swift-parser-parseexprcallsuffix.txt
                                                        swift::ClangImporter::loadExtensions(swift::NominalTypeDecl*, unsigned int) (line 84)
                                                        – Crash case at this location: stacks/1133-swift-clangimporter-loadextensions.txt
                                                        swift::StructType::get(swift::StructDecl*, swift::Type, swift::ASTContext const&) (line 211)
                                                        – Crash case at this location: stacks/1881-swift-structtype-get.txt
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                                    validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                                      swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                        swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                                          swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                                            swift::Expr::walk(swift::ASTWalker&) (line 53)
                                                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                                                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                                                                  (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                                                    swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                                          swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                                            swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                                  swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                                    swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                                      swift::TypeBase::getAnyOptionalObjectType(swift::OptionalTypeKind&) (line 15)
                                                                                      – Crash case at this location: stacks/1685-swift-typebase-getanyoptionalobjecttype.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                      validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                          validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                      swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 1070)
                                        swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                        – Crash case at this location: stacks/1451-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                          validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                            swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                              swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                                swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                                  swift::Expr::walk(swift::ASTWalker&) (line 53)
                                                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6567)
                                                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3572)
                                                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                                                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                                                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                                                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                                                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                                                                  (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                                                    swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                                          swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                                            swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                                  swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                                    swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                                    – Crash case at this location: stacks/1526-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                          swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                            swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                              swift::GenericParamList::deriveAllArchetypes(llvm::ArrayRef<swift::GenericTypeParamDecl*>, llvm::SmallVectorImpl<swift::ArchetypeType*>&) (line 406)
                                                                              – Crash case at this location: stacks/1862-swift-genericparamlist-deriveallarchetypes.txt
                                                                              swift::TypeBase::operator new(unsigned long, swift::ASTContext const&, swift::AllocationArena, unsigned int) (line 92)
                                                                              – Crash case at this location: stacks/1886-swift-typebase-operator.txt
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                      – Crash case at this location: stacks/0457-swift-declcontext-lookupqualified.txt
                                        swift::TypeBase::getAnyOptionalObjectType(swift::OptionalTypeKind&) (line 15)
                                        – Crash case at this location: stacks/1650-swift-typebase-getanyoptionalobjecttype.txt
                                        swift::ModuleFile::getDecl(swift::Fixnum<31u, unsigned int>, swift::Optional<swift::DeclContext*>) (line 7248)
                                        – Crash case at this location: stacks/1012-swift-modulefile-getdecl.txt
                      validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                        swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                            swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                              swift::Expr::walk(swift::ASTWalker&) (line 76)
                                (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                    (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                          swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                                swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                      swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                        swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                              swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                  swift::BoundGenericType::get(swift::NominalTypeDecl*, swift::Type, llvm::ArrayRef<swift::Type>) (line 877)
                                                                  – Crash case at this location: stacks/0506-swift-boundgenerictype-get.txt
                                                                  swift::constraints::Solution::Solution(swift::constraints::Solution&&) (line 319)
                                                                  – Crash case at this location: stacks/1859-swift-constraints-solution-solution.txt
                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                        swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                          swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                  swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                    llvm::SmallVectorImpl<swift::DiagnosticArgument>::operator=(llvm::SmallVectorImpl<swift::DiagnosticArgument>&&) (line 285)
                                                    – Crash case at this location: stacks/1242-llvm-smallvectorimpl-swift-diagnosticargument-operator.txt
                                                    swift::TupleType::get(llvm::ArrayRef<swift::TupleTypeElt>, swift::ASTContext const&) (line 771)
                                                    – Crash case at this location: stacks/1055-swift-tupletype-get.txt
                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                    swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                          swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                            existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                              – Crash case at this location: stacks/0979-getselftypeforcontainer.txt
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                                swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                  swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                  – Crash case at this location: stacks/1725-swift-type-walk.txt
                              swift::Expr::walk(swift::ASTWalker&) (line 53)
                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1935)
                                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                                    (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                      swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                            swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                              swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                    swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                      swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                        swift::constraints::ConstraintGraph::removeConstraint(swift::constraints::Constraint*) (line 234)
                                                        – Crash case at this location: stacks/1687-swift-constraints-constraintgraph-removeconstraint.txt
                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                                    (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                      swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                            swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                              swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                    swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                      swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                        swift::GenericParamList::addNestedArchetypes(swift::ArchetypeType*, llvm::SmallPtrSetImpl<swift::ArchetypeType*>&, llvm::SmallVectorImpl<swift::ArchetypeType*>&) (line 153)
                                                        – Crash case at this location: stacks/0955-swift-genericparamlist-addnestedarchetypes.txt
                                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1679)
                                      (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                        swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                              swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                      swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                          swift::TypeBase::getAnyOptionalObjectType(swift::OptionalTypeKind&) (line 15)
                                                          – Crash case at this location: stacks/0608-swift-typebase-getanyoptionalobjecttype.txt
                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                            swift::Expr::walk(swift::ASTWalker&) (line 53)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3458)
                                (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                        swift::StructType::get(swift::StructDecl*, swift::Type, swift::ASTContext const&) (line 211)
                                                                        – Crash case at this location: stacks/0330-swift-structtype-get.txt
                            swift::Expr::walk(swift::ASTWalker&) (line 26)
                              (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                  – Crash case at this location: stacks/0385-swift-declcontext-lookupqualified.txt
                                    swift::ClangModuleUnit::getAdapterModule() const (line 71)
                                    – Crash case at this location: stacks/0954-swift-clangmoduleunit-getadaptermodule.txt
                                    void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                    – Crash case at this location: stacks/0422-void.txt
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 2539)
                                                (anonymous namespace)::TypeResolver::resolveASTFunctionType(swift::FunctionTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::AnyFunctionType::ExtInfo) (line 80)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19092)
                                                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 2539)
                                                                                            (anonymous namespace)::TypeResolver::resolveASTFunctionType(swift::FunctionTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::AnyFunctionType::ExtInfo) (line 80)
                                                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                                                                  swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                                                    swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                                                    – Crash case at this location: stacks/1291-swift-type-walk.txt
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 13395)
                                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                      – Crash case at this location: stacks/1528-getselftypeforcontainer.txt
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                      validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                        swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                            swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                              swift::Expr::walk(swift::ASTWalker&) (line 53)
                                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1260)
                                                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                                                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6591)
                                                      (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                                        swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                                          (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                                                swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                                                      swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                                            swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                                              swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                                    swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                                      swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                                      – Crash case at this location: stacks/1867-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                            swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                              swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                    swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                      swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                        swift::ModuleFile::getType(swift::Fixnum<31u, unsigned int>) (line 8359)
                                        – Crash case at this location: stacks/1226-swift-modulefile-gettype.txt
                                        swift::ClangModuleUnit::getImportedModules(llvm::SmallVectorImpl<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >&, swift::Module::ImportFilter) const (line 1538)
                                        – Crash case at this location: stacks/1307-swift-clangmoduleunit-getimportedmodules.txt
                                swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                  swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 65)
                                    swift::constraints::ConstraintSystem::simplify() (line 103)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                        swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                              swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                    swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                      swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                            swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                              swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                              – Crash case at this location: stacks/1428-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1000)
                            swift::constraints::ConstraintSystem::salvage(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::Expr*, bool) (line 300)
                              swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                  swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                    swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                      swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                        swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 3230)
                                          swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                            swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 3230)
                                              swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                                swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                                  swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                                    swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 182)
                                                        swift::constraints::ConstraintSystem::simplifyFixConstraint(swift::constraints::Fix, swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 993)
                                                          swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 113)
                                                            swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 125)
                                                            – Crash case at this location: stacks/0631-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 17223)
                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3731)
                        (anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*) (line 1141)
                          matchWitness(swift::TypeChecker&, swift::NormalProtocolConformance*, swift::DeclContext*, swift::ValueDecl*, swift::ValueDecl*) (line 682)
                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                              llvm::OnDiskChainedHashTable<swift::ModuleFile::DeclTableInfo>::find(swift::Identifier const&, swift::ModuleFile::DeclTableInfo*) (line 206)
                              – Crash case at this location: stacks/1169-llvm-ondiskchainedhashtable-swift-modulefile-decltableinfo-find.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                        validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                          swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                            swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                              swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                                swift::Expr::walk(swift::ASTWalker&) (line 76)
                                                  (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                                    swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                          swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                            swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                  swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                    swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                    – Crash case at this location: stacks/1313-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                              validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                                swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                                    swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                                      swift::Expr::walk(swift::ASTWalker&) (line 53)
                                                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                                                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                                                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                                    swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                                      swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                            swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                              swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                              – Crash case at this location: stacks/1481-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1582)
                                                finalizeGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::DeclContext*, swift::TypeChecker&) (line 522)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                                            – Crash case at this location: stacks/1163-swift-declcontext-lookupqualified.txt
                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 186)
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                    swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                      swift::PrintingDiagnosticConsumer::handleDiagnostic(swift::SourceManager&, swift::SourceLoc, swift::DiagnosticKind, llvm::StringRef, swift::DiagnosticInfo const&) (line 1288)
                                      – Crash case at this location: stacks/1569-swift-printingdiagnosticconsumer-handlediagnostic.txt
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                  swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                  – Crash case at this location: stacks/0370-swift-completegenerictyperesolver-resolvedependentmembertype.txt
                                    llvm::raw_fd_ostream::write_impl(char const*, unsigned long) (line 89)
                                    – Crash case at this location: stacks/0409-llvm-raw-fd-ostream-write-impl.txt
                                    swift::TypeBase::getCanonicalType() (line 2367)
                                    – Crash case at this location: stacks/1760-swift-typebase-getcanonicaltype.txt
                                    swift::FunctionType::get(swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 158)
                                    – Crash case at this location: stacks/1475-swift-functiontype-get.txt
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 266)
                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                        swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                        – Crash case at this location: stacks/1730-swift-completegenerictyperesolver-resolvedependentmembertype.txt
                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                        swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                        – Crash case at this location: stacks/0382-swift-completegenerictyperesolver-resolvedependentmembertype.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19092)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 3294)
                            swift::TupleType::get(llvm::ArrayRef<swift::TupleTypeElt>, swift::ASTContext const&) (line 317)
                              vtable for swift::PartialGenericTypeToArchetypeResolver (line 16)
                              – Crash case at this location: stacks/0864-no-stacktrace.txt
                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                            swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                              swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                  swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                    swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                      std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                          getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                          – Crash case at this location: stacks/1136-getselftypeforcontainer.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2164)
                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 1857)
                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                          swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                            swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                              swift::camel_case::getFirstWord(llvm::StringRef) (line 47)
                                              – Crash case at this location: stacks/1028-swift-camel-case-getfirstword.txt
                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2287)
                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1605)
                          swift::NominalTypeDecl::computeType() (line 29)
                            swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                            – Crash case at this location: stacks/0375-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                          swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                            swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                  swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                    std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                          getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                            llvm::FoldingSet<swift::GenericSignature>::NodeEquals(llvm::FoldingSetImpl::Node*, llvm::FoldingSetNodeID const&, unsigned int, llvm::FoldingSetNodeID&) const (line 24)
                                                                            – Crash case at this location: stacks/1027-llvm-foldingset-swift-genericsignature-nodeequals.txt
                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                          swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                            swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                  swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                    std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                        getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                          swift::DiagnosticEngine::flushActiveDiagnostic() (line 4733)
                                                          – Crash case at this location: stacks/1101-swift-diagnosticengine-flushactivediagnostic.txt
                                                          swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6642)
                                                          – Crash case at this location: stacks/1122-swift-constraints-constraintsystem-solve.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2695)
                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6131)
                        checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                            swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                              swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                  swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                    swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                      std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                          getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                            swift::ArraySliceType::get(swift::Type) (line 292)
                                                            – Crash case at this location: stacks/1144-swift-arrayslicetype-get.txt
                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                        validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                          swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                            swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                              swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                                swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                  swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                      swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                          void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                          – Crash case at this location: stacks/1218-void.txt
                                          swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 3521)
                                          – Crash case at this location: stacks/0305-swift-constraints-constraintsystem-matchtypes.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2287)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1192)
                                    swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                                    – Crash case at this location: stacks/0874-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                        resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                          applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                            swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 750)
                                              swift::TypeChecker::checkSubstitutions(llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, llvm::DenseMap<swift::SubstitutableType*, llvm::SmallVector<swift::ProtocolConformance*, 2u>, llvm::DenseMapInfo<swift::SubstitutableType*> >&, swift::DeclContext*, swift::SourceLoc, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >*) (line 300)
                                              – Crash case at this location: stacks/0401-swift-typechecker-checksubstitutions.txt
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                    swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                                                      swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 852)
                                                                                        swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                                                        – Crash case at this location: stacks/1279-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                        resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                          swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 1070)
                                                            swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                            – Crash case at this location: stacks/1563-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 186)
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 535)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                    swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                      diagnoseUnknownType(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::GenericTypeResolver*) (line 807)
                                      – Crash case at this location: stacks/1018-diagnoseunknowntype.txt
                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                            validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                              swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                                  swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                                    swift::Expr::walk(swift::ASTWalker&) (line 76)
                                                      (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                                        swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                              swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                                swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                      swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                        – Crash case at this location: stacks/1580-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                    swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                      swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                        swift::TupleType::get(llvm::ArrayRef<swift::TupleTypeElt>, swift::ASTContext const&) (line 770)
                                                        – Crash case at this location: stacks/0862-swift-tupletype-get.txt
                                                        swift::PrintingDiagnosticConsumer::handleDiagnostic(swift::SourceManager&, swift::SourceLoc, swift::DiagnosticKind, llvm::StringRef, swift::DiagnosticInfo const&) (line 1325)
                                                        – Crash case at this location: stacks/1544-swift-printingdiagnosticconsumer-handlediagnostic.txt
                                                        bool swift::Parser::parseIdentifier<>(swift::Identifier&, swift::Diag<>) (line 149)
                                                        – Crash case at this location: stacks/1639-bool.txt
                                                        swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 115)
                                                        – Crash case at this location: stacks/0707-swift-metatypetype-get.txt
                                                        void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                                        – Crash case at this location: stacks/1421-void.txt
                                                        swift::Parser::parseToken(swift::tok, swift::SourceLoc&, swift::Diagnostic const&) (line 96)
                                                        – Crash case at this location: stacks/1914-swift-parser-parsetoken.txt
                                                        swift::Expr::getSourceRange() const (line 843)
                                                        – Crash case at this location: stacks/1430-swift-expr-getsourcerange.txt
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                        applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                          swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 238)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                  swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                    swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                      llvm::BumpPtrAllocator::Allocate(unsigned long, unsigned long) (line 249)
                                                                      – Crash case at this location: stacks/0763-swift-type-walk.txt
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2552)
                                      swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 194)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                    swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                      swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                      – Crash case at this location: stacks/0802-swift-type-walk.txt
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                          swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                            swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                  swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                    std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                                                                            swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                                              swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                                                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                                                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                                                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                                                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                                                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                                                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                                                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                                                                                                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                                                                                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                                                                                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                                                                                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                                                                                                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                                                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                                                                                                                                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                                                                                                                                                swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 852)
                                                                                                                                                                                  swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                                                                                                                                                  – Crash case at this location: stacks/1137-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                          validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 48)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                          swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                            swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                  swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                    std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                        getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                        – Crash case at this location: stacks/1131-getselftypeforcontainer.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 271)
                      swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                        swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                          swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                            swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 4065)
                              swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                  swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                    swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                    – Crash case at this location: stacks/1292-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                        swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                          swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                            swift::Expr::walk(swift::ASTWalker&) (line 76)
                              (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                  (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                        swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                              swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                    swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                      swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                            swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                              swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                              – Crash case at this location: stacks/0431-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                            swift::Expr::walk(swift::ASTWalker&) (line 53)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3572)
                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                                  (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                    swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 7574)
                                      swift::constraints::ConstraintSystem::openType(swift::Type, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&, swift::DeclContext*, bool, swift::constraints::DependentTypeOpener*) (line 202)
                                        swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                          (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 2165)
                                            swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 335)
                                            – Crash case at this location: stacks/1228-swift-constraints-constraintsystem-opengeneric.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 9436)
                      checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                          validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                              validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                                swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                                    swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                                      swift::Expr::walk(swift::ASTWalker&) (line 53)
                                                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                                                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                                              (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                                                    swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                                                          swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                                                swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                                                  swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                                        swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                                          swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                                          – Crash case at this location: stacks/1588-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 1857)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 194)
                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 535)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                      swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                        std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 239)
                                        – Crash case at this location: stacks/1308-std-function-func-swift-type-subst.txt
                                        swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 115)
                                        – Crash case at this location: stacks/0530-swift-metatypetype-get.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5734)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                    validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                      swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                        swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                          swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                            swift::Expr::walk(swift::ASTWalker&) (line 76)
                                              (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                                swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                                  (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                                        swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                                              swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                                    swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                                      swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                            swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                              swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                              – Crash case at this location: stacks/1900-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 48)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                                        resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                                        – Crash case at this location: stacks/1296-resolvetypedecl.txt
                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                  swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 238)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                          swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                            swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                                swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                                  swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                                    std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                                        getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                                        – Crash case at this location: stacks/1272-getselftypeforcontainer.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 53)
                        swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                          swift::Lexer::lexIdentifier() (line 183)
                          – Crash case at this location: stacks/0454-swift-lexer-lexidentifier.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 9408)
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                    swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                      swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                      – Crash case at this location: stacks/0274-swift-typechecker-checkinheritanceclause.txt
                                                        swift::ModuleFile::maybeReadPattern() (line 103)
                                                        – Crash case at this location: stacks/1863-swift-modulefile-maybereadpattern.txt
                                                        swift::FuncDecl::setDeserializedSignature(llvm::ArrayRef<swift::Pattern*>, swift::TypeLoc) (line 298)
                                                        – Crash case at this location: stacks/0583-swift-funcdecl-setdeserializedsignature.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2695)
                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                          swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                            swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                  swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                    std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                          getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                            swift::BoundGenericType::get(swift::NominalTypeDecl*, swift::Type, llvm::ArrayRef<swift::Type>) (line 877)
                                                            – Crash case at this location: stacks/1439-swift-boundgenerictype-get.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2164)
                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                        validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                          swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                            swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                              swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                swift::Expr::walk(swift::ASTWalker&) (line 53)
                                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                                    (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                      swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                            swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                              swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                    swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                      swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                        swift::ModuleFile::getDecl(swift::Fixnum<31u, unsigned int>, swift::Optional<swift::DeclContext*>) (line 7248)
                                                        – Crash case at this location: stacks/1068-swift-modulefile-getdecl.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 186)
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 266)
                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                          swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                            llvm::OnDiskChainedHashTable<swift::ModuleFile::DeclTableInfo>::find(swift::Identifier const&, swift::ModuleFile::DeclTableInfo*) (line 206)
                                            – Crash case at this location: stacks/1782-llvm-ondiskchainedhashtable-swift-modulefile-decltableinfo-find.txt
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1112)
                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                          swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                            swift::PrintingDiagnosticConsumer::handleDiagnostic(swift::SourceManager&, swift::SourceLoc, swift::DiagnosticKind, llvm::StringRef, swift::DiagnosticInfo const&) (line 1288)
                                            – Crash case at this location: stacks/1921-swift-printingdiagnosticconsumer-handlediagnostic.txt
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                  swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                    swift::Lexer::getLocForEndOfToken(swift::SourceManager const&, swift::SourceLoc) (line 535)
                                    – Crash case at this location: stacks/0637-swift-lexer-getlocforendoftoken.txt
                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 186)
                                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                                      swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                                        swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 115)
                                                        – Crash case at this location: stacks/1948-swift-metatypetype-get.txt
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1192)
                                          swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                                          – Crash case at this location: stacks/0980-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                        existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                            swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                              swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                  swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                    swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                      std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                          getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                          – Crash case at this location: stacks/1125-no-stacktrace.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 17223)
                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3731)
                        (anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*) (line 1141)
                          matchWitness(swift::TypeChecker&, swift::NormalProtocolConformance*, swift::DeclContext*, swift::ValueDecl*, swift::ValueDecl*) (line 1021)
                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 1252)
                              swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 327)
                                swift::ArchetypeBuilder::mapTypeIntoContext(swift::DeclContext*, swift::Type) (line 149)
                                  swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                  – Crash case at this location: stacks/1904-swift-type-transform.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 271)
                      swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                        swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                          swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                            swift::Expr::walk(swift::ASTWalker&) (line 76)
                              swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 13144)
                                (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 3459)
                                  (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 1457)
                                  – Crash case at this location: stacks/1290-no-stacktrace.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                      validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                        swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                            swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                              swift::Expr::walk(swift::ASTWalker&) (line 76)
                                (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                    (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                          swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                                swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                      swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                        swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                              swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                – Crash case at this location: stacks/0377-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                        swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                          swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                  swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                  – Crash case at this location: stacks/0056-addminimumprotocols.txt
                                                    swift::Optional<swift::Diagnostic>::operator=(swift::Optional<swift::Diagnostic>&&) (line 245)
                                                    – Crash case at this location: stacks/0191-swift-astprinter-printtextimpl.txt
                                                    swift::Parser::parseExprIdentifier() (line 642)
                                                    – Crash case at this location: stacks/1206-swift-parser-parseexpridentifier.txt
                                                    swift::Parser::parseTypeIdentifier() (line 1450)
                                                    – Crash case at this location: stacks/1185-swift-parser-parsetypeidentifier.txt
                                                    swift::Lexer::getLocForEndOfToken(swift::SourceManager const&, swift::SourceLoc) (line 535)
                                                    – Crash case at this location: stacks/1076-swift-lexer-getlocforendoftoken.txt
                                                    swift::Parser::parseExprImpl(swift::Diag<>, bool) (line 138)
                                                    – Crash case at this location: stacks/0455-swift-parser-parseexprimpl.txt
                                                    swift::Parser::parseGenericArguments(llvm::SmallVectorImpl<swift::TypeRepr*>&, swift::SourceLoc&, swift::SourceLoc&) (line 285)
                                                    – Crash case at this location: stacks/0356-swift-parser-parsegenericarguments.txt
                                                    swift::constraints::ConstraintSystem::assignFixedType(swift::TypeVariableType*, swift::Type, bool) (line 827)
                                                    – Crash case at this location: stacks/1241-swift-constraints-constraintsystem-assignfixedtype.txt
                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                            swift::Expr::walk(swift::ASTWalker&) (line 26)
                              (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                    – Crash case at this location: stacks/1255-getselftypeforcontainer.txt
                                                                      void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                                                      – Crash case at this location: stacks/1229-void.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                    validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                      swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                        swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                          swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                            swift::Expr::walk(swift::ASTWalker&) (line 76)
                              (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                  (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                        swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                              swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                    swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                      swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                            swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                              swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                swift::DiagnosticEngine::flushActiveDiagnostic() (line 4667)
                                                                – Crash case at this location: stacks/0839-swift-diagnosticengine-flushactivediagnostic.txt
                                                                swift::ModuleFile::getType(swift::Fixnum<31u, unsigned int>) (line 8359)
                                                                – Crash case at this location: stacks/0602-swift-modulefile-gettype.txt
                                                                void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                                                – Crash case at this location: stacks/0689-b.txt
                                                                swift::ClangModuleUnit::getAdapterModule() const (line 71)
                                                                – Crash case at this location: stacks/0628-swift-clangmoduleunit-getadaptermodule.txt
                                                                swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 3521)
                                                                – Crash case at this location: stacks/1814-swift-constraints-constraintsystem-matchtypes.txt
                                                                swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 729)
                                                                – Crash case at this location: stacks/0985-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                                swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                  swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                          resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                          – Crash case at this location: stacks/0825-resolvetypedecl.txt
                                swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 7574)
                                  swift::constraints::ConstraintSystem::openType(swift::Type, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&, swift::DeclContext*, bool, swift::constraints::DependentTypeOpener*) (line 202)
                                    swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                      (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 2165)
                                        swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 335)
                                        – Crash case at this location: stacks/1673-swift-constraints-constraintsystem-opengeneric.txt
                            swift::Expr::walk(swift::ASTWalker&) (line 53)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6474)
                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                                    (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                      swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                        swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                                  swift::TypeBase::operator new(unsigned long, swift::ASTContext const&, swift::AllocationArena, unsigned int) (line 92)
                                                  – Crash case at this location: stacks/0440-resolvetypedecl.txt
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1935)
                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1679)
                                  (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                    swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                      (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                            swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                                  swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                        swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                          swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                  swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                    swift::GenericSignature::get(llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>) (line 324)
                                                                    – Crash case at this location: stacks/1064-swift-genericsignature-get.txt
                                    swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 5482)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                              – Crash case at this location: stacks/1562-resolvetypedecl.txt
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                                (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                        swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                          swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                  swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                  – Crash case at this location: stacks/0347-llvm-smallvectorbase-grow-pod.txt
                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 5200)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                        swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                          swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                  swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                    swift::DependentMemberType::get(swift::Type, swift::AssociatedTypeDecl*, swift::ASTContext const&) (line 211)
                                                    – Crash case at this location: stacks/1677-swift-dependentmembertype-get.txt
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                                    (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                      swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                            swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                              swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                    swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                      swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                        swift::TypeBase::getCanonicalType() (line 1845)
                                                        – Crash case at this location: stacks/1745-swift-typebase-getcanonicaltype.txt
                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3572)
                                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2687)
                                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1935)
                                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1679)
                                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                              (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                                    swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                                          swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                                swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                                  swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                        swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                          swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                            swift::Module::lookupValue(llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, swift::NLKind, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 90)
                                                                            – Crash case at this location: stacks/1825-swift-module-lookupvalue.txt
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3478)
                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                                  (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                    swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                      (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                            swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                                  swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                        swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                          swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                  swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                    swift::DictionaryType::get(swift::Type, swift::Type) (line 206)
                                                                    – Crash case at this location: stacks/1731-swift-dictionarytype-get.txt
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 5200)
                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                    swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                      swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                            swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                              swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                swift::ArchetypeType::setNestedTypes(swift::ASTContext&, llvm::MutableArrayRef<std::__1::pair<swift::Identifier, llvm::PointerUnion<swift::ArchetypeType*, swift::Type> > >) (line 45)
                                                                – Crash case at this location: stacks/1866-swift-archetypetype-setnestedtypes.txt
                        swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                          swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                            swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                              swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                  swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                    swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                    – Crash case at this location: stacks/0063-tiny-malloc-from-free-list.txt
                        swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1000)
                          swift::constraints::ConstraintSystem::salvage(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::Expr*, bool) (line 300)
                            swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                              swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 4065)
                                  swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                    swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                      swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                        swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 4065)
                                          swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 182)
                                              swift::constraints::ConstraintSystem::simplifyFixConstraint(swift::constraints::Fix, swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 993)
                                                swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 113)
                                                  swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 125)
                                                  – Crash case at this location: stacks/0366-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                        swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                          swift::Expr::walk(swift::ASTWalker&) (line 53)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2667)
                              (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1192)
                                  swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                                  – Crash case at this location: stacks/0739-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                        swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                          swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                            swift::Expr::walk(swift::ASTWalker&) (line 76)
                              swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 90)
                                (anonymous namespace)::ExprRewriter::visitApplyExpr(swift::ApplyExpr*) (line 79)
                                  (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 1457)
                                    (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 511)
                                      swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const (line 1204)
                                      – Crash case at this location: stacks/0840-swift-constraints-solution-computesubstitutions.txt
                                      swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const (line 994)
                                        swift::TypeChecker::substType(swift::Module*, swift::Type, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool) (line 36)
                                          swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const (line 122)
                                            swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                              std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 949)
                                                getMemberForBaseType(swift::Module*, swift::Type, swift::AssociatedTypeDecl*, swift::Identifier, swift::LazyResolver*) (line 409)
                                                – Crash case at this location: stacks/1726-getmemberforbasetype.txt
                              swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 4209)
                                (anonymous namespace)::ExprRewriter::applyMemberRefExpr(swift::Expr*, swift::Expr*, swift::SourceLoc, swift::SourceLoc, bool) (line 1100)
                                  (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 3459)
                                    (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 1457)
                                      std::__1::__function::__func<swift::constraints::ConstraintSystem::simplifyType(swift::Type, llvm::SmallPtrSet<swift::TypeVariableType*, 16u>&)::$_5, std::__1::allocator<swift::constraints::ConstraintSystem::simplifyType(swift::Type, llvm::SmallPtrSet<swift::TypeVariableType*, 16u>&)::$_5>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 608)
                                      – Crash case at this location: stacks/1413-std-function-func-swift-constraints-constraintsystem-simplifytype.txt
                            swift::Expr::walk(swift::ASTWalker&) (line 53)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3572)
                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1635)
                                  swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*)::ExprWalker::walkToExprPre(swift::Expr*) (line 1112)
                                    swift::TypeChecker::typeCheckClosureBody(swift::ClosureExpr*) (line 143)
                                      swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 473)
                                        swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 123)
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2526)
                                            void checkCircularity<swift::ClassDecl>(swift::TypeChecker&, swift::ClassDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::ClassDecl*>&) (line 132)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                                          – Crash case at this location: stacks/1257-swift-declcontext-lookupqualified.txt
                    validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                        validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 766)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                    – Crash case at this location: stacks/0446-resolvetypedecl.txt
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                  existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                  swift::TypeBase::getCanonicalType() (line 775)
                                                                    swift::TypeBase::getCanonicalType() (line 1403)
                                                                      swift::ArchetypeType::setNestedTypes(swift::ASTContext&, llvm::MutableArrayRef<std::__1::pair<swift::Identifier, llvm::PointerUnion<swift::ArchetypeType*, swift::Type> > >) (line 45)
                                                                      – Crash case at this location: stacks/1911-swift-archetypetype-setnestedtypes.txt
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                    – Crash case at this location: stacks/1424-getselftypeforcontainer.txt
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                  swift::TypeBase::getCanonicalType() (line 775)
                                                                    swift::TypeBase::getCanonicalType() (line 1403)
                                                                    – Crash case at this location: stacks/0923-swift-typebase-getcanonicaltype.txt
                                                                      swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 65)
                                                                      – Crash case at this location: stacks/0935-swift-constraints-constraintsystem-solve.txt
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 48)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                  swift::TypeBase::getCanonicalType() (line 775)
                                                                    swift::TypeBase::getCanonicalType() (line 1403)
                                                                    – Crash case at this location: stacks/1593-swift-typebase-getcanonicaltype.txt
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                    – Crash case at this location: stacks/0604-swift-typebase-operator.txt
                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                  – Crash case at this location: stacks/0554-resolvetypedecl.txt
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1192)
                                    swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                    – Crash case at this location: stacks/0402-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 846)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 48)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                  swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                    swift::TypeBase::getCanonicalType() (line 775)
                                                                      swift::TypeBase::getCanonicalType() (line 1403)
                                                                        void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                                                        – Crash case at this location: stacks/0957-void.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 8191)
                    (anonymous namespace)::RawValueKey::RawValueKey(swift::LiteralExpr*) (line 174)
                      swift::IntegerLiteralExpr::getValue() const (line 43)
                        swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                        – Crash case at this location: stacks/0650-szone-malloc-should-clear.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6649)
                    swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                    – Crash case at this location: stacks/0443-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                    – Crash case at this location: stacks/0508-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6663)
                    void (anonymous namespace)::DeclChecker::checkExplicitConformance<swift::EnumDecl>(swift::EnumDecl*, swift::Type) (line 138)
                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3731)
                        (anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*) (line 729)
                          swift::TypeChecker::lookupMember(swift::Type, swift::DeclName, swift::DeclContext*, bool) (line 112)
                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                              – Crash case at this location: stacks/1835-getselftypeforcontainer.txt
                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3691)
                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                          swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                            swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                  swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                    std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                    swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                      swift::TypeBase::getCanonicalType() (line 775)
                                                        swift::TypeBase::getCanonicalType() (line 1403)
                                                        – Crash case at this location: stacks/1579-swift-typebase-getcanonicaltype.txt
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                        getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                        – Crash case at this location: stacks/1883-getselftypeforcontainer.txt
                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                          swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                            swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                            – Crash case at this location: stacks/1805-swift-type-walk.txt
                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3751)
                        (anonymous namespace)::ConformanceChecker::resolveWitnessViaDerivation(swift::ValueDecl*) (line 199)
                          matchWitness(swift::TypeChecker&, swift::NormalProtocolConformance*, swift::DeclContext*, swift::ValueDecl*, swift::ValueDecl*) (line 791)
                            swift::constraints::ConstraintSystem::getTypeOfReference(swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 655)
                              swift::constraints::ConstraintSystem::openType(swift::Type, swift::constraints::ConstraintLocatorBuilder, swift::DeclContext*, bool, swift::constraints::DependentTypeOpener*) (line 264)
                                swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                  (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 1050)
                                    swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 327)
                                      swift::ArchetypeBuilder::mapTypeIntoContext(swift::DeclContext*, swift::Type) (line 149)
                                        swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                        – Crash case at this location: stacks/1306-swift-type-transform.txt
                                    swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 335)
                                    – Crash case at this location: stacks/0177-swift-constraints-constraintsystem-opengeneric.txt
                        (anonymous namespace)::ConformanceChecker::resolveWitnessViaDerivation(swift::ValueDecl*) (line 159)
                          swift::DerivedConformance::deriveEquatable(swift::TypeChecker&, swift::NominalTypeDecl*, swift::ValueDecl*) (line 1710)
                          – Crash case at this location: stacks/0120-swift-derivedconformance-deriveequatable.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 17223)
                    swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3731)
                      (anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*) (line 1141)
                        matchWitness(swift::TypeChecker&, swift::NormalProtocolConformance*, swift::DeclContext*, swift::ValueDecl*, swift::ValueDecl*) (line 682)
                          swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                          – Crash case at this location: stacks/0057-get-type-of-member-reference.txt
                            swift::CompleteGenericTypeResolver::resolveGenericTypeParamType(swift::GenericTypeParamType*) (line 18)
                            – Crash case at this location: stacks/1190-swift-completegenerictyperesolver-resolvegenerictypeparamtype.txt
                            std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 239)
                            – Crash case at this location: stacks/0851-std-function-func-swift-type-subst.txt
                            vtable for llvm::raw_ostream (line 16)
                            – Crash case at this location: stacks/1738-vtable.txt
                            swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 133)
                            – Crash case at this location: stacks/1701-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                            swift::TupleType::get(llvm::ArrayRef<swift::TupleTypeElt>, swift::ASTContext const&) (line 771)
                            – Crash case at this location: stacks/1346-swift-tupletype-get.txt
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                            – Crash case at this location: stacks/1181-swift-unqualifiedlookup-unqualifiedlookup.txt
                            swift::GenericFunctionType::get(swift::GenericSignature*, swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 438)
                            – Crash case at this location: stacks/1188-swift-genericfunctiontype-get.txt
                            swift::constraints::ConstraintGraph::gatherConstraints(swift::TypeVariableType*, llvm::SmallVectorImpl<swift::constraints::Constraint*>&) (line 843)
                            – Crash case at this location: stacks/0361-swift-constraints-constraintgraph-gatherconstraints.txt
                            – Crash case at this location: stacks/1616-swift-constraints-constraintgraph-gatherconstraints.txt
                            llvm::FoldingSet<swift::TupleType>::NodeEquals(llvm::FoldingSetImpl::Node*, llvm::FoldingSetNodeID const&, unsigned int, llvm::FoldingSetNodeID&) const (line 36)
                            – Crash case at this location: stacks/1089-llvm-foldingset-swift-tupletype-nodeequals.txt
                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                            – Crash case at this location: stacks/1106-swift-constraints-constraintsystem-addconstraint.txt
                            llvm::FoldingSetNodeID::operator==(llvm::FoldingSetNodeID const&) const (line 40)
                            – Crash case at this location: stacks/1149-llvm-foldingsetnodeid-operator.txt
                            swift::ScopeInfo::addToScope(swift::ValueDecl*, swift::Parser&) (line 239)
                            – Crash case at this location: stacks/0363-swift-scopeinfo-addtoscope.txt
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 248)
                            – Crash case at this location: stacks/1197-swift-typechecker-validatetype.txt
                            swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 3521)
                            – Crash case at this location: stacks/1176-swift-constraints-constraintsystem-matchtypes.txt
                            swift::ParenType::get(swift::ASTContext const&, swift::Type) (line 278)
                            – Crash case at this location: stacks/1171-swift-parentype-get.txt
                            swift::NominalTypeDecl::prepareLookupTable() (line 436)
                            – Crash case at this location: stacks/1180-swift-nominaltypedecl-preparelookuptable.txt
                    swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3426)
                      (anonymous namespace)::ConformanceChecker::resolveTypeWitnessViaLookup(swift::AssociatedTypeDecl*) (line 174)
                        swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 194)
                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                    swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                            – Crash case at this location: stacks/1310-getselftypeforcontainer.txt
                    swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3691)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                  swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                    swift::TypeBase::getCanonicalType() (line 775)
                                                      swift::TypeBase::getCanonicalType() (line 1403)
                                                      – Crash case at this location: stacks/1868-swift-typebase-getcanonicaltype.txt
                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                      – Crash case at this location: stacks/0308-llvm-raw-ostream-write.txt
                    swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3988)
                      (anonymous namespace)::ConformanceChecker::resolveTypeWitnessViaDefault(swift::AssociatedTypeDecl*) (line 543)
                        swift::TypeChecker::substType(swift::Module*, swift::Type, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool) (line 36)
                          swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const (line 122)
                            swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                              std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 949)
                              – Crash case at this location: stacks/1955-std-function-func-swift-type-subst.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2193)
                    checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 186)
                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                      swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                      – Crash case at this location: stacks/0904-swift-completegenerictyperesolver-resolvedependentmembertype.txt
                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 266)
                              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                              swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                              – Crash case at this location: stacks/0988-swift-typechecker-typecheckdecl.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 1857)
                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 535)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                      applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                        swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 750)
                                          swift::TypeChecker::checkSubstitutions(llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, llvm::DenseMap<swift::SubstitutableType*, llvm::SmallVector<swift::ProtocolConformance*, 2u>, llvm::DenseMapInfo<swift::SubstitutableType*> >&, swift::DeclContext*, swift::SourceLoc, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >*) (line 300)
                                          – Crash case at this location: stacks/1586-swift-typechecker-checksubstitutions.txt
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                      – Crash case at this location: stacks/0544-resolvetypedecl.txt
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 812)
                            swift::ArchetypeBuilder::addRequirement(swift::RequirementRepr const&) (line 56)
                              swift::ArchetypeBuilder::addSameTypeRequirement(swift::Type, swift::SourceLoc, swift::Type) (line 34)
                                swift::ArchetypeBuilder::resolveArchetype(swift::Type) (line 25)
                                – Crash case at this location: stacks/1462-swift-archetypebuilder-resolvearchetype.txt
                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 194)
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 535)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                    swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                    – Crash case at this location: stacks/0211-swift-completegenerictyperesolver-resolvedependentmembertype.txt
                                      swift::DiagnosticEngine::flushActiveDiagnostic() (line 4667)
                                      – Crash case at this location: stacks/0318-swift-diagnosticengine-flushactivediagnostic.txt
                                      swift::Lexer::lexIdentifier() (line 183)
                                      – Crash case at this location: stacks/1268-swift-lexer-lexidentifier.txt
                                      diagnoseUnknownType(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::GenericTypeResolver*) (line 807)
                                      – Crash case at this location: stacks/0066-diagnoseunknowntype.txt
                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                – Crash case at this location: stacks/0733-resolvetypedecl.txt
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                      validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                        swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                            swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                              swift::Expr::walk(swift::ASTWalker&) (line 53)
                                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                                                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                                                    (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                                      swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                            swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                              swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                    swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                      swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                        swift::TypeBase::getAnyOptionalObjectType(swift::OptionalTypeKind&) (line 15)
                                                                        – Crash case at this location: stacks/1548-swift-typebase-getanyoptionalobjecttype.txt
                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1582)
                      finalizeGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::DeclContext*, swift::TypeChecker&) (line 522)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                  – Crash case at this location: stacks/1301-swift-declcontext-lookupqualified.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                        validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                  existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 766)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                      – Crash case at this location: stacks/0479-no-stacktrace.txt
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                    – Crash case at this location: stacks/0598-clang-sema-lookupname.txt
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1192)
                                    swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                                    – Crash case at this location: stacks/0397-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                        validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                  – Crash case at this location: stacks/0346-resolvetypedecl.txt
                                    swift::Lexer::getLocForEndOfToken(swift::SourceManager const&, swift::SourceLoc) (line 535)
                                    – Crash case at this location: stacks/1608-swift-lexer-getlocforendoftoken.txt
                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 48)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                                – Crash case at this location: stacks/1777-resolvetypedecl.txt
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                  existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                      swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                        swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                        – Crash case at this location: stacks/0831-x.txt
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 48)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                        getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                          swift::AvailabilityAttr::isUnavailable(swift::Decl const*) (line 22)
                                                                          – Crash case at this location: stacks/1396-swift-availabilityattr-isunavailable.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2287)
                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                      validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                          validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 832)
                                                            checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                              – Crash case at this location: stacks/0320-getselftypeforcontainer.txt
                                      validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                        swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                            swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                              swift::Expr::walk(swift::ASTWalker&) (line 76)
                                                (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                        swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                          swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                  swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                  – Crash case at this location: stacks/1230-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 832)
                                      checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                          swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                            swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                  swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                    std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                        getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                          swift::ModuleFile::getDecl(swift::Fixnum<31u, unsigned int>, swift::Optional<swift::DeclContext*>) (line 7248)
                                                                          – Crash case at this location: stacks/0295-getselftypeforcontainer.txt
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 832)
                                                                  checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                                            swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                                              swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                                                  swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                                                    swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                                                      std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                                                                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                                                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                                                                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                                                                                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                                                                                                                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                                                                                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                                                                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                                                                                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                                                                                                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                                                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                                                                                                                                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                                                                                                                                                swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 852)
                                                                                                                                                                                  swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                                                                                                                                                  – Crash case at this location: stacks/0119-swift-dependentmembertype-get.txt
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                – Crash case at this location: stacks/0561-resolvetypedecl.txt
                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1192)
                                        swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                                        – Crash case at this location: stacks/0842-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                        applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                          swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 750)
                                            swift::TypeChecker::checkSubstitutions(llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, llvm::DenseMap<swift::SubstitutableType*, llvm::SmallVector<swift::ProtocolConformance*, 2u>, llvm::DenseMapInfo<swift::SubstitutableType*> >&, swift::DeclContext*, swift::SourceLoc, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >*) (line 300)
                                            – Crash case at this location: stacks/0575-swift-typechecker-checksubstitutions.txt
                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 48)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                      swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 1070)
                                                        swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                        – Crash case at this location: stacks/0692-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                      – Crash case at this location: stacks/1198-resolvetypedecl.txt
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 812)
                            swift::ArchetypeBuilder::addRequirement(swift::RequirementRepr const&) (line 83)
                              swift::ArchetypeBuilder::resolveArchetype(swift::Type) (line 25)
                              – Crash case at this location: stacks/1763-swift-archetypebuilder-resolvearchetype.txt
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 685)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                    – Crash case at this location: stacks/1556-resolvetypedecl.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6131)
                    checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                    applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                      swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 238)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 80)
                                                  – Crash case at this location: stacks/1806-swift-typechecker-validatedecl.txt
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 22856)
                          swift::FunctionType::get(swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 158)
                          – Crash case at this location: stacks/1474-swift-functiontype-get.txt
                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                                                                                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                                                                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                                                    validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                                                                            swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                                                                              existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                                    – Crash case at this location: stacks/1637-getselftypeforcontainer.txt
                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                      – Crash case at this location: stacks/1657-resolvetypedecl.txt
                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                                    swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                      swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                      – Crash case at this location: stacks/1708-swift-type-walk.txt
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                        swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                          swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                          – Crash case at this location: stacks/1887-swift-type-walk.txt
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                      – Crash case at this location: stacks/1524-getselftypeforcontainer.txt
                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                        swift::constraints::ConstraintSystem::assignFixedType(swift::TypeVariableType*, swift::Type, bool) (line 827)
                                                        – Crash case at this location: stacks/1844-swift-constraints-constraintsystem-assignfixedtype.txt
                                                        swift::ModuleFile::lookupValue(swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&) (line 1472)
                                                        – Crash case at this location: stacks/1123-swift-modulefile-lookupvalue.txt
                                                        swift::ModuleFile::getDecl(swift::Fixnum<31u, unsigned int>, swift::Optional<swift::DeclContext*>) (line 7248)
                                                        – Crash case at this location: stacks/1367-swift-modulefile-getdecl.txt
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 832)
                        checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                            swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                              swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                  swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                    swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                      std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                      swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                        swift::TypeBase::getCanonicalType() (line 775)
                                                          swift::TypeBase::getCanonicalType() (line 1403)
                                                          – Crash case at this location: stacks/1713-swift-typebase-getcanonicaltype.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 271)
                    swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                      swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                        swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                          swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                            swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 182)
                                swift::constraints::ConstraintSystem::simplifyFixConstraint(swift::constraints::Fix, swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 993)
                                  swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 113)
                                    swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 125)
                                    – Crash case at this location: stacks/0878-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                      swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 625)
                        swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*)::BindingListener::builtConstraints(swift::constraints::ConstraintSystem&, swift::Expr*) (line 93)
                          swift::constraints::ConstraintSystem::generateConstraints(swift::Pattern*, swift::constraints::ConstraintLocatorBuilder) (line 58)
                            (anonymous namespace)::ConstraintGenerator::getTypeForPattern(swift::Pattern*, bool, swift::constraints::ConstraintLocatorBuilder) (line 1022)
                              swift::constraints::ConstraintSystem::openType(swift::Type, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&, swift::DeclContext*, bool, swift::constraints::DependentTypeOpener*) (line 202)
                                swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                – Crash case at this location: stacks/0357-swift-type-transform.txt
                      swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                        swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                          swift::Expr::walk(swift::ASTWalker&) (line 26)
                            swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*)::ExprWalker::walkToExprPre(swift::Expr*) (line 1112)
                              swift::TypeChecker::typeCheckClosureBody(swift::ClosureExpr*) (line 143)
                                swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 473)
                                  swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 123)
                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2164)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2287)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1605)
                                          swift::NominalTypeDecl::computeType() (line 29)
                                            swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                                            – Crash case at this location: stacks/1261-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                                swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 554)
                                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                                    swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                                      swift::Expr::walk(swift::ASTWalker&) (line 76)
                                        swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 90)
                                          (anonymous namespace)::ExprRewriter::visitApplyExpr(swift::ApplyExpr*) (line 79)
                                            (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 585)
                                              (anonymous namespace)::ExprRewriter::coerceCallArguments(swift::Expr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 2391)
                                                getCallerDefaultArg(swift::TypeChecker&, swift::DeclContext*, swift::SourceLoc, swift::ConcreteDeclRef&, unsigned int) (line 61)
                                                – Crash case at this location: stacks/1251-getcallerdefaultarg.txt
                          swift::Expr::walk(swift::ASTWalker&) (line 53)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3458)
                              swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*)::ExprWalker::walkToExprPre(swift::Expr*) (line 1112)
                                swift::TypeChecker::typeCheckClosureBody(swift::ClosureExpr*) (line 143)
                                  swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 554)
                                    swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                      swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                        swift::Expr::walk(swift::ASTWalker&) (line 53)
                                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                    swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                      swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                            swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                              swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                              – Crash case at this location: stacks/0291-swift-clangmoduleunit-lookupvalue.txt
                                                                swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 200)
                                                                – Crash case at this location: stacks/1276-swift-metatypetype-get.txt
                                        swift::Expr::walk(swift::ASTWalker&) (line 76)
                                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                              (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                                    swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                                          swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                                swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                                  swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                        swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                          swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                          – Crash case at this location: stacks/1213-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                                    swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                                      swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                                        swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                          swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                              swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                – Crash case at this location: stacks/1146-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                                  swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 353)
                                    swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 3898)
                                      swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                        swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                          swift::Expr::walk(swift::ASTWalker&) (line 53)
                                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                                              (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                                swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                      swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                        swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                              swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                  swift::TypeAliasDecl::TypeAliasDecl(swift::SourceLoc, swift::Identifier, swift::SourceLoc, swift::TypeLoc, swift::DeclContext*) (line 258)
                                                                  – Crash case at this location: stacks/1221-swift-typealiasdecl-typealiasdecl.txt
                                                                  swift::ModuleFile::getType(swift::Fixnum<31u, unsigned int>) (line 8359)
                                                                  – Crash case at this location: stacks/1219-swift-modulefile-gettype.txt
                                                                  swift::Lexer::lexImpl() (line 1152)
                                                                  – Crash case at this location: stacks/1223-swift-lexer-leximpl.txt
                                                                  swift::ModuleFile::maybeReadConformance(swift::Type, llvm::BitstreamCursor&) (line 345)
                                                                  – Crash case at this location: stacks/0284-swift-modulefile-maybereadconformance.txt
                                                                  swift::constraints::Solution::Solution(swift::constraints::Solution&&) (line 319)
                                                                  – Crash case at this location: stacks/0532-swift-constraints-solution-solution.txt
                                                                  swift::NominalTypeDecl::computeType() (line 184)
                                                                  – Crash case at this location: stacks/1222-swift-nominaltypedecl-computetype.txt
                                                                  swift::PrintingDiagnosticConsumer::handleDiagnostic(swift::SourceManager&, swift::SourceLoc, swift::DiagnosticKind, llvm::StringRef, swift::DiagnosticInfo const&) (line 1288)
                                                                  – Crash case at this location: stacks/1287-swift-printingdiagnosticconsumer-handlediagnostic.txt
                                                                  swift::ModuleFile::maybeReadPattern() (line 772)
                                                                  – Crash case at this location: stacks/0354-swift-modulefile-maybereadpattern.txt
                                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 318)
                                                                  – Crash case at this location: stacks/1217-swift-typechecker-resolveidentifiertype.txt
                      swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                        swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                          swift::Expr::walk(swift::ASTWalker&) (line 53)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3478)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2711)
                                (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                        swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                          swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                  swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                    swift::NominalTypeDecl::computeType() (line 184)
                                                    – Crash case at this location: stacks/1175-swift-nominaltypedecl-computetype.txt
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2687)
                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                                  (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                    swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                          swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                            swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                  swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                    swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                      cleanupIllFormedExpression(swift::ASTContext&, swift::constraints::ConstraintSystem*, swift::Expr*)::CleanupIllFormedExpression::walkToExprPost(swift::Expr*) (line 290)
                                                      – Crash case at this location: stacks/0341-cleanupillformedexpression.txt
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1385)
                                  (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                    swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                      swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                                llvm::OnDiskChainedHashTable<swift::ModuleFile::DeclTableInfo>::find(swift::Identifier const&, swift::ModuleFile::DeclTableInfo*) (line 206)
                                                – Crash case at this location: stacks/1752-llvm-ondiskchainedhashtable-swift-modulefile-decltableinfo-find.txt
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2711)
                              (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                      swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                        swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                              swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                – Crash case at this location: stacks/0303-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                          swift::Expr::walk(swift::ASTWalker&) (line 76)
                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                      swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                            swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                            – Crash case at this location: stacks/0426-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2078)
                    swift::TypeChecker::addImplicitConstructors(swift::NominalTypeDecl*, llvm::SmallVectorImpl<swift::Decl*>&) (line 754)
                      createImplicitConstructor(swift::TypeChecker&, swift::NominalTypeDecl*, (anonymous namespace)::ImplicitConstructorKind) (line 476)
                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                          validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                            swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                              swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1000)
                                swift::constraints::ConstraintSystem::salvage(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::Expr*, bool) (line 300)
                                  swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                    swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                      swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 4065)
                                        swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                          swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                            swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                              swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 4065)
                                                swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 182)
                                                    swift::constraints::ConstraintSystem::simplifyFixConstraint(swift::constraints::Fix, swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 993)
                                                      swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 113)
                                                        swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 125)
                                                        – Crash case at this location: stacks/1740-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                              swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                                swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                                  swift::Expr::walk(swift::ASTWalker&) (line 76)
                                    swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 90)
                                      (anonymous namespace)::ExprRewriter::visitApplyExpr(swift::ApplyExpr*) (line 79)
                                        (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 1457)
                                          (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 511)
                                            swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const (line 1204)
                                            – Crash case at this location: stacks/1561-swift-constraints-solution-computesubstitutions.txt
                              swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                                swift::Expr::walk(swift::ASTWalker&) (line 53)
                                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1935)
                                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1635)
                                      (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1192)
                                          swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                                          – Crash case at this location: stacks/1758-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2099)
                                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3914)
                                      (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                              swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                – Crash case at this location: stacks/0861-swift-type-walk.txt
                              swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                                swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                                  swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                    swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                        swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                          swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                            llvm::OnDiskChainedHashTable<swift::ModuleFile::DeclTableInfo>::find(swift::Identifier const&, swift::ModuleFile::DeclTableInfo*) (line 206)
                                            – Crash case at this location: stacks/0635-llvm-ondiskchainedhashtable-swift-modulefile-decltableinfo-find.txt
                                    swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                      swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 65)
                                        swift::constraints::ConstraintSystem::simplify() (line 103)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                            swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                                  swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                        swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                          swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                  swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                  – Crash case at this location: stacks/1929-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                              swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                  swift::Expr::walk(swift::ASTWalker&) (line 76)
                                    (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                      swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                            swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                              swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                    swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                      swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                        swift::TypeBase::getCanonicalType() (line 1122)
                                                        – Crash case at this location: stacks/1256-swift-typebase-getcanonicaltype.txt
                                                        swift::ClangModuleUnit::getAdapterModule() const (line 71)
                                                        – Crash case at this location: stacks/1361-swift-clangmoduleunit-getadaptermodule.txt
                                      swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                        swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                                  clang::ASTContext::getRecordType(clang::RecordDecl const*) const (line 97)
                                                  – Crash case at this location: stacks/1691-clang-astcontext-getrecordtype.txt
                                      swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                        (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                              swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                                    swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                          swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                            swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                  swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                    swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                    – Crash case at this location: stacks/0577-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                                  swift::Expr::walk(swift::ASTWalker&) (line 53)
                                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1385)
                                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                  swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                        swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                          swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                            llvm::DenseMapBase<llvm::SmallDenseMap<std::__1::pair<swift::CanType, swift::Identifier>, llvm::TinyPtrVector<swift::ValueDecl*>, 4u, llvm::DenseMapInfo<std::__1::pair<swift::CanType, swift::Identifier> > >, std::__1::pair<swift::CanType, swift::Identifier>, llvm::TinyPtrVector<swift::ValueDecl*>, llvm::DenseMapInfo<std::__1::pair<swift::CanType, swift::Identifier> > >::moveFromOldBuckets(std::__1::pair<std::__1::pair<swift::CanType, swift::Identifier>, llvm::TinyPtrVector<swift::ValueDecl*> >*, std::__1::pair<std::__1::pair<swift::CanType, swift::Identifier>, llvm::TinyPtrVector<swift::ValueDecl*> >*) (line 181)
                                                            – Crash case at this location: stacks/0348-llvm-densemapbase-llvm-smalldensemap-std-pair-swift-cantype.txt
                                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3478)
                                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1385)
                                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                  swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                        swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                          swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                          – Crash case at this location: stacks/0417-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                  swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                        swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                          swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                            swift::TypeBase::getAnyOptionalObjectType(swift::OptionalTypeKind&) (line 15)
                                                            – Crash case at this location: stacks/0846-swift-typebase-getanyoptionalobjecttype.txt
                          validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                                                                      validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                                                                        swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                                                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                                                                                            swift::Expr::walk(swift::ASTWalker&) (line 26)
                                                                                              (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                                                                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                                                                            swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                                                                              swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                                                                                  swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                                                                                    swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                                                                                      std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                                                                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                                                                                          getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                                                                                          – Crash case at this location: stacks/0169-swift-typebase-operator.txt
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                          resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                          – Crash case at this location: stacks/1897-resolvetypedecl.txt
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                    swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                            – Crash case at this location: stacks/1273-getselftypeforcontainer.txt
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1192)
                                          swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                                          – Crash case at this location: stacks/1124-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 2164)
                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 489)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                                      – Crash case at this location: stacks/0282-malloc-zone-malloc.txt
                    swift::TypeChecker::addImplicitConstructors(swift::NominalTypeDecl*, llvm::SmallVectorImpl<swift::Decl*>&) (line 257)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 13616)
                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                                  validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                                    swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                      swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                                        swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                                          swift::Expr::walk(swift::ASTWalker&) (line 53)
                                                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3572)
                                                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1679)
                                                                (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                                        swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                                          swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                                swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                                  swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                                  – Crash case at this location: stacks/0873-no-stacktrace.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 1508)
                    swift::ArchetypeBuilder::mapTypeIntoContext(swift::DeclContext*, swift::Type) (line 149)
                      swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 537)
                        swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                          std::__1::__function::__func<swift::ArchetypeBuilder::mapTypeIntoContext(swift::Module*, swift::GenericParamList*, swift::Type)::$_3, std::__1::allocator<swift::ArchetypeBuilder::mapTypeIntoContext(swift::Module*, swift::GenericParamList*, swift::Type)::$_3>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 331)
                          – Crash case at this location: stacks/1808-std-function-func-swift-archetypebuilder-maptypeintocontext.txt
                      swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                        std::__1::__function::__func<swift::ArchetypeBuilder::mapTypeIntoContext(swift::Module*, swift::GenericParamList*, swift::Type)::$_3, std::__1::allocator<swift::ArchetypeBuilder::mapTypeIntoContext(swift::Module*, swift::GenericParamList*, swift::Type)::$_3>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 331)
                          llvm::OnDiskChainedHashTable<swift::ModuleFile::DeclTableInfo>::find(swift::Identifier const&, swift::ModuleFile::DeclTableInfo*) (line 206)
                          – Crash case at this location: stacks/0756-llvm-ondiskchainedhashtable-swift-modulefile-decltableinfo-find.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2615)
                    swift::TypeChecker::addImplicitConstructors(swift::NominalTypeDecl*, llvm::SmallVectorImpl<swift::Decl*>&) (line 257)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 13616)
                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                                  swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                    swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                    – Crash case at this location: stacks/1585-swift-type-walk.txt
                              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                                                  swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                                    swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                                    – Crash case at this location: stacks/1118-swift-type-walk.txt
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                                  validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                                    swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                      swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                                                        swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                                                          swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                                            swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                  swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                    swift::InFlightDiagnostic swift::DiagnosticEngine::diagnose<swift::DeclName>(swift::Decl const*, swift::Diag<swift::DeclName>, swift::detail::PassArgument<swift::DeclName>::type) (line 421)
                                                                    – Crash case at this location: stacks/0691-swift-inflightdiagnostic.txt
                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 186)
                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 266)
                              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                            swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                            – Crash case at this location: stacks/0643-swift-completegenerictyperesolver-resolvedependentmembertype.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 9436)
                    checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                        validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                          swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                            swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                              swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                swift::Expr::walk(swift::ASTWalker&) (line 53)
                                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6498)
                                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                              swift::TypeBase::getAnyOptionalObjectType(swift::OptionalTypeKind&) (line 15)
                                                              – Crash case at this location: stacks/1826-swift-typebase-getanyoptionalobjecttype.txt
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                        void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                                        – Crash case at this location: stacks/1105-void.txt
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                                  validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                                    swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                      swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                                        swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                                          swift::Expr::walk(swift::ASTWalker&) (line 76)
                                                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                                                (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                                                      swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                                                            swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                                            – Crash case at this location: stacks/1463-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                                  swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                    swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                      swift::ModuleFile::maybeReadGenericParams(swift::DeclContext*, llvm::BitstreamCursor&, swift::GenericParamList*) (line 1910)
                                                                                      – Crash case at this location: stacks/1029-swift-modulefile-maybereadgenericparams.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 881)
                    void checkCircularity<swift::EnumDecl>(swift::TypeChecker&, swift::EnumDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::EnumDecl*>&) (line 154)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                  – Crash case at this location: stacks/0373-swift-declcontext-lookupqualified.txt
                                    llvm::OnDiskChainedHashTable<swift::ModuleFile::DeclTableInfo>::find(swift::Identifier const&, swift::ModuleFile::DeclTableInfo*) (line 47)
                                    – Crash case at this location: stacks/1628-llvm-ondiskchainedhashtable-swift-modulefile-decltableinfo-find.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19092)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                            – Crash case at this location: stacks/0483-resolvetypedecl.txt
          swift::TypeChecker::typeCheckAbstractFunctionBody(swift::AbstractFunctionDecl*) (line 145)
            swift::TypeChecker::typeCheckDestructorBodyUntil(swift::DestructorDecl*, swift::SourceLoc) (line 199)
              swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 353)
                swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 1403)
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                    swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                      swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                        swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                            swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                              swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                              – Crash case at this location: stacks/1860-swift-constraints-constraintsystem-gettypeofmemberreference.txt
              swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 554)
                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                  swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                    swift::Expr::walk(swift::ASTWalker&) (line 53)
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2711)
                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                            (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                  swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                        swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                              swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                      swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                          llvm::BitstreamCursor::readRecord(unsigned int, llvm::SmallVectorImpl<unsigned long long>&, llvm::StringRef*) (line 455)
                                                          – Crash case at this location: stacks/0625-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                    swift::Expr::walk(swift::ASTWalker&) (line 76)
                      (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                        swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                          (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                      swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                            swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                              swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                    swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                      swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                        swift::GenericFunctionType::get(swift::GenericSignature*, swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 438)
                                                        – Crash case at this location: stacks/1633-swift-genericfunctiontype-get.txt
                        swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                              swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                      swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                        – Crash case at this location: stacks/0568-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                  swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                    swift::Expr::walk(swift::ASTWalker&) (line 76)
                      swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 2921)
                        (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 585)
                          (anonymous namespace)::ExprRewriter::coerceCallArguments(swift::Expr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 2391)
                            getCallerDefaultArg(swift::TypeChecker&, swift::DeclContext*, swift::SourceLoc, swift::ConcreteDeclRef&, unsigned int) (line 61)
                            – Crash case at this location: stacks/1444-getcallerdefaultarg.txt
              swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 473)
                swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 123)
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2526)
                    void checkCircularity<swift::ClassDecl>(swift::TypeChecker&, swift::ClassDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::ClassDecl*>&) (line 361)
                      void checkCircularity<swift::ClassDecl>(swift::TypeChecker&, swift::ClassDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::ClassDecl*>&) (line 361)
                      – Crash case at this location: stacks/0896-void.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6649)
                    swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                    – Crash case at this location: stacks/0539-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 186)
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                  swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 71)
                                  – Crash case at this location: stacks/1035-swift-completegenerictyperesolver-resolvedependentmembertype.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                      – Crash case at this location: stacks/0601-getselftypeforcontainer.txt
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                  swift::TypeBase::getCanonicalType() (line 775)
                                                    swift::TypeBase::getCanonicalType() (line 1403)
                                                    – Crash case at this location: stacks/1330-swift-typebase-getcanonicaltype.txt
                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                      swift::ModuleFile::getDecl(swift::Fixnum<31u, unsigned int>, swift::Optional<swift::DeclContext*>) (line 7248)
                                                      – Crash case at this location: stacks/1796-swift-modulefile-getdecl.txt
                                                      (anonymous namespace)::RawMemoryObject::readBytes(unsigned long long, unsigned long long, unsigned char*) const (line 58)
                                                      – Crash case at this location: stacks/0620-llvm-bitstreamcursor-readabbreviatedfield.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                    validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                      swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                        swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                          swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                            swift::Expr::walk(swift::ASTWalker&) (line 76)
                              (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                  (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                        swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                              swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                                swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                  swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                    swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                      swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                            swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                              swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                              – Crash case at this location: stacks/1057-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                                swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                      swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                        swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                              swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                – Crash case at this location: stacks/0498-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2695)
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                    swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                      swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                      – Crash case at this location: stacks/0680-swift-type-walk.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 53)
                        swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                          swift::Lexer::lexIdentifier() (line 183)
                          – Crash case at this location: stacks/1853-swift-lexer-lexidentifier.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2287)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1605)
                        swift::NominalTypeDecl::computeType() (line 29)
                          swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                          – Crash case at this location: stacks/0757-x.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 17223)
                    swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 2294)
                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3731)
                        (anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*) (line 1141)
                          matchWitness(swift::TypeChecker&, swift::NormalProtocolConformance*, swift::DeclContext*, swift::ValueDecl*, swift::ValueDecl*) (line 682)
                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                            – Crash case at this location: stacks/1498-swift-constraints-constraintsystem-gettypeofmemberreference.txt
      swift::performTypeChecking(swift::SourceFile&, swift::TopLevelContext&, unsigned int) (line 1496)
        swift::TypeChecker::typeCheckTopLevelCodeDecl(swift::TopLevelCodeDecl*) (line 136)
          swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 473)
            swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 123)
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 271)
                swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                    swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                      swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                        swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                          swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 182)
                            swift::constraints::ConstraintSystem::simplifyFixConstraint(swift::constraints::Fix, swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 993)
                              swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 113)
                                swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 125)
                                – Crash case at this location: stacks/0622-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                    swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                      swift::Expr::walk(swift::ASTWalker&) (line 53)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6498)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                              swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 766)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                        resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                          swift::ClangModuleUnit::getImportedModules(llvm::SmallVectorImpl<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >&, swift::Module::ImportFilter) const (line 1607)
                                          – Crash case at this location: stacks/1720-swift-clangmoduleunit-getimportedmodules.txt
                      swift::Expr::walk(swift::ASTWalker&) (line 76)
                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                            swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                  swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                    existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                  swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                    swift::TypeBase::getCanonicalType() (line 775)
                                                                      swift::TypeBase::getCanonicalType() (line 1403)
                                                                      – Crash case at this location: stacks/1411-swift-typebase-getcanonicaltype.txt
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                    swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                      swift::Expr::walk(swift::ASTWalker&) (line 26)
                        swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*)::ExprWalker::walkToExprPre(swift::Expr*) (line 1112)
                          swift::TypeChecker::typeCheckClosureBody(swift::ClosureExpr*) (line 143)
                            swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 473)
                              swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 123)
                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2164)
                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2287)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1605)
                                      swift::NominalTypeDecl::computeType() (line 29)
                                        swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                                        – Crash case at this location: stacks/1247-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 1857)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                                        – Crash case at this location: stacks/1117-swift-declcontext-lookupqualified.txt
                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2526)
                                  void checkCircularity<swift::ClassDecl>(swift::TypeChecker&, swift::ClassDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::ClassDecl*>&) (line 132)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                                – Crash case at this location: stacks/0301-swift-declcontext-lookupqualified.txt
                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 1857)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1582)
                                    finalizeGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::DeclContext*, swift::TypeChecker&) (line 522)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                                – Crash case at this location: stacks/0458-swift-declcontext-lookupqualified.txt
                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2695)
                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                  swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                    swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                    – Crash case at this location: stacks/0434-swift-type-walk.txt
                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2695)
                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                      – Crash case at this location: stacks/1294-getselftypeforcontainer.txt
                            swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 554)
                              swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                  swift::Expr::walk(swift::ASTWalker&) (line 76)
                                    (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                      swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                        swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                                – Crash case at this location: stacks/1178-resolvetypedecl.txt
                              swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                                swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                                  swift::Expr::walk(swift::ASTWalker&) (line 76)
                                    swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 90)
                                      (anonymous namespace)::ExprRewriter::visitApplyExpr(swift::ApplyExpr*) (line 79)
                                        (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 585)
                                          (anonymous namespace)::ExprRewriter::coerceCallArguments(swift::Expr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 2391)
                                            getCallerDefaultArg(swift::TypeChecker&, swift::DeclContext*, swift::SourceLoc, swift::ConcreteDeclRef&, unsigned int) (line 61)
                                            – Crash case at this location: stacks/0285-getcallerdefaultarg.txt
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 625)
                    swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*)::BindingListener::builtConstraints(swift::constraints::ConstraintSystem&, swift::Expr*) (line 93)
                      swift::constraints::ConstraintSystem::generateConstraints(swift::Pattern*, swift::constraints::ConstraintLocatorBuilder) (line 58)
                        (anonymous namespace)::ConstraintGenerator::getTypeForPattern(swift::Pattern*, bool, swift::constraints::ConstraintLocatorBuilder) (line 1022)
                          swift::constraints::ConstraintSystem::openType(swift::Type, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&, swift::DeclContext*, bool, swift::constraints::DependentTypeOpener*) (line 202)
                            swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 2771)
                              swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 2165)
                                  swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 335)
                                  – Crash case at this location: stacks/0819-swift-constraints-constraintsystem-opengeneric.txt
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                  swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                    swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1000)
                      swift::constraints::ConstraintSystem::salvage(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::Expr*, bool) (line 300)
                        swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                          swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                            swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 4065)
                              swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                  swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                    swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 4065)
                                      swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 182)
                                          swift::constraints::ConstraintSystem::simplifyFixConstraint(swift::constraints::Fix, swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 993)
                                            swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 113)
                                              swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 125)
                                              – Crash case at this location: stacks/0359-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                            swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                              swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                  swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 3230)
                                    swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                      swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 3230)
                                        swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                          swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                            swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                              swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 182)
                                                  swift::constraints::ConstraintSystem::simplifyFixConstraint(swift::constraints::Fix, swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 993)
                                                    swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 113)
                                                      swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 125)
                                                      – Crash case at this location: stacks/0462-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                          swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 3230)
                            swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                              swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 3230)
                                swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                  swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 182)
                                      swift::constraints::ConstraintSystem::simplifyFixConstraint(swift::constraints::Fix, swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 993)
                                        swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 113)
                                          swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 125)
                                            connectedComponentsDFS(swift::constraints::ConstraintGraph&, swift::constraints::ConstraintGraphNode&, unsigned int, llvm::SmallVectorImpl<unsigned int>&) (line 75)
                                            – Crash case at this location: stacks/0613-connectedcomponentsdfs.txt
                    swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                      swift::Expr::walk(swift::ASTWalker&) (line 53)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1543)
                          (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                              swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                    validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                      swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                        swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                          swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                            swift::Expr::walk(swift::ASTWalker&) (line 76)
                                              (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                                swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                                  swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                                          resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                                            swift::ArchetypeType::setNestedTypes(swift::ASTContext&, llvm::MutableArrayRef<std::__1::pair<swift::Identifier, llvm::PointerUnion<swift::ArchetypeType*, swift::Type> > >) (line 45)
                                                            – Crash case at this location: stacks/1336-swift-archetypetype-setnestedtypes.txt
                      swift::Expr::walk(swift::ASTWalker&) (line 76)
                        (anonymous namespace)::PreCheckExpression::walkToExprPost(swift::Expr*) (line 138)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                  – Crash case at this location: stacks/0964-resolvetypedecl.txt
                    swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                      swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                        swift::Expr::walk(swift::ASTWalker&) (line 76)
                          swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 90)
                            (anonymous namespace)::ExprRewriter::visitApplyExpr(swift::ApplyExpr*) (line 79)
                              (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 1457)
                                (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 511)
                                  swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const (line 1204)
                                  – Crash case at this location: stacks/0413-swift-constraints-solution-computesubstitutions.txt
                                  swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const (line 684)
                                    swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 93)
                                      swift::TypeBase::getCanonicalType() (line 1845)
                                      – Crash case at this location: stacks/0951-swift-typebase-getcanonicaltype.txt
                                  swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const (line 994)
                                    swift::TypeChecker::substType(swift::Module*, swift::Type, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool) (line 36)
                                      swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const (line 122)
                                        swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                          std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 949)
                                            getMemberForBaseType(swift::Module*, swift::Type, swift::AssociatedTypeDecl*, swift::Identifier, swift::LazyResolver*) (line 409)
                                            – Crash case at this location: stacks/1774-getmemberforbasetype.txt
                          swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 2921)
                            (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 585)
                              (anonymous namespace)::ExprRewriter::coerceCallArguments(swift::Expr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 2391)
                                getCallerDefaultArg(swift::TypeChecker&, swift::DeclContext*, swift::SourceLoc, swift::ConcreteDeclRef&, unsigned int) (line 61)
                                  swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 1603)
                                  – Crash case at this location: stacks/0849-swift-type-transform.txt
                        swift::Expr::walk(swift::ASTWalker&) (line 26)
                          swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*)::ExprWalker::walkToExprPre(swift::Expr*) (line 795)
                            swift::Expr::walk(swift::ASTWalker&) (line 53)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1679)
                                swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 90)
                                  (anonymous namespace)::ExprRewriter::visitApplyExpr(swift::ApplyExpr*) (line 79)
                                    (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 1457)
                                      (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 511)
                                        swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const (line 1204)
                                        – Crash case at this location: stacks/1582-swift-constraints-solution-computesubstitutions.txt
                    swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                      swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                        swift::Expr::walk(swift::ASTWalker&) (line 76)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                              swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                        swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 1506)
                                        – Crash case at this location: stacks/0606-swift-typechecker-conformstoprotocol.txt
                                        swift::ClangImporter::create(swift::ASTContext&, swift::ClangImporterOptions const&, swift::IRGenOptions const&, swift::DependencyTracker*) (line 6133)
                                        – Crash case at this location: stacks/0339-swift-clangimporter-implementation-mapselectortodeclname.txt
                                        swift::Module::lookupConformance(swift::Type, swift::ProtocolDecl*, swift::LazyResolver*) (line 3076)
                                        – Crash case at this location: stacks/1953-swift-module-lookupconformance.txt
                                        swift::GenericFunctionType::get(swift::GenericSignature*, swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 438)
                                        – Crash case at this location: stacks/1935-swift-genericfunctiontype-get.txt
                                        swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        – Crash case at this location: stacks/0829-swift-constraints-constraintsystem-addconstraint.txt
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                    swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                      existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                          swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                            swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                  swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                    std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                        getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                        – Crash case at this location: stacks/0967-getselftypeforcontainer.txt
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 7574)
                              swift::constraints::ConstraintSystem::openType(swift::Type, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&, swift::DeclContext*, bool, swift::constraints::DependentTypeOpener*) (line 202)
                                swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 2708)
                                  swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                    (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 2165)
                                      swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 335)
                                      – Crash case at this location: stacks/0611-swift-constraints-constraintsystem-opengeneric.txt
                                swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                  (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 2165)
                                    swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 335)
                                      swift::ModuleFile::maybeReadPattern() (line 772)
                                      – Crash case at this location: stacks/1622-swift-modulefile-maybereadpattern.txt
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 5482)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                        resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                        – Crash case at this location: stacks/1947-resolvetypedecl.txt
                        swift::Expr::walk(swift::ASTWalker&) (line 53)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3572)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2687)
                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3572)
                                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                                    (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                      swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                        swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                                  swift::TypeBase::getCanonicalType() (line 1122)
                                                  – Crash case at this location: stacks/1515-swift-typebase-getcanonicaltype.txt
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6498)
                                (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                    swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                              – Crash case at this location: stacks/1674-swift-constraints-constraintsystem-simplifyconstraint.txt
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2687)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1584)
                              (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 6747)
                                – Crash case at this location: stacks/1335-swift-astvisitor.txt
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6474)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1361)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1385)
                                (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                    swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                              llvm::OnDiskChainedHashTable<swift::ModuleFile::DeclTableInfo>::find(swift::Identifier const&, swift::ModuleFile::DeclTableInfo*) (line 47)
                                              – Crash case at this location: stacks/0828-llvm-ondiskchainedhashtable-swift-modulefile-decltableinfo-find.txt
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                              (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                  swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                        swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                          existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                    swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                        swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                          swift::TypeBase::getCanonicalType() (line 775)
                                                                            swift::TypeBase::getCanonicalType() (line 1403)
                                                                              swift::ClangModuleUnit::getAdapterModule() const (line 71)
                                                                              – Crash case at this location: stacks/1350-swift-clangmoduleunit-getadaptermodule.txt
                validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                    validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                            swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                              existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                            – Crash case at this location: stacks/1523-resolvetypedecl.txt
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                – Crash case at this location: stacks/0445-getselftypeforcontainer.txt
                                                                  swift::ASTContext::setConformsTo(swift::CanType, swift::ProtocolDecl*, llvm::PointerIntPair<swift::ProtocolConformance*, 1u, bool, llvm::PointerLikeTypeTraits<swift::ProtocolConformance*> >) (line 77)
                                                                  – Crash case at this location: stacks/1794-swift-astcontext-setconformsto.txt
                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                            swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                              swift::TypeBase::getCanonicalType() (line 775)
                                                                swift::TypeBase::getCanonicalType() (line 1403)
                                                                – Crash case at this location: stacks/0815-swift-typebase-getcanonicaltype.txt
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                              – Crash case at this location: stacks/0504-resolvetypedecl.txt
          swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 353)
            swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 878)
              swift::TypeChecker::typeCheckCondition(llvm::PointerUnion<swift::PatternBindingDecl*, swift::Expr*>&, swift::DeclContext*) (line 77)
                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                  swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                    swift::Expr::walk(swift::ASTWalker&) (line 76)
                      (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                        swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                          swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                  existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                    – Crash case at this location: stacks/1457-getselftypeforcontainer.txt
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                  – Crash case at this location: stacks/0848-resolvetypedecl.txt
            swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 1601)
              swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 473)
                swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 123)
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                      swift::ModuleFile::getDecl(swift::Fixnum<31u, unsigned int>, swift::Optional<swift::DeclContext*>) (line 9392)
                                                      – Crash case at this location: stacks/1369-swift-modulefile-getdecl.txt
            swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 912)
              swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 554)
                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1000)
                  swift::constraints::ConstraintSystem::salvage(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::Expr*, bool) (line 1700)
                    swift::constraints::ConstraintSystem::diagnoseFailureFromConstraints(swift::Expr*) (line 1176)
                      swift::constraints::ConstraintGraphNode::getAdjacency(swift::TypeVariableType*) (line 290)
                      – Crash case at this location: stacks/1830-swift-constraints-constraintgraphnode-getadjacency.txt
              swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 473)
                swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 123)
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5734)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                            – Crash case at this location: stacks/1878-resolvetypedecl.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                    validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                        validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 48)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                    – Crash case at this location: stacks/0863-getselftypeforcontainer.txt
                                                                      swift::constraints::ConstraintLocator::Profile(llvm::FoldingSetNodeID&, swift::Expr*, llvm::ArrayRef<swift::constraints::ConstraintLocator::PathElement>) (line 107)
                                                                      – Crash case at this location: stacks/1503-swift-constraints-constraintlocator-profile.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2695)
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                      validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                        swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                            swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                              swift::Expr::walk(swift::ASTWalker&) (line 76)
                                swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 4209)
                                  (anonymous namespace)::ExprRewriter::applyMemberRefExpr(swift::Expr*, swift::Expr*, swift::SourceLoc, swift::SourceLoc, bool) (line 1100)
                                    (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 3459)
                                      (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 1457)
                                        std::__1::__function::__func<swift::constraints::ConstraintSystem::simplifyType(swift::Type, llvm::SmallPtrSet<swift::TypeVariableType*, 16u>&)::$_5, std::__1::allocator<swift::constraints::ConstraintSystem::simplifyType(swift::Type, llvm::SmallPtrSet<swift::TypeVariableType*, 16u>&)::$_5>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 608)
                                        – Crash case at this location: stacks/0857-std-function-func-swift-constraints-constraintsystem-simplifytype.txt
                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                            swift::Expr::walk(swift::ASTWalker&) (line 26)
                              (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                  swift::TypeBase::getCanonicalType() (line 775)
                                                                    swift::TypeBase::getCanonicalType() (line 1403)
                                                                      swift::ModuleFile::getType(swift::Fixnum<31u, unsigned int>) (line 8359)
                                                                      – Crash case at this location: stacks/1502-swift-modulefile-gettype.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2164)
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                      swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                        std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 139)
                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 2394)
                            swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                            – Crash case at this location: stacks/0735-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                      – Crash case at this location: stacks/0374-getselftypeforcontainer.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 53)
                        swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                        – Crash case at this location: stacks/0391-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                          swift::Lexer::lexIdentifier() (line 183)
                          – Crash case at this location: stacks/0378-swift-lexer-lexidentifier.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                      validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                        swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                            swift::Expr::walk(swift::ASTWalker&) (line 26)
                              (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                  – Crash case at this location: stacks/0528-swift-declcontext-lookupqualified.txt
                      validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                          validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                      – Crash case at this location: stacks/0976-swift-declcontext-lookupqualified.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 1857)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                          – Crash case at this location: stacks/1058-swift-declcontext-lookupqualified.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2287)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1605)
                        swift::NominalTypeDecl::computeType() (line 29)
                          swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                          – Crash case at this location: stacks/0418-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5734)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                  void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                  – Crash case at this location: stacks/1070-void.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6649)
                    swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                    – Crash case at this location: stacks/0469-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 642)
                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                – Crash case at this location: stacks/1320-resolvetypedecl.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                  swift::TypeBase::getCanonicalType() (line 775)
                                                    swift::TypeBase::getCanonicalType() (line 1403)
                                                    – Crash case at this location: stacks/0441-swift-typebase-getcanonicaltype.txt
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                      swift::TypeBase::getTypeVariables(llvm::SmallVectorImpl<swift::TypeVariableType*>&) (line 113)
                                                      – Crash case at this location: stacks/1934-swift-typebase-gettypevariables.txt
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 13395)
                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                        llvm::BitstreamCursor::readAbbreviatedField(llvm::BitCodeAbbrevOp const&, llvm::SmallVectorImpl<unsigned long long>&) (line 252)
                                                        – Crash case at this location: stacks/0512-getselftypeforcontainer.txt
                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                            swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                              swift::TypeBase::getCanonicalType() (line 775)
                                                                                swift::TypeBase::getCanonicalType() (line 1403)
                                                                                – Crash case at this location: stacks/1464-llvm-bitstreamcursor-readabbreviatedfield.txt
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                      swift::ASTContext::setConformsTo(swift::CanType, swift::ProtocolDecl*, llvm::PointerIntPair<swift::ProtocolConformance*, 1u, bool, llvm::PointerLikeTypeTraits<swift::ProtocolConformance*> >) (line 102)
                                                      – Crash case at this location: stacks/1686-swift-astcontext-setconformsto.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2526)
                    void checkCircularity<swift::ClassDecl>(swift::TypeChecker&, swift::ClassDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::ClassDecl*>&) (line 132)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                  – Crash case at this location: stacks/0711-swift-declcontext-lookupqualified.txt
                    void checkCircularity<swift::ClassDecl>(swift::TypeChecker&, swift::ClassDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::ClassDecl*>&) (line 361)
                      void checkCircularity<swift::ClassDecl>(swift::TypeChecker&, swift::ClassDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::ClassDecl*>&) (line 361)
                      – Crash case at this location: stacks/0876-x.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                        resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                        – Crash case at this location: stacks/1734-resolvetypedecl.txt
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                  – Crash case at this location: stacks/1448-resolvetypedecl.txt
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                    swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                      swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                      – Crash case at this location: stacks/0809-swift-type-walk.txt
                                                        swift::TypeBase::getDesugaredType() (line 277)
                                                        – Crash case at this location: stacks/1518-swift-typebase-getdesugaredtype.txt
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 9408)
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                        swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                          swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                            std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 785)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                – Crash case at this location: stacks/1388-getselftypeforcontainer.txt
            swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 1403)
              swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1000)
                swift::constraints::ConstraintSystem::salvage(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::Expr*, bool) (line 817)
                  swift::constraints::ConstraintSystem::diagnoseFailureFromConstraints(swift::Expr*) (line 924)
                    getBoundTypesFromConstraint(swift::constraints::ConstraintSystem*, swift::Expr*, swift::constraints::Constraint*) (line 112)
                      swift::TypeBase::isEqual(swift::Type) (line 26)
                      – Crash case at this location: stacks/0465-swift-typebase-isequal.txt
              swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                  swift::Expr::walk(swift::ASTWalker&) (line 76)
                    (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                      swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                        swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                  swift::constraints::ConstraintGraph::addConstraint(swift::constraints::Constraint*) (line 176)
                                  – Crash case at this location: stacks/1318-swift-constraints-constraintgraph-addconstraint.txt
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                              swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                                    – Crash case at this location: stacks/1807-resolvetypedecl.txt
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                          swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                            swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                              std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                          resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 80)
                                                            – Crash case at this location: stacks/1766-swift-typechecker-validatedecl.txt
            swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 1681)
              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                          resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                          – Crash case at this location: stacks/0651-resolvetypedecl.txt
              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                          swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                            existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                              – Crash case at this location: stacks/0587-swift-pattern-foreachvariable.txt
                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                    validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                            swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                              existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                            swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                              swift::TypeBase::getCanonicalType() (line 775)
                                                                swift::TypeBase::getCanonicalType() (line 1403)
                                                                – Crash case at this location: stacks/1797-swift-typebase-getcanonicaltype.txt
            swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 2564)
              swift::TypeChecker::typeCheckForEachBinding(swift::DeclContext*, swift::ForEachStmt*) (line 78)
                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                  swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                    swift::Expr::walk(swift::ASTWalker&) (line 76)
                      (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                        swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                          swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                  – Crash case at this location: stacks/0915-resolvetypedecl.txt
          swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 554)
            swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1000)
              swift::constraints::ConstraintSystem::salvage(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::Expr*, bool) (line 300)
                swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                  swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                    swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 4065)
                      swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                        swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                          swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                            swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                              swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 182)
                                  swift::constraints::ConstraintSystem::simplifyFixConstraint(swift::constraints::Fix, swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 993)
                                    swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 113)
                                      swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 125)
                                      – Crash case at this location: stacks/0395-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 4065)
                  swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                    swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 4065)
                      swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                        swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                          swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                            swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                              swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                  swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 182)
                                      swift::constraints::ConstraintSystem::simplifyFixConstraint(swift::constraints::Fix, swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 993)
                                        swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 113)
                                          swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 125)
                                          – Crash case at this location: stacks/0564-swift-constraints-constraintsystem-getfixedtyperecursive.txt
              swift::constraints::ConstraintSystem::salvage(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::Expr*, bool) (line 817)
                swift::constraints::ConstraintSystem::diagnoseFailureFromConstraints(swift::Expr*) (line 924)
                  getBoundTypesFromConstraint(swift::constraints::ConstraintSystem*, swift::Expr*, swift::constraints::Constraint*) (line 112)
                    swift::TypeBase::isEqual(swift::Type) (line 26)
                      swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 251)
                      – Crash case at this location: stacks/0776-no-stacktrace.txt
                      llvm::FoldingSetNodeID::operator==(llvm::FoldingSetNodeID const&) const (line 40)
                      – Crash case at this location: stacks/0531-llvm-foldingsetnodeid-operator.txt
                      swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 173)
                      – Crash case at this location: stacks/0871-swift-constraints-constraintsystem-matchtypes.txt
            swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
              swift::Expr::walk(swift::ASTWalker&) (line 76)
                (anonymous namespace)::PreCheckExpression::walkToExprPost(swift::Expr*) (line 138)
                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                          resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                          – Crash case at this location: stacks/0790-resolvetypedecl.txt
              swift::Expr::walk(swift::ASTWalker&) (line 53)
                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3753)
                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1679)
                    (anonymous namespace)::PreCheckExpression::walkToExprPost(swift::Expr*) (line 138)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                            swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                              existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                  – Crash case at this location: stacks/1570-llvm-foldingsetnodeid-operator.txt
                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3639)
                  (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                      swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                        void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 53)
                                swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                                – Crash case at this location: stacks/1793-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                    (anonymous namespace)::PreCheckExpression::walkToExprPost(swift::Expr*) (line 138)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                            swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                              existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                            swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                              swift::TypeBase::getCanonicalType() (line 775)
                                                                swift::TypeBase::getCanonicalType() (line 1403)
                                                                – Crash case at this location: stacks/1618-swift-typebase-getcanonicaltype.txt
            swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
            – Crash case at this location: stacks/1083-swift-typechecker-typecheckexpression.txt
              swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                swift::Expr::walk(swift::ASTWalker&) (line 53)
                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                    swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 4209)
                      (anonymous namespace)::ExprRewriter::applyMemberRefExpr(swift::Expr*, swift::Expr*, swift::SourceLoc, swift::SourceLoc, bool) (line 1100)
                        (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 511)
                          swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const (line 1204)
                          – Crash case at this location: stacks/0537-swift-constraints-solution-computesubstitutions.txt
                    swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 90)
                      (anonymous namespace)::ExprRewriter::visitApplyExpr(swift::ApplyExpr*) (line 79)
                        (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 1457)
                          (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 511)
                            swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const (line 994)
                              swift::TypeChecker::substType(swift::Module*, swift::Type, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool) (line 36)
                                swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const (line 122)
                                  swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                    std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 949)
                                      getMemberForBaseType(swift::Module*, swift::Type, swift::AssociatedTypeDecl*, swift::Identifier, swift::LazyResolver*) (line 409)
                                      – Crash case at this location: stacks/0748-getmemberforbasetype.txt
                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1679)
                    swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 90)
                      (anonymous namespace)::ExprRewriter::visitApplyExpr(swift::ApplyExpr*) (line 79)
                        (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 1457)
                          (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 511)
                            swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const (line 684)
                              swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 93)
                                swift::TypeBase::getCanonicalType() (line 1845)
                                – Crash case at this location: stacks/0826-swift-typebase-getcanonicaltype.txt
                swift::Expr::walk(swift::ASTWalker&) (line 76)
                  swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 90)
                    (anonymous namespace)::ExprRewriter::visitApplyExpr(swift::ApplyExpr*) (line 79)
                      (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 585)
                        (anonymous namespace)::ExprRewriter::coerceCallArguments(swift::Expr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 2391)
                          getCallerDefaultArg(swift::TypeChecker&, swift::DeclContext*, swift::SourceLoc, swift::ConcreteDeclRef&, unsigned int) (line 61)
                          – Crash case at this location: stacks/0023-getcallerdefaultarg.txt
                            swift::Parser::parseExprPostfix(swift::Diag<>, bool) (line 7692)
                            – Crash case at this location: stacks/0261-swift-parser-parseexprpostfix.txt
                            swift::TypeBase::isSpecialized() (line 122)
                            – Crash case at this location: stacks/0283-swift-typebase-isspecialized.txt
                      (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 1457)
                        (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 511)
                          swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const (line 994)
                            swift::TypeChecker::substType(swift::Module*, swift::Type, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool) (line 36)
                              swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const (line 122)
                                swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                  std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 949)
                                    getMemberForBaseType(swift::Module*, swift::Type, swift::AssociatedTypeDecl*, swift::Identifier, swift::LazyResolver*) (line 409)
                                      swift::constraints::ConstraintSystem::assignFixedType(swift::TypeVariableType*, swift::Type, bool) (line 784)
                                      – Crash case at this location: stacks/1951-swift-constraints-constraintsystem-assignfixedtype.txt
                          swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const (line 1204)
                          – Crash case at this location: stacks/0517-swift-constraints-solution-computesubstitutions.txt
                swift::Expr::walk(swift::ASTWalker&) (line 26)
                  swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*)::ExprWalker::walkToExprPre(swift::Expr*) (line 1112)
                    swift::TypeChecker::typeCheckClosureBody(swift::ClosureExpr*) (line 143)
                      swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 473)
                        swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 123)
                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                    swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                        swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                          swift::TypeBase::getCanonicalType() (line 775)
                                                            swift::TypeBase::getCanonicalType() (line 1403)
                                                            – Crash case at this location: stacks/1749-swift-typebase-getcanonicaltype.txt
                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2164)
                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2287)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1605)
                                swift::NominalTypeDecl::computeType() (line 29)
                                  swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                                    swift::DiagnosticEngine::flushActiveDiagnostic() (line 4810)
                                    – Crash case at this location: stacks/0969-swift-diagnosticengine-flushactivediagnostic.txt
                  swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*)::ExprWalker::walkToExprPre(swift::Expr*) (line 795)
                    swift::Expr::walk(swift::ASTWalker&) (line 76)
                      swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 90)
                        (anonymous namespace)::ExprRewriter::visitApplyExpr(swift::ApplyExpr*) (line 79)
                          (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 1457)
                            (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 511)
                              swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const (line 1204)
                              – Crash case at this location: stacks/0927-swift-constraints-solution-computesubstitutions.txt
                      swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 2921)
                        (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 585)
                          (anonymous namespace)::ExprRewriter::coerceCallArguments(swift::Expr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 2391)
                            getCallerDefaultArg(swift::TypeChecker&, swift::DeclContext*, swift::SourceLoc, swift::ConcreteDeclRef&, unsigned int) (line 61)
                            – Crash case at this location: stacks/1577-getcallerdefaultarg.txt
              swift::ClangImporter::Implementation::finishLoadingClangModule(swift::ClangImporter&, clang::Module const*, bool) (line 876)
              – Crash case at this location: stacks/1810-swift-clangimporter-implementation-finishloadingclangmodule.txt
            swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
              swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                swift::Expr::walk(swift::ASTWalker&) (line 76)
                  (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                    swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                      swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                              swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                          swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                            swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                              std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                              swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                swift::TypeBase::getCanonicalType() (line 775)
                                                                  swift::TypeBase::getCanonicalType() (line 1403)
                                                                  – Crash case at this location: stacks/1066-swift-typebase-getcanonicaltype.txt
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                  – Crash case at this location: stacks/0884-getselftypeforcontainer.txt
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                  swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 133)
                                  – Crash case at this location: stacks/1564-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                              – Crash case at this location: stacks/0275-swift-parser-parseexprpostfix.txt
                                swift::Parser::parseTypeSimple(swift::Diag<>) (line 1062)
                                – Crash case at this location: stacks/1690-swift-parser-parsetypesimple.txt
                                swift::NominalTypeDecl::prepareLookupTable() (line 436)
                                – Crash case at this location: stacks/1681-swift-nominaltypedecl-preparelookuptable.txt
                                swift::ModuleFile::lookupValue(swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&) (line 1472)
                                – Crash case at this location: stacks/1071-swift-modulefile-lookupvalue.txt
                                swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 173)
                                – Crash case at this location: stacks/1688-swift-constraints-constraintsystem-matchtypes.txt
                                swift::operator<<(llvm::raw_ostream&, swift::StaticSpellingKind) (line 181)
                                – Crash case at this location: stacks/1913-swift-importdecl-findbestimportkind.txt
                                swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 1506)
                                – Crash case at this location: stacks/1056-swift-typechecker-conformstoprotocol.txt
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                            swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                              existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                                    applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                                      swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 750)
                                                        swift::TypeChecker::checkSubstitutions(llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, llvm::DenseMap<swift::SubstitutableType*, llvm::SmallVector<swift::ProtocolConformance*, 2u>, llvm::DenseMapInfo<swift::SubstitutableType*> >&, swift::DeclContext*, swift::SourceLoc, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >*) (line 300)
                                                        – Crash case at this location: stacks/1319-swift-typechecker-checksubstitutions.txt
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 80)
                                              – Crash case at this location: stacks/1895-swift-typechecker-validatedecl.txt
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                  swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 133)
                                                                  – Crash case at this location: stacks/1034-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                                                                  swift::ArraySliceType::get(swift::Type) (line 292)
                                                                  – Crash case at this location: stacks/1742-swift-arrayslicetype-get.txt
                    swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 5482)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                              – Crash case at this location: stacks/1531-resolvetypedecl.txt
                    swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 7574)
                      swift::constraints::ConstraintSystem::openType(swift::Type, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&, swift::DeclContext*, bool, swift::constraints::DependentTypeOpener*) (line 202)
                        swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 2708)
                          swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                            (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 2165)
                              swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 335)
                                void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                – Crash case at this location: stacks/1772-void.txt
                        swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                          (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 2165)
                            swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 335)
                            – Crash case at this location: stacks/0632-swift-constraints-constraintsystem-opengeneric.txt
                swift::Expr::walk(swift::ASTWalker&) (line 53)
                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3572)
                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2687)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3572)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                              (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                  swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                          resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                            swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 688)
                                            – Crash case at this location: stacks/1108-swift-constraints-constraintsystem-solve.txt
                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6696)
                        swift::ASTVisitor<(anonymous namespace)::Traversal, swift::Expr*, swift::Stmt*, void, swift::Pattern*, bool, void>::visit(swift::Pattern*) (line 881)
                          swift::ASTVisitor<(anonymous namespace)::Traversal, swift::Expr*, swift::Stmt*, void, swift::Pattern*, bool, void>::visit(swift::Pattern*) (line 1390)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                              (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                  swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                          resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                            bool swift::Parser::parseToken<>(swift::tok, swift::SourceLoc&, swift::Diag<>) (line 134)
                                            – Crash case at this location: stacks/1759-bool.txt
                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1385)
                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 7574)
                            swift::constraints::ConstraintSystem::openType(swift::Type, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&, swift::DeclContext*, bool, swift::constraints::DependentTypeOpener*) (line 202)
                              swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 2165)
                                  swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 335)
                                    swift::constraints::ConstraintGraph::addConstraint(swift::constraints::Constraint*) (line 142)
                                    – Crash case at this location: stacks/1926-swift-constraints-constraintgraph-addconstraint.txt
                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1679)
                    (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                      swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 5482)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                              swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                          swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                            swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                              std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                  – Crash case at this location: stacks/1834-getselftypeforcontainer.txt
                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2687)
                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                      (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                        swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                          swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                    swift::Optional<swift::Diagnostic>::operator=(swift::Optional<swift::Diagnostic>&&) (line 245)
                                    – Crash case at this location: stacks/1723-swift-optional-swift-diagnostic-operator.txt
                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                    (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                      swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                        swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                  swift::Lexer::getLocForEndOfToken(swift::SourceManager const&, swift::SourceLoc) (line 535)
                                  – Crash case at this location: stacks/1812-swift-lexer-getlocforendoftoken.txt
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 766)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                  existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                    – Crash case at this location: stacks/0614-getselftypeforcontainer.txt
                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6498)
                      (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                        swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                          swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 766)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                      swift::StreamPrinter::printText(llvm::StringRef) (line 51)
                                      – Crash case at this location: stacks/1353-swift-streamprinter-printtext.txt
                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2466)
                    swift::ASTVisitor<(anonymous namespace)::Traversal, swift::Expr*, swift::Stmt*, void, swift::Pattern*, bool, void>::visit(swift::Pattern*) (line 444)
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1584)
                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 6747)
                          – Crash case at this location: stacks/0770-swift-astvisitor.txt
                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6474)
                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                            swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                      llvm::OnDiskChainedHashTable<swift::ModuleFile::DeclTableInfo>::find(swift::Identifier const&, swift::ModuleFile::DeclTableInfo*) (line 47)
                                      – Crash case at this location: stacks/0804-llvm-ondiskchainedhashtable-swift-modulefile-decltableinfo-find.txt
                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3478)
                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1361)
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1361)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 222)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                              (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                  swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                          resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                            swift::ModuleFile::getDecl(swift::Fixnum<31u, unsigned int>, swift::Optional<swift::DeclContext*>) (line 7248)
                                            – Crash case at this location: stacks/1094-swift-modulefile-getdecl.txt
                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1935)
                    (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3478)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                              swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                        swift::ClangModuleUnit::getImportedModules(llvm::SmallVectorImpl<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >&, swift::Module::ImportFilter) const (line 1538)
                                        – Crash case at this location: stacks/0599-swift-clangmoduleunit-getimportedmodules.txt
      swift::performTypeChecking(swift::SourceFile&, swift::TopLevelContext&, unsigned int) (line 1384)
        swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 123)
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19092)
              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 2539)
                  (anonymous namespace)::TypeResolver::resolveASTFunctionType(swift::FunctionTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::AnyFunctionType::ExtInfo) (line 146)
                    swift::FunctionType::get(swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 158)
                    – Crash case at this location: stacks/0882-a.txt
                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 3294)
                  swift::TupleType::get(llvm::ArrayRef<swift::TupleTypeElt>, swift::ASTContext const&) (line 462)
                  – Crash case at this location: stacks/1404-swift-tupletype-get.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1605)
                                                                      swift::NominalTypeDecl::computeType() (line 29)
                                                                        swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                                        – Crash case at this location: stacks/1615-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                – Crash case at this location: stacks/0156-swift-protocoltype-canonicalizeprotocols.txt
                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                      validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                      swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                        swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                          vtable for llvm::PrettyStackTraceEntry (line 16)
                                                                          – Crash case at this location: stacks/1888-vtable.txt
                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                          swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                            swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                              std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                          resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                                            applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                                              swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 238)
                                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                                      swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                        swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                        – Crash case at this location: stacks/1578-swift-type-walk.txt
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                              swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                              – Crash case at this location: stacks/0480-szone-free-definite-size.txt
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                              swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 3885)
                                                – Crash case at this location: stacks/1779-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                                                llvm::FoldingSet<swift::BoundGenericType>::NodeEquals(llvm::FoldingSetImpl::Node*, llvm::FoldingSetNodeID const&, unsigned int, llvm::FoldingSetNodeID&) const (line 91)
                                                – Crash case at this location: stacks/1666-llvm-foldingset-swift-boundgenerictype-nodeequals.txt
                                                swift::Parser::parseBraceItemList(swift::Diag<>) (line 292)
                                                – Crash case at this location: stacks/1732-swift-parser-parsebraceitemlist.txt
                                                swift::ASTContext::getProtocol(swift::KnownProtocolKind) const (line 110)
                                                – Crash case at this location: stacks/0675-swift-astcontext-getprotocol.txt
                                                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1945)
                                                – Crash case at this location: stacks/1394-swift-typechecker-typecheckexpression.txt
                                                swift::TypeBase::isEqual(swift::Type) (line 26)
                                                – Crash case at this location: stacks/0662-swift-typebase-isequal.txt
                                                swift::ModuleFile::readMembers() (line 357)
                                                – Crash case at this location: stacks/0948-swift-modulefile-readmembers.txt
                                                swift::ClangModuleUnit::getImportedModules(llvm::SmallVectorImpl<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >&, swift::Module::ImportFilter) const (line 1576)
                                                – Crash case at this location: stacks/0679-swift-clangmoduleunit-getimportedmodules.txt
                                                llvm::FoldingSet<swift::StructType>::NodeEquals(llvm::FoldingSetImpl::Node*, llvm::FoldingSetNodeID const&, unsigned int, llvm::FoldingSetNodeID&) const (line 46)
                                                – Crash case at this location: stacks/0978-llvm-foldingset-swift-structtype-nodeequals.txt
                                                swift::SubstitutedType::get(swift::Type, swift::Type, swift::ASTContext const&) (line 102)
                                                – Crash case at this location: stacks/1386-swift-substitutedtype-get.txt
                                                swift::Lexer::lexImpl() (line 681)
                                                – Crash case at this location: stacks/1488-swift-lexer-leximpl.txt
                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                      swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                        swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                        – Crash case at this location: stacks/1551-swift-type-walk.txt
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 832)
                                    checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                                              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                                                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                    validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                              swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                swift::NominalTypeDecl::computeType() (line 185)
                                                                                – Crash case at this location: stacks/1004-swift-nominaltypedecl-computetype.txt
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 441)
                                    (anonymous namespace)::DeclChecker::visitAssociatedTypeDecl(swift::AssociatedTypeDecl*) (line 102)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                              swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                              – Crash case at this location: stacks/0621-swift-type-walk.txt
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                  swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                    swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                    – Crash case at this location: stacks/0889-swift-type-walk.txt
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                                      swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 852)
                                                                        swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                                        – Crash case at this location: stacks/1892-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                  swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 238)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                            – Crash case at this location: stacks/1418-resolvetypedecl.txt
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                          swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                            swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                            – Crash case at this location: stacks/0910-no-stacktrace.txt
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                              swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                  swift::constraints::Solution::Solution(swift::constraints::Solution&&) (line 319)
                                                  – Crash case at this location: stacks/1049-swift-constraints-solution-solution.txt
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2552)
                              swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 194)
                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                              swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 173)
                                                – Crash case at this location: stacks/1484-swift-constraints-constraintsystem-matchtypes.txt
                              swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 526)
                                swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 1297)
                                  swift::Module::lookupConformance(swift::Type, swift::ProtocolDecl*, swift::LazyResolver*) (line 2305)
                                    swift::TypeChecker::resolveConformance(swift::NominalTypeDecl*, swift::ProtocolDecl*, swift::ExtensionDecl*) (line 110)
                                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3691)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                  swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                    swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                    – Crash case at this location: stacks/1702-swift-type-walk.txt
                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 569)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1582)
                                  finalizeGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::DeclContext*, swift::TypeChecker&) (line 522)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                              – Crash case at this location: stacks/0571-swift-declcontext-lookupqualified.txt
                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 635)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                            – Crash case at this location: stacks/0775-resolvetypedecl.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
              swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                  std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 785)
                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 1801)
                      – Crash case at this location: stacks/0705-swift-typechecker-validategenericfuncsignature.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                        swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                          existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                    swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                        swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                          swift::TypeBase::getCanonicalType() (line 775)
                                                                            swift::TypeBase::getCanonicalType() (line 1403)
                                                                            – Crash case at this location: stacks/1817-swift-typebase-getcanonicaltype.txt
                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                          swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                            swift::TypeBase::getCanonicalType() (line 775)
                                                              swift::TypeBase::getCanonicalType() (line 1403)
                                                              – Crash case at this location: stacks/1510-swift-typebase-getcanonicaltype.txt
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 200)
                                                                – Crash case at this location: stacks/1557-swift-metatypetype-get.txt
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19092)
                                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                                                    swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                                                      existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 13395)
                                                                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                              llvm::BitstreamCursor::readRecord(unsigned int, llvm::SmallVectorImpl<unsigned long long>&, llvm::StringRef*) (line 510)
                                                                              – Crash case at this location: stacks/0768-llvm-bitstreamcursor-readrecord.txt
                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19092)
                                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                                                    swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                                                      existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                            – Crash case at this location: stacks/1689-getselftypeforcontainer.txt
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19092)
                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                                swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                  swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                    swift::GenericTypeParamDecl::GenericTypeParamDecl(swift::DeclContext*, swift::Identifier, swift::SourceLoc, unsigned int, unsigned int) (line 301)
                                                                                    – Crash case at this location: stacks/1050-swift-generictypeparamdecl-generictypeparamdecl.txt
                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                  swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                    swift::ClangImporter::Implementation::finishLoadingClangModule(swift::ClangImporter&, clang::Module const*, bool) (line 876)
                                                                    – Crash case at this location: stacks/1405-swift-clangimporter-implementation-finishloadingclangmodule.txt
                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                          resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                            swift::DeclName::printPretty(llvm::raw_ostream&) const (line 139)
                            – Crash case at this location: stacks/1932-swift-declname-printpretty.txt
                            swift::TypeBase::getCanonicalType() (line 1845)
                            – Crash case at this location: stacks/1824-swift-typebase-getcanonicaltype.txt
                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 766)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                          swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                            existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                          swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                            swift::TypeBase::getCanonicalType() (line 775)
                                                              swift::TypeBase::getCanonicalType() (line 1403)
                                                              – Crash case at this location: stacks/0950-swift-typebase-getcanonicaltype.txt
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                    validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 1036)
                                                  swift::TypeBase::getTypeOfMember(swift::Module*, swift::ValueDecl const*, swift::LazyResolver*, swift::Type) (line 393)
                                                    swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                                      std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 949)
                                                      – Crash case at this location: stacks/0647-std-function-func-swift-type-subst.txt
                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                      validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 766)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 821)
                                                    swift::TypeBase::getTypeOfMember(swift::Module*, swift::ValueDecl const*, swift::LazyResolver*, swift::Type) (line 205)
                                                    – Crash case at this location: stacks/1845-swift-typebase-gettypeofmember.txt
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                                                                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                                                                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                                        validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                                                                swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                                                                  existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                        getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                        – Crash case at this location: stacks/0634-getselftypeforcontainer.txt
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                    – Crash case at this location: stacks/0822-getselftypeforcontainer.txt
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                              swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 441)
                                    (anonymous namespace)::DeclChecker::visitAssociatedTypeDecl(swift::AssociatedTypeDecl*) (line 102)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 1036)
                                                  swift::TypeBase::getTypeOfMember(swift::Module*, swift::ValueDecl const*, swift::LazyResolver*, swift::Type) (line 393)
                                                    swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                                      std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 949)
                                                      – Crash case at this location: stacks/0973-std-function-func-swift-type-subst.txt
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                                        validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                                          swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                            swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                                              swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                                                swift::Expr::walk(swift::ASTWalker&) (line 76)
                                                                  (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                                                    swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                                                          swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                                            swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                                                  swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                                                    swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                                                                      swift::TypeBase::getCanonicalType() (line 1200)
                                                                                      – Crash case at this location: stacks/1042-swift-typebase-getcanonicaltype.txt
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 846)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                    swift::ProtocolType::canonicalizeProtocols(llvm::SmallVectorImpl<swift::ProtocolDecl*>&) (line 1326)
                                    – Crash case at this location: stacks/1605-swift-protocoltype-canonicalizeprotocols.txt
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                          resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                          – Crash case at this location: stacks/0834-t.txt
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                      validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                  existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                    – Crash case at this location: stacks/1113-getselftypeforcontainer.txt
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                  swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                    void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                  swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                    swift::TypeBase::getCanonicalType() (line 775)
                                                                      swift::TypeBase::getCanonicalType() (line 1403)
                                                                      – Crash case at this location: stacks/1483-swift-typebase-getcanonicaltype.txt
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                  swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                    swift::TypeBase::getCanonicalType() (line 775)
                                                                      swift::TypeBase::getCanonicalType() (line 1403)
                                                                      – Crash case at this location: stacks/0615-swift-typebase-getcanonicaltype.txt
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                    – Crash case at this location: stacks/0670-getselftypeforcontainer.txt
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                  swift::TypeBase::getCanonicalType() (line 775)
                                                                    swift::TypeBase::getCanonicalType() (line 1403)
                                                                    – Crash case at this location: stacks/1919-swift-typebase-getcanonicaltype.txt
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                              swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                                swift::TypeBase::operator new(unsigned long, swift::ASTContext const&, swift::AllocationArena, unsigned int) (line 92)
                                                                                                – Crash case at this location: stacks/1607-swift-type-walk.txt
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                                                                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                                                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                                    validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                              swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                              – Crash case at this location: stacks/0590-swift-type-walk.txt
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 927)
                                          swift::TupleType::get(llvm::ArrayRef<swift::TupleTypeElt>, swift::ASTContext const&) (line 317)
                                          – Crash case at this location: stacks/0995-swift-tupletype-get.txt
                                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                            validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 832)
                                                            checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                                                                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                                                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                                      validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                                                              swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                                                                existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                                          swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                                            swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                                                              std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                                                    swift::ProtocolType::canonicalizeProtocols(llvm::SmallVectorImpl<swift::ProtocolDecl*>&) (line 1326)
                                                                                                                    – Crash case at this location: stacks/1870-swift-protocoltype-canonicalizeprotocols.txt
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 22856)
                                                              swift::FunctionType::get(swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 158)
                                                              – Crash case at this location: stacks/1495-swift-functiontype-get.txt
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                – Crash case at this location: stacks/0510-resolvetypedecl.txt
                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                  swift::ClangImporter::loadExtensions(swift::NominalTypeDecl*, unsigned int) (line 84)
                                  – Crash case at this location: stacks/1486-swift-clangimporter-loadextensions.txt
                                  swift::Lexer::getLocForEndOfToken(swift::SourceManager const&, swift::SourceLoc) (line 535)
                                  – Crash case at this location: stacks/0832-swift-lexer-getlocforendoftoken.txt
                                  swift::Optional<swift::Diagnostic>::operator=(swift::Optional<swift::Diagnostic>&&) (line 245)
                                  – Crash case at this location: stacks/1514-swift-optional-swift-diagnostic-operator.txt
                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                        validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                                                                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                                                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                                                                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                                            validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                                                                    swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                                                                      existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                              swift::NominalTypeDecl::getProtocols(bool) const (line 22)
                                                                                              – Crash case at this location: stacks/1069-swift-nominaltypedecl-getprotocols.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 13616)
              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                      validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                    swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 251)
                                    – Crash case at this location: stacks/1624-swift-namelookup-lookupinmodule.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 22856)
              swift::FunctionType::get(swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 158)
              – Crash case at this location: stacks/0883-t.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 544)
              (anonymous namespace)::DeclChecker::visitAssociatedTypeDecl(swift::AssociatedTypeDecl*) (line 102)
                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                        resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                          applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                            swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 238)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                        swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                          void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                    swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                            – Crash case at this location: stacks/1305-getselftypeforcontainer.txt
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                      – Crash case at this location: stacks/0299-resolvetypedecl.txt
                        resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                          swift::InFlightDiagnostic::highlight(swift::SourceRange) (line 66)
                          – Crash case at this location: stacks/1765-swift-inflightdiagnostic-highlight.txt
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                          resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                          – Crash case at this location: stacks/0421-resolvetypedecl.txt
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                    swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 441)
                                                          (anonymous namespace)::DeclChecker::visitAssociatedTypeDecl(swift::AssociatedTypeDecl*) (line 102)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                                                  swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                                                    existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                          getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                          – Crash case at this location: stacks/1651-getselftypeforcontainer.txt
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                              validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                            – Crash case at this location: stacks/1479-resolvetypedecl.txt
                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                        existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 441)
                            (anonymous namespace)::DeclChecker::visitAssociatedTypeDecl(swift::AssociatedTypeDecl*) (line 102)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                        swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 1036)
                                          swift::TypeBase::getTypeOfMember(swift::Module*, swift::ValueDecl const*, swift::LazyResolver*, swift::Type) (line 393)
                                            swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                              std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 949)
                                              – Crash case at this location: stacks/0696-std-function-func-swift-type-subst.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 21588)
              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 927)
                swift::TupleType::get(llvm::ArrayRef<swift::TupleTypeElt>, swift::ASTContext const&) (line 317)
                – Crash case at this location: stacks/0909-a.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 220)
              – Crash case at this location: stacks/0758-swift-typechecker-typecheckpattern.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
              validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                          swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                            existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 441)
                                (anonymous namespace)::DeclChecker::visitAssociatedTypeDecl(swift::AssociatedTypeDecl*) (line 102)
                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                          resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                            swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 1036)
                                              swift::TypeBase::getTypeOfMember(swift::Module*, swift::ValueDecl const*, swift::LazyResolver*, swift::Type) (line 393)
                                                swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                                  std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 949)
                                                  – Crash case at this location: stacks/0944-std-function-func-swift-type-subst.txt
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                              applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 361)
                                  swift::BoundGenericType::get(swift::NominalTypeDecl*, swift::Type, llvm::ArrayRef<swift::Type>) (line 331)
                                  – Crash case at this location: stacks/1684-swift-boundgenerictype-get.txt
                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                            – Crash case at this location: stacks/0572-resolvetypedecl.txt
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                              swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                          swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                            swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                              std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                              swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                swift::TypeBase::getCanonicalType() (line 775)
                                                                  swift::TypeBase::getCanonicalType() (line 1403)
                                                                    swift::ModuleFile::getType(swift::Fixnum<31u, unsigned int>) (line 8359)
                                                                    – Crash case at this location: stacks/1839-swift-modulefile-gettype.txt
                                            swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                              std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                              swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                swift::TypeBase::getCanonicalType() (line 775)
                                                                  swift::TypeBase::getCanonicalType() (line 1403)
                                                                  – Crash case at this location: stacks/0899-swift-typebase-getcanonicaltype.txt
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                                                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                                                              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                                                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                                                              applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                                                                swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 750)
                                                                                  swift::TypeChecker::checkSubstitutions(llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, llvm::DenseMap<swift::SubstitutableType*, llvm::SmallVector<swift::ProtocolConformance*, 2u>, llvm::DenseMapInfo<swift::SubstitutableType*> >&, swift::DeclContext*, swift::SourceLoc, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >*) (line 300)
                                                                                  – Crash case at this location: stacks/1643-swift-typechecker-checksubstitutions.txt
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 22856)
                                    swift::FunctionType::get(swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 158)
                                    – Crash case at this location: stacks/1800-swift-functiontype-get.txt
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                            swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                              swift::TypeBase::getCanonicalType() (line 775)
                                                                swift::TypeBase::getCanonicalType() (line 1403)
                                                                – Crash case at this location: stacks/0588-swift-typebase-getcanonicaltype.txt
                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                            swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                              swift::TypeBase::getCanonicalType() (line 775)
                                                                swift::TypeBase::getCanonicalType() (line 1403)
                                                                  vtable for llvm::PrettyStackTraceEntry (line 16)
                                                                  – Crash case at this location: stacks/1533-vtable.txt
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 80)
                                              – Crash case at this location: stacks/0940-swift-typechecker-validatedecl.txt
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 821)
                        swift::Lexer::lexIdentifier() (line 183)
                        – Crash case at this location: stacks/1489-swift-lexer-lexidentifier.txt
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 3294)
                        swift::TupleType::get(llvm::ArrayRef<swift::TupleTypeElt>, swift::ASTContext const&) (line 462)
                        – Crash case at this location: stacks/0928-swift-tupletype-get.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 766)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                          swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                            existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                                      – Crash case at this location: stacks/1644-resolvetypedecl.txt
                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 2539)
                      (anonymous namespace)::TypeResolver::resolveASTFunctionType(swift::FunctionTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::AnyFunctionType::ExtInfo) (line 80)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                – Crash case at this location: stacks/0393-resolvetypedecl.txt
                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                            swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                              void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                                    applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                                      swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 750)
                                                        swift::TypeChecker::checkSubstitutions(llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, llvm::DenseMap<swift::SubstitutableType*, llvm::SmallVector<swift::ProtocolConformance*, 2u>, llvm::DenseMapInfo<swift::SubstitutableType*> >&, swift::DeclContext*, swift::SourceLoc, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >*) (line 300)
                                                        – Crash case at this location: stacks/1743-swift-typechecker-checksubstitutions.txt
                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                        swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                          existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                    swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                        swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                          swift::TypeBase::getCanonicalType() (line 775)
                                                            swift::TypeBase::getCanonicalType() (line 1403)
                                                            – Crash case at this location: stacks/1601-llvm-prettystacktraceentry-prettystacktraceentry.txt
            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                          swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                            existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                              – Crash case at this location: stacks/0298-vtable.txt
                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                            swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                              void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6131)
                                                                checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                          swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                            swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                              std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                                              swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                                                swift::TypeBase::getCanonicalType() (line 775)
                                                                                                  swift::TypeBase::getCanonicalType() (line 1403)
                                                                                                  – Crash case at this location: stacks/1480-swift-typebase-getcanonicaltype.txt
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                  – Crash case at this location: stacks/0741-szone-malloc-should-clear.txt
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                            swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                              swift::TypeBase::getCanonicalType() (line 775)
                                                                swift::TypeBase::getCanonicalType() (line 1403)
                                                                – Crash case at this location: stacks/0591-swift-typebase-getcanonicaltype.txt
                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                        swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                          existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                              – Crash case at this location: stacks/1527-resolvetypedecl.txt
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                    swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                            – Crash case at this location: stacks/1347-getselftypeforcontainer.txt
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                        swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                          swift::TypeBase::getCanonicalType() (line 775)
                                                            swift::TypeBase::getCanonicalType() (line 1403)
                                                            – Crash case at this location: stacks/0728-swift-typebase-getcanonicaltype.txt
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                              swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                – Crash case at this location: stacks/0782-d.txt
              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                              swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                          swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                            swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                              std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                  – Crash case at this location: stacks/0674-getselftypeforcontainer.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2552)
                            swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 194)
                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                  validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                    swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                      swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                                        swift::Expr::walk(swift::ASTWalker&) (line 26)
                                          (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                              swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                                void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                              swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                llvm::FoldingSet<swift::ClassType>::NodeEquals(llvm::FoldingSetImpl::Node*, llvm::FoldingSetNodeID const&, unsigned int, llvm::FoldingSetNodeID&) const (line 46)
                                                                – Crash case at this location: stacks/1829-llvm-foldingset-swift-classtype-nodeequals.txt
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                              swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                          swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                            swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                              std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                  – Crash case at this location: stacks/0843-anyobject.txt
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                              – Crash case at this location: stacks/0556-resolvetypedecl.txt
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                            – Crash case at this location: stacks/0487-resolvetypedecl.txt
              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                            swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                              void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1582)
                                  finalizeGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::DeclContext*, swift::TypeChecker&) (line 522)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                              – Crash case at this location: stacks/0290-swift-declcontext-lookupqualified.txt
                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                        resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                        – Crash case at this location: stacks/0221-swift-constraints-constraintgraph-removeconstraint.txt
                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                        existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                            swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                              swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                  swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                    swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                      std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                          getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                          – Crash case at this location: stacks/0664-swift-pattern-operator.txt
              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                    validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                            swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                              existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                              swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                swift::TypeBase::getCanonicalType() (line 775)
                                                                  swift::TypeBase::getCanonicalType() (line 1403)
                                                                  – Crash case at this location: stacks/1574-swift-typebase-getcanonicaltype.txt
                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                    validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                  void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 13395)
                                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                      – Crash case at this location: stacks/1021-getselftypeforcontainer.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5603)
            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                      – Crash case at this location: stacks/1327-resolvetypedecl.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 642)
            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                          swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                            void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                                                  – Crash case at this location: stacks/1741-swift-constraints-constraintsystem-simplifymemberconstraint.txt
                                                                  swift::AvailabilityAttr::isUnavailable(swift::Decl const*) (line 22)
                                                                  – Crash case at this location: stacks/1600-swift-availabilityattr-isunavailable.txt
                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                              swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                – Crash case at this location: stacks/1332-swift-type-walk.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 9408)
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2695)
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                  swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 729)
                                                  – Crash case at this location: stacks/1425-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                                                  swift::constraints::matchCallArguments(llvm::ArrayRef<swift::TupleTypeElt>, llvm::ArrayRef<swift::TupleTypeElt>, bool, swift::constraints::MatchCallArgumentListener&, llvm::SmallVectorImpl<llvm::SmallVector<unsigned int, 1u> >&) (line 2979)
                                                  – Crash case at this location: stacks/1507-swift-constraints-matchcallarguments.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                              swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                swift::DiagnosticEngine::diagnose(swift::SourceLoc, swift::Diagnostic const&) (line 500)
                                                – Crash case at this location: stacks/0589-swift-diagnosticengine-diagnose.txt
                                                llvm::FoldingSet<swift::EnumType>::NodeEquals(llvm::FoldingSetImpl::Node*, llvm::FoldingSetNodeID const&, unsigned int, llvm::FoldingSetNodeID&) const (line 46)
                                                – Crash case at this location: stacks/1665-llvm-foldingset-swift-enumtype-nodeequals.txt
                                                swift::constraints::ConstraintGraph::gatherConstraints(swift::TypeVariableType*, llvm::SmallVectorImpl<swift::constraints::Constraint*>&) (line 843)
                                                – Crash case at this location: stacks/0712-swift-constraints-constraintgraph-gatherconstraints.txt
                                                swift::NominalTypeDecl::prepareLookupTable() (line 436)
                                                – Crash case at this location: stacks/1718-swift-nominaltypedecl-preparelookuptable.txt
                                                swift::NominalTypeDecl::computeType() (line 185)
                                                – Crash case at this location: stacks/0762-swift-nominaltypedecl-computetype.txt
                                                swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 65)
                                                – Crash case at this location: stacks/0715-swift-constraints-constraintsystem-solve.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
              validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                    swift::Expr::walk(swift::ASTWalker&) (line 26)
                      (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                          – Crash case at this location: stacks/0372-swift-declcontext-lookupqualified.txt
                    swift::Expr::walk(swift::ASTWalker&) (line 53)
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1543)
                          (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                                          validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                                                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                                      swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                        swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                        – Crash case at this location: stacks/1876-swift-type-walk.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1563)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3458)
                          (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                  swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                    swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                    – Crash case at this location: stacks/0722-swift-type-walk.txt
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                    swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                      swift::Expr::walk(swift::ASTWalker&) (line 53)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1679)
                          swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 2921)
                            (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 585)
                              (anonymous namespace)::ExprRewriter::coerceCallArguments(swift::Expr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 2391)
                                getCallerDefaultArg(swift::TypeChecker&, swift::DeclContext*, swift::SourceLoc, swift::ConcreteDeclRef&, unsigned int) (line 61)
                                – Crash case at this location: stacks/1717-getcallerdefaultarg.txt
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                    swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                      swift::Expr::walk(swift::ASTWalker&) (line 76)
                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 7574)
                            swift::constraints::ConstraintSystem::openType(swift::Type, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&, swift::DeclContext*, bool, swift::constraints::DependentTypeOpener*) (line 202)
                              swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 2165)
                                  swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 335)
                                  – Crash case at this location: stacks/0926-swift-constraints-constraintsystem-opengeneric.txt
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 5482)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                      – Crash case at this location: stacks/1530-swift-declcontext-lookupqualified.txt
              validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                swift::Lexer::getLocForEndOfToken(swift::SourceManager const&, swift::SourceLoc) (line 535)
                                – Crash case at this location: stacks/0565-swift-lexer-getlocforendoftoken.txt
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                          swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                            existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                          swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                            swift::TypeBase::getCanonicalType() (line 775)
                                                              swift::TypeBase::getCanonicalType() (line 1403)
                                                              – Crash case at this location: stacks/0533-swift-typebase-getcanonicaltype.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5734)
              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                          swift::ClangModuleUnit::getAdapterModule() const (line 71)
                          – Crash case at this location: stacks/0488-swift-clangmoduleunit-getadaptermodule.txt
                          swift::Mangle::Mangler::mangleType(swift::CanType, swift::ResilienceExpansion, unsigned int) (line 1164)
                          – Crash case at this location: stacks/1635-swift-mangle-mangler-mangletype.txt
                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1945)
                          – Crash case at this location: stacks/0920-swift-typechecker-typecheckexpression.txt
                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                            llvm::OnDiskChainedHashTable<swift::ModuleFile::DeclTableInfo>::find(swift::Identifier const&, swift::ModuleFile::DeclTableInfo*) (line 47)
                            – Crash case at this location: stacks/0977-llvm-ondiskchainedhashtable-swift-modulefile-decltableinfo-find.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                swift::ModuleFile::maybeReadGenericParams(swift::DeclContext*, llvm::BitstreamCursor&, swift::GenericParamList*) (line 1910)
                                                – Crash case at this location: stacks/1811-swift-modulefile-maybereadgenericparams.txt
                                                swift::ClangModuleUnit::getAdapterModule() const (line 71)
                                                – Crash case at this location: stacks/0727-swift-clangmoduleunit-getadaptermodule.txt
                                                swift::TypeAliasDecl::TypeAliasDecl(swift::SourceLoc, swift::Identifier, swift::SourceLoc, swift::TypeLoc, swift::DeclContext*) (line 258)
                                                – Crash case at this location: stacks/1554-swift-typealiasdecl-typealiasdecl.txt
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 865)
                swift::NominalTypeDecl::computeType() (line 29)
                  swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                    swift::InFlightDiagnostic swift::DiagnosticEngine::diagnose<swift::Identifier>(swift::SourceLoc, swift::Diag<swift::Identifier>, swift::detail::PassArgument<swift::Identifier>::type) (line 421)
                    – Crash case at this location: stacks/0902-c.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2287)
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                      swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                        swift::Type::walk(swift::TypeWalker&) const (line 75)
                        – Crash case at this location: stacks/0578-swift-type-walk.txt
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1557)
                checkGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::TypeChecker&, swift::DeclContext*) (line 146)
                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                              applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 750)
                                  swift::TypeChecker::checkSubstitutions(llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, llvm::DenseMap<swift::SubstitutableType*, llvm::SmallVector<swift::ProtocolConformance*, 2u>, llvm::DenseMapInfo<swift::SubstitutableType*> >&, swift::DeclContext*, swift::SourceLoc, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >*) (line 300)
                                  – Crash case at this location: stacks/0912-a.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2723)
              checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                  – Crash case at this location: stacks/1655-getselftypeforcontainer.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                      validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                                                                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                                                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                                        validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                                                                swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                                                                  existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6131)
                                                                                        checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                                                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                                void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                                                                                – Crash case at this location: stacks/1694-void.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 1857)
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 635)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                – Crash case at this location: stacks/1041-swift-declcontext-lookupqualified.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2193)
              checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                  swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                    swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                      swift::BraceStmt::create(swift::ASTContext&, swift::SourceLoc, llvm::ArrayRef<swift::ASTNode>, swift::SourceLoc, swift::Optional<bool>) (line 205)
                                                      – Crash case at this location: stacks/1432-swift-bracestmt-create.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6042)
            (anonymous namespace)::DeclChecker::validateAncestorProtocols(llvm::ArrayRef<swift::ProtocolDecl*>) (line 671)
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                    validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 1036)
                                  swift::TypeBase::getTypeOfMember(swift::Module*, swift::ValueDecl const*, swift::LazyResolver*, swift::Type) (line 393)
                                    swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                      std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 949)
                                      – Crash case at this location: stacks/1786-std-function-func-swift-type-subst.txt
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                                                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                              swift::Optional<swift::Diagnostic>::operator=(swift::Optional<swift::Diagnostic>&&) (line 245)
                                                              – Crash case at this location: stacks/1679-swift-optional-swift-diagnostic-operator.txt
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                          validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                          resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                            swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 1036)
                                                              swift::TypeBase::getTypeOfMember(swift::Module*, swift::ValueDecl const*, swift::LazyResolver*, swift::Type) (line 393)
                                                                swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                                                  std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 949)
                                                                  – Crash case at this location: stacks/1565-std-function-func-swift-type-subst.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 10760)
            checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 365)
              swift::NominalTypeDecl::lookupDirect(swift::DeclName) (line 45)
                swift::ExtensionDecl::getMembers(bool) const (line 21)
                  swift::IterableDeclContext::loadAllMembers() const (line 102)
                    swift::ClangImporter::Implementation::loadAllMembers(swift::Decl const*, unsigned long long, bool*) (line 2951)
                      (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool, swift::ObjCSelector, swift::DeclName, llvm::ArrayRef<clang::ParmVarDecl const*>, bool, bool&) (line 1328)
                        swift::NominalTypeDecl::lookupDirect(swift::DeclName) (line 45)
                          swift::ExtensionDecl::getMembers(bool) const (line 21)
                            swift::IterableDeclContext::loadAllMembers() const (line 102)
                              swift::ClangImporter::Implementation::loadAllMembers(swift::Decl const*, unsigned long long, bool*) (line 1486)
                                swift::ClangImporter::Implementation::importDeclAndCacheImpl(clang::NamedDecl const*, bool) (line 226)
                                  swift::ClangImporter::Implementation::importDeclImpl(clang::NamedDecl const*, bool&, bool&) (line 316)
                                    clang::declvisitor::Base<clang::declvisitor::make_const_ptr, (anonymous namespace)::SwiftDeclConverter, swift::Decl*>::Visit(clang::Decl const*) (line 3130)
                                      (anonymous namespace)::SwiftDeclConverter::VisitObjCPropertyDecl(clang::ObjCPropertyDecl const*, swift::DeclContext*) (line 183)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3178)
                                          swift::NominalTypeDecl::lookupDirect(swift::DeclName) (line 79)
                                            swift::NominalTypeDecl::getMembers(bool) const (line 28)
                                              swift::IterableDeclContext::loadAllMembers() const (line 102)
                                                swift::ClangImporter::Implementation::loadAllMembers(swift::Decl const*, unsigned long long, bool*) (line 1486)
                                                  swift::ClangImporter::Implementation::importDeclAndCacheImpl(clang::NamedDecl const*, bool) (line 226)
                                                    swift::ClangImporter::Implementation::importDeclImpl(clang::NamedDecl const*, bool&, bool&) (line 316)
                                                      clang::declvisitor::Base<clang::declvisitor::make_const_ptr, (anonymous namespace)::SwiftDeclConverter, swift::Decl*>::Visit(clang::Decl const*) (line 3076)
                                                        (anonymous namespace)::SwiftDeclConverter::VisitObjCMethodDecl(clang::ObjCMethodDecl const*, swift::DeclContext*, bool) (line 94)
                                                          (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool) (line 1142)
                                                            (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool, swift::ObjCSelector, swift::DeclName, llvm::ArrayRef<clang::ParmVarDecl const*>, bool, bool&) (line 1498)
                                                            – Crash case at this location: stacks/0518-no-stacktrace.txt
                      (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool, swift::ObjCSelector, swift::DeclName, llvm::ArrayRef<clang::ParmVarDecl const*>, bool, bool&) (line 1498)
                      – Crash case at this location: stacks/0477-no-stacktrace.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2078)
            swift::TypeChecker::addImplicitConstructors(swift::NominalTypeDecl*, llvm::SmallVectorImpl<swift::Decl*>&) (line 257)
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 13616)
                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                          validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                  swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                    existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                        swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                          swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                          – Crash case at this location: stacks/1751-swift-type-walk.txt
                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 13583)
                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                          validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                    – Crash case at this location: stacks/1508-resolvetypedecl.txt
                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 21588)
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                      validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                    – Crash case at this location: stacks/1778-getselftypeforcontainer.txt
            swift::TypeChecker::addImplicitConstructors(swift::NominalTypeDecl*, llvm::SmallVectorImpl<swift::Decl*>&) (line 754)
              createImplicitConstructor(swift::TypeChecker&, swift::NominalTypeDecl*, (anonymous namespace)::ImplicitConstructorKind) (line 476)
                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                  validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                      validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                      swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                        swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                        – Crash case at this location: stacks/0725-swift-type-walk.txt
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                  swift::TypeBase::getCanonicalType() (line 775)
                                                                    swift::TypeBase::getCanonicalType() (line 1403)
                                                                    – Crash case at this location: stacks/1522-swift-typebase-getcanonicaltype.txt
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                                                                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                                                                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                                        validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2552)
                                                                                    swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 194)
                                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                                llvm::BitstreamCursor::readRecord(unsigned int, llvm::SmallVectorImpl<unsigned long long>&, llvm::StringRef*) (line 455)
                                                                                                – Crash case at this location: stacks/1843-llvm-bitstreamcursor-readrecord.txt
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                    – Crash case at this location: stacks/1840-getselftypeforcontainer.txt
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                  swift::TypeBase::getCanonicalType() (line 775)
                                                                    swift::TypeBase::getCanonicalType() (line 1403)
                                                                    – Crash case at this location: stacks/1940-swift-typebase-getcanonicaltype.txt
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                                – Crash case at this location: stacks/0453-resolvetypedecl.txt
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                  swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                    void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                      – Crash case at this location: stacks/1112-getselftypeforcontainer.txt
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                – Crash case at this location: stacks/0436-resolvetypedecl.txt
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 766)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                      – Crash case at this location: stacks/0629-getselftypeforcontainer.txt
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 2164)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                    swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                      void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                          swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                            swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                                            swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                                              void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                                                                    swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                                                                      void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                                                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                                                                                    – Crash case at this location: stacks/1302-resolvetypedecl.txt
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                                                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                                                                swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 852)
                                                                                                  swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                                                                  – Crash case at this location: stacks/0411-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                  validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                    swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                      swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                        swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                          swift::Expr::walk(swift::ASTWalker&) (line 53)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                                (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                    swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                          swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                            existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                              – Crash case at this location: stacks/1936-getselftypeforcontainer.txt
                          swift::Expr::walk(swift::ASTWalker&) (line 76)
                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                        resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                        – Crash case at this location: stacks/1490-resolvetypedecl.txt
                      swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                        swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                          swift::Expr::walk(swift::ASTWalker&) (line 53)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1679)
                                    swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 4209)
                                      (anonymous namespace)::ExprRewriter::applyMemberRefExpr(swift::Expr*, swift::Expr*, swift::SourceLoc, swift::SourceLoc, bool) (line 1100)
                                        (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 511)
                                          swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const (line 1204)
                                          – Crash case at this location: stacks/0996-swift-constraints-solution-computesubstitutions.txt
                      swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                        swift::Expr::walk(swift::ASTWalker&) (line 26)
                          (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                  swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                    swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                    – Crash case at this location: stacks/1132-swift-type-walk.txt
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                – Crash case at this location: stacks/1266-getselftypeforcontainer.txt
                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                – Crash case at this location: stacks/1704-getselftypeforcontainer.txt
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                                                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                                                                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                                                                                swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 852)
                                                                                                                  swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                                                                                  – Crash case at this location: stacks/1109-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                        swift::Expr::walk(swift::ASTWalker&) (line 53)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3279)
                            (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                    swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                      swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                        swift::ModuleFile::getType(swift::Fixnum<31u, unsigned int>) (line 8359)
                                                                        – Crash case at this location: stacks/1595-swift-modulefile-gettype.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2723)
            checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 832)
                                                                            checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                                                                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                                                                                  swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 852)
                                                                                                                    swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                                                                                    – Crash case at this location: stacks/1060-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                – Crash case at this location: stacks/1093-resolvetypedecl.txt
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 802)
                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5734)
                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                          resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                          – Crash case at this location: stacks/0868-x.txt
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 186)
                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 535)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                                swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 183)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 441)
                                      (anonymous namespace)::DeclChecker::visitAssociatedTypeDecl(swift::AssociatedTypeDecl*) (line 102)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                            swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                              swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                                  swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                                    swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                                      std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                                                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                                                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                                                                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                                                                                                              validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                                                                                                                swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                                                                                                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                                                                                                                                    swift::Expr::walk(swift::ASTWalker&) (line 26)
                                                                                                                                      (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                                                                                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                                                                                                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                                                                                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                                                                                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                                                                                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                                                                                                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                                                                                                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                                                                                                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                                                                                                                          swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                                                                                                                            swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                                                                                                                              std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                                                                                                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                                                                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                                                                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                                                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                                                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                                                                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                                                                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                                                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                                                                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                                                                                                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                                                                                                                                  – Crash case at this location: stacks/1147-getselftypeforcontainer.txt
                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                    applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                      swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 238)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                                      validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                                        swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                                                            swift::Expr::walk(swift::ASTWalker&) (line 26)
                                                              (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                              swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                – Crash case at this location: stacks/1668-swift-type-walk.txt
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2552)
                                  swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 194)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                  swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                  – Crash case at this location: stacks/0766-swift-type-walk.txt
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                        validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                          swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                            swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                                              swift::Expr::walk(swift::ASTWalker&) (line 26)
                                                (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                  swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                    swift::ModuleFile::getDecl(swift::Fixnum<31u, unsigned int>, swift::Optional<swift::DeclContext*>) (line 7248)
                                                                    – Crash case at this location: stacks/0769-swift-modulefile-getdecl.txt
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                        swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                          swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                          – Crash case at this location: stacks/0619-swift-type-walk.txt
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1582)
                                            finalizeGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::DeclContext*, swift::TypeChecker&) (line 522)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2552)
                                                      swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 194)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                          swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                            swift::TypeBase::getCanonicalType() (line 775)
                                                              swift::TypeBase::getCanonicalType() (line 1403)
                                                              – Crash case at this location: stacks/1072-swift-typebase-getcanonicaltype.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5734)
            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 766)
                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                      – Crash case at this location: stacks/0451-resolvetypedecl.txt
              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                      swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                        void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                            swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                              swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                  swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                    swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                      std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                          getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                          – Crash case at this location: stacks/1025-getselftypeforcontainer.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6131)
            checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                    validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                swift::InFlightDiagnostic::highlight(swift::SourceRange) (line 66)
                                – Crash case at this location: stacks/0953-swift-inflightdiagnostic-highlight.txt
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 832)
                checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                          swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                            swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                              std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                                                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                                                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                          validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                                                                              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                                                                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                                                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                                                                            swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                                                                              existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                                      swift::ClangModuleUnit::getAdapterModule() const (line 71)
                                                                                                      – Crash case at this location: stacks/1890-swift-clangmoduleunit-getadaptermodule.txt
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                          resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 80)
                            – Crash case at this location: stacks/0526-swift-typechecker-validatedecl.txt
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                          validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                    – Crash case at this location: stacks/0921-resolvetypedecl.txt
                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 22856)
                  swift::FunctionType::get(swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 158)
                  – Crash case at this location: stacks/0838-no-stacktrace.txt
                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                                                                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                                                                              swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 852)
                                                                                                                swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                                                                                – Crash case at this location: stacks/0437-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                              swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                              – Crash case at this location: stacks/1452-swift-type-walk.txt
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                  swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                  – Crash case at this location: stacks/1927-swift-type-walk.txt
                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19092)
                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                          resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                            applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                              swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 361)
                                swift::BoundGenericType::get(swift::NominalTypeDecl*, swift::Type, llvm::ArrayRef<swift::Type>) (line 331)
                                – Crash case at this location: stacks/1712-swift-boundgenerictype-get.txt
                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                      validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 3294)
                            swift::TupleType::get(llvm::ArrayRef<swift::TupleTypeElt>, swift::ASTContext const&) (line 317)
                              vtable for swift::PartialGenericTypeToArchetypeResolver (line 16)
                              – Crash case at this location: stacks/1560-vtable.txt
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 220)
                  – Crash case at this location: stacks/0939-swift-typechecker-typecheckpattern.txt
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                swift::TypeBase::getCanonicalType() (line 1403)
                                                – Crash case at this location: stacks/0747-swift-typebase-getcanonicaltype.txt
                                                swift::ParenType::get(swift::ASTContext const&, swift::Type) (line 278)
                                                – Crash case at this location: stacks/0718-swift-parentype-get.txt
                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                swift::ClangModuleUnit::getAdapterModule() const (line 71)
                                                – Crash case at this location: stacks/0538-swift-clangmoduleunit-getadaptermodule.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2164)
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2164)
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                  swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                    swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                      swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                        swift::Expr::walk(swift::ASTWalker&) (line 76)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                              swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                        swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 852)
                                          swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                          – Crash case at this location: stacks/1879-swift-nominaltypedecl-getdeclaredtypeincontext.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2931)
              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                          swift::TypeChecker::getProtocol(swift::SourceLoc, swift::KnownProtocolKind) (line 36)
                          – Crash case at this location: stacks/1915-swift-typechecker-getprotocol.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19092)
              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                            swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                              swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                  swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                    swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                      std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                      swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                        swift::TypeBase::getCanonicalType() (line 775)
                                                          swift::TypeBase::getCanonicalType() (line 1403)
                                                            swift::BoundGenericType::get(swift::NominalTypeDecl*, swift::Type, llvm::ArrayRef<swift::Type>) (line 877)
                                                            – Crash case at this location: stacks/1478-swift-boundgenerictype-get.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 1857)
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 476)
                    collectRequirements(swift::ArchetypeBuilder&, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::SmallVectorImpl<swift::Requirement>&) (line 910)
                      swift::resolvePotentialArchetypeToType(swift::ArchetypeBuilder&, llvm::ArrayRef<swift::GenericTypeParamType*>, swift::ArchetypeBuilder::PotentialArchetype*) (line 53)
                        swift::resolvePotentialArchetypeToType(swift::ArchetypeBuilder&, llvm::ArrayRef<swift::GenericTypeParamType*>, swift::ArchetypeBuilder::PotentialArchetype*) (line 334)
                          swift::ArchetypeBuilder::resolveArchetype(swift::Type) (line 25)
                          – Crash case at this location: stacks/0752-swift-archetypebuilder-resolvearchetype.txt
                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                  applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                    swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 750)
                                      swift::TypeChecker::checkSubstitutions(llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, llvm::DenseMap<swift::SubstitutableType*, llvm::SmallVector<swift::ProtocolConformance*, 2u>, llvm::DenseMapInfo<swift::SubstitutableType*> >&, swift::DeclContext*, swift::SourceLoc, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >*) (line 300)
                                      – Crash case at this location: stacks/0337-swift-typechecker-checksubstitutions.txt
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                  – Crash case at this location: stacks/0247-swift-metatypetype-get.txt
                                    swift::constraints::ConstraintLocator::Profile(llvm::FoldingSetNodeID&, swift::Expr*, llvm::ArrayRef<swift::constraints::ConstraintLocator::PathElement>) (line 46)
                                    – Crash case at this location: stacks/0511-swift-constraints-constraintlocator-profile.txt
                                    swift::Parser::parseIdentifier(swift::Identifier&, swift::SourceLoc&, swift::Diagnostic const&) (line 140)
                                    – Crash case at this location: stacks/0872-swift-parser-parseidentifier.txt
                                    swift::Lexer::lexImpl() (line 1152)
                                    – Crash case at this location: stacks/1281-swift-lexer-leximpl.txt
                                    swift::ModuleFile::lookupValue(swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&) (line 1472)
                                    – Crash case at this location: stacks/0596-swift-modulefile-lookupvalue.txt
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                            validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                                        applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                                          swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 750)
                                                            swift::TypeChecker::checkSubstitutions(llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, llvm::DenseMap<swift::SubstitutableType*, llvm::SmallVector<swift::ProtocolConformance*, 2u>, llvm::DenseMapInfo<swift::SubstitutableType*> >&, swift::DeclContext*, swift::SourceLoc, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >*) (line 300)
                                                            – Crash case at this location: stacks/1880-swift-typechecker-checksubstitutions.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6131)
              checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                  swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                    swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                      swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 420)
                                                      – Crash case at this location: stacks/1505-swift-constraints-constraintsystem-simplifymemberconstraint.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                          swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                            existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                    validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 80)
                                                – Crash case at this location: stacks/1937-swift-typechecker-validatedecl.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                      validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1582)
                                        finalizeGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::DeclContext*, swift::TypeChecker&) (line 522)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                                    – Crash case at this location: stacks/1085-swift-declcontext-lookupqualified.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6437)
              swift::TypeChecker::checkDeclAttributesEarly(swift::Decl*) (line 2172)
                (anonymous namespace)::AttributeEarlyChecker::visitMutationAttr(swift::DeclAttribute*) (line 50)
                  swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                  – Crash case at this location: stacks/1238-swift-nominaltypedecl-getdeclaredtypeincontext.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2695)
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                    validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                    swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                      swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                        swift::EnumType::get(swift::EnumDecl*, swift::Type, swift::ASTContext const&) (line 403)
                                                                        – Crash case at this location: stacks/1364-swift-enumtype-get.txt
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                  swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                    swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                      swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                        swift::Expr::walk(swift::ASTWalker&) (line 76)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 1252)
                                              swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 327)
                                                swift::ArchetypeBuilder::mapTypeIntoContext(swift::DeclContext*, swift::Type) (line 149)
                                                  swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                                    (anonymous namespace)::RawMemoryObject::readBytes(unsigned long long, unsigned long long, unsigned char*) const (line 58)
                                                    – Crash case at this location: stacks/0745-swift-type-transform.txt
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5734)
                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                            swift::Type::walk(swift::TypeWalker&) const (line 75)
                            – Crash case at this location: stacks/0946-swift-type-walk.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 9408)
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                    validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                    swift::Type::walk(swift::TypeWalker&) const (line 75)
                                    – Crash case at this location: stacks/1943-swift-type-walk.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
              swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                  std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 139)
                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 2394)
                      swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                        void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                        – Crash case at this location: stacks/0714-void.txt
              swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 139)
                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 2140)
                    createGetterPrototype(swift::AbstractStorageDecl*, swift::TypeChecker&) (line 578)
                      swift::TypeChecker::getTypeOfRValue(swift::ValueDecl*, bool) (line 20)
                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 2394)
                          swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                          – Crash case at this location: stacks/0425-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 2394)
                    swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                    – Crash case at this location: stacks/0297-swift-nominaltypedecl-getdeclaredtypeincontext.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6018)
              void checkCircularity<swift::ProtocolDecl>(swift::TypeChecker&, swift::ProtocolDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::ProtocolDecl*>&) (line 200)
                void checkCircularity<swift::ProtocolDecl>(swift::TypeChecker&, swift::ProtocolDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::ProtocolDecl*>&) (line 200)
                  void checkCircularity<swift::ProtocolDecl>(swift::TypeChecker&, swift::ProtocolDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::ProtocolDecl*>&) (line 588)
                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 144)
                    – Crash case at this location: stacks/1672-swift-typechecker-validatedecl.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 53)
                swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                – Crash case at this location: stacks/0265-swift-typechecker-validatedecl.txt
                  swift::DiagnosticEngine::flushActiveDiagnostic() (line 4733)
                  – Crash case at this location: stacks/0761-swift-diagnosticengine-flushactivediagnostic.txt
                  swift::Lexer::lexIdentifier() (line 183)
                  – Crash case at this location: stacks/0380-swift-lexer-lexidentifier.txt
                  swift::Parser::consumeToken() (line 68)
                  – Crash case at this location: stacks/0340-swift-parser-consumetoken.txt
                  swift::TupleExpr::create(swift::ASTContext&, swift::SourceLoc, llvm::ArrayRef<swift::Expr*>, llvm::ArrayRef<swift::Identifier>, llvm::ArrayRef<swift::SourceLoc>, swift::SourceLoc, bool, bool, swift::Type) (line 318)
                  – Crash case at this location: stacks/0813-swift-tupleexpr-create.txt
                  swift::ProtocolType::canonicalizeProtocols(llvm::SmallVectorImpl<swift::ProtocolDecl*>&) (line 1326)
                  – Crash case at this location: stacks/0962-swift-protocoltype-canonicalizeprotocols.txt
                  bool swift::Parser::parseIdentifier<>(swift::Identifier&, swift::SourceLoc&, swift::Diag<>) (line 134)
                  – Crash case at this location: stacks/0998-bool.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2287)
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1605)
                swift::NominalTypeDecl::computeType() (line 29)
                  swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                  – Crash case at this location: stacks/0259-swift-lexer-leximpl.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5734)
              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                    swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                      existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                          swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                            swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                  swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                    std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 80)
                                                  – Crash case at this location: stacks/1603-swift-typechecker-validatedecl.txt
                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                        – Crash case at this location: stacks/0406-swift-declcontext-lookupqualified.txt
                          swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8978)
                          – Crash case at this location: stacks/0744-swift-constraints-constraintsystem-applysolution.txt
                          void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                          – Crash case at this location: stacks/0376-void.txt
                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                        swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 754)
                          swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                          – Crash case at this location: stacks/1003-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                      resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                        applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                          swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 238)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                      swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                        void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1582)
                                            finalizeGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::DeclContext*, swift::TypeChecker&) (line 522)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                                        – Crash case at this location: stacks/1179-swift-declcontext-lookupqualified.txt
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1582)
                                          finalizeGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::DeclContext*, swift::TypeChecker&) (line 522)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                                      – Crash case at this location: stacks/1033-swift-declcontext-lookupqualified.txt
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                    – Crash case at this location: stacks/0666-resolvetypedecl.txt
                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                            swift::ModuleFile::lookupValue(swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&) (line 1472)
                            – Crash case at this location: stacks/1075-swift-modulefile-lookupvalue.txt
                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                            swift::PrintingDiagnosticConsumer::handleDiagnostic(swift::SourceManager&, swift::SourceLoc, swift::DiagnosticKind, llvm::StringRef, swift::DiagnosticInfo const&) (line 1325)
                            – Crash case at this location: stacks/1420-swift-printingdiagnosticconsumer-handlediagnostic.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                          validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                  swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                    swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                      swift::ModuleFile::getDecl(swift::Fixnum<31u, unsigned int>, swift::Optional<swift::DeclContext*>) (line 7248)
                                                                      – Crash case at this location: stacks/1470-swift-modulefile-getdecl.txt
                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                              swift::Type::walk(swift::TypeWalker&) const (line 54)
                                              – Crash case at this location: stacks/0582-a.txt
                                                swift::AvailabilityAttr::isUnavailable(swift::Decl const*) (line 22)
                                                – Crash case at this location: stacks/0965-swift-availabilityattr-isunavailable.txt
                                                swift::ParenType::get(swift::ASTContext const&, swift::Type) (line 278)
                                                – Crash case at this location: stacks/1447-swift-parentype-get.txt
                                                swift::Parser::skipSingle() (line 327)
                                                – Crash case at this location: stacks/0999-swift-parser-skipsingle.txt
                                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 599)
                                                – Crash case at this location: stacks/0984-swift-constraints-constraintsystem-simplifyconstraint.txt
                                                swift::Parser::parseExprIdentifier() (line 642)
                                                – Crash case at this location: stacks/1612-swift-parser-parseexpridentifier.txt
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                    validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                        validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                  swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                  – Crash case at this location: stacks/1026-swift-type-walk.txt
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                              swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                  swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 133)
                                                  – Crash case at this location: stacks/1584-swift-constraints-constraintsystem-getfixedtyperecursive.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                              swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                  swift::BoundGenericType::get(swift::NominalTypeDecl*, swift::Type, llvm::ArrayRef<swift::Type>) (line 331)
                                                  – Crash case at this location: stacks/1372-swift-boundgenerictype-get.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2552)
                                      swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 194)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                              – Crash case at this location: stacks/0787-getselftypeforcontainer.txt
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                swift::GenericParamList::addNestedArchetypes(swift::ArchetypeType*, llvm::SmallPtrSetImpl<swift::ArchetypeType*>&, llvm::SmallVectorImpl<swift::ArchetypeType*>&) (line 153)
                                                – Crash case at this location: stacks/1160-swift-genericparamlist-addnestedarchetypes.txt
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                          swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                            swift::TypeBase::getCanonicalType() (line 775)
                                              swift::TypeBase::getCanonicalType() (line 1403)
                                                swift::GenericFunctionType::get(swift::GenericSignature*, swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 438)
                                                – Crash case at this location: stacks/1594-swift-genericfunctiontype-get.txt
                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                  swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 133)
                                                  – Crash case at this location: stacks/1023-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                swift::ModuleFile::maybeReadGenericParams(swift::DeclContext*, llvm::BitstreamCursor&, swift::GenericParamList*) (line 1910)
                                                – Crash case at this location: stacks/1419-swift-modulefile-maybereadgenericparams.txt
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                          swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                            swift::TypeBase::getCanonicalType() (line 775)
                                              swift::TypeBase::getCanonicalType() (line 1403)
                                                swift::ModuleFile::maybeReadPattern() (line 1457)
                                                – Crash case at this location: stacks/1458-swift-modulefile-maybereadpattern.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
              validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                  swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 238)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                – Crash case at this location: stacks/1288-getselftypeforcontainer.txt
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                          swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                            swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                              std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                  – Crash case at this location: stacks/0300-swift-typebase-operator.txt
                                                                    llvm::FoldingSet<swift::constraints::ConstraintLocator>::NodeEquals(llvm::FoldingSetImpl::Node*, llvm::FoldingSetNodeID const&, unsigned int, llvm::FoldingSetNodeID&) const (line 42)
                                                                    – Crash case at this location: stacks/1017-llvm-foldingset-swift-constraints-constraintlocator-nodeequals.txt
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                              – Crash case at this location: stacks/0248-swift-clangmoduleunit-getimportedmodules.txt
                                swift::Module::lookupConformance(swift::Type, swift::ProtocolDecl*, swift::LazyResolver*) (line 2889)
                                – Crash case at this location: stacks/0663-swift-module-lookupconformance.txt
                                void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                – Crash case at this location: stacks/1150-void.txt
                                swift::TypeChecker::computeCaptures(swift::AnyFunctionRef) (line 900)
                                – Crash case at this location: stacks/0989-swift-typechecker-computecaptures.txt
                                swift::DiagnosticEngine::flushActiveDiagnostic() (line 4667)
                                – Crash case at this location: stacks/0490-swift-diagnosticengine-flushactivediagnostic.txt
                                swift::Parser::parseExprPostfix(swift::Diag<>, bool) (line 394)
                                – Crash case at this location: stacks/1086-swift-parser-parseexprpostfix.txt
              validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                    swift::Expr::walk(swift::ASTWalker&) (line 53)
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1543)
                        (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                              swift::constraints::ConstraintGraph::unbindTypeVariable(swift::TypeVariableType*, swift::Type) (line 505)
                              – Crash case at this location: stacks/1790-swift-constraints-constraintgraph-unbindtypevariable.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3458)
                        (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                              swift::ArchetypeType::setNestedTypes(swift::ASTContext&, llvm::MutableArrayRef<std::__1::pair<swift::Identifier, llvm::PointerUnion<swift::ArchetypeType*, swift::Type> > >) (line 45)
                              – Crash case at this location: stacks/0459-swift-archetypetype-setnestedtypes.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3478)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1935)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1935)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1635)
                                (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                      swift::ProtocolType::canonicalizeProtocols(llvm::SmallVectorImpl<swift::ProtocolDecl*>&) (line 1326)
                                      – Crash case at this location: stacks/1267-swift-protocoltype-canonicalizeprotocols.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1823)
                        (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                              swift::TypeAliasDecl::TypeAliasDecl(swift::SourceLoc, swift::Identifier, swift::SourceLoc, swift::TypeLoc, swift::DeclContext*) (line 258)
                              – Crash case at this location: stacks/1693-swift-typealiasdecl-typealiasdecl.txt
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                    swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                      swift::Expr::walk(swift::ASTWalker&) (line 76)
                        swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 90)
                          (anonymous namespace)::ExprRewriter::visitApplyExpr(swift::ApplyExpr*) (line 79)
                            (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 1457)
                              (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 511)
                                swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const (line 1204)
                                – Crash case at this location: stacks/0633-swift-constraints-solution-computesubstitutions.txt
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                    swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                      swift::Expr::walk(swift::ASTWalker&) (line 76)
                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 5482)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                        void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                        – Crash case at this location: stacks/1872-void.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 11407)
              swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
              – Crash case at this location: stacks/0244-swift-nominaltypedecl-getdeclaredtypeincontext.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                    swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2552)
                                    swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 526)
                                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 1297)
                                        swift::Module::lookupConformance(swift::Type, swift::ProtocolDecl*, swift::LazyResolver*) (line 2305)
                                          swift::TypeChecker::resolveConformance(swift::NominalTypeDecl*, swift::ProtocolDecl*, swift::ExtensionDecl*) (line 110)
                                            swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3426)
                                              (anonymous namespace)::ConformanceChecker::resolveTypeWitnessViaLookup(swift::AssociatedTypeDecl*) (line 174)
                                                swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 194)
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                    swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                      swift::TypeBase::getCanonicalType() (line 775)
                                                        swift::TypeBase::getCanonicalType() (line 1403)
                                                        – Crash case at this location: stacks/0930-swift-typebase-getcanonicaltype.txt
                                    swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 194)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                              – Crash case at this location: stacks/0777-getselftypeforcontainer.txt
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 544)
                                              (anonymous namespace)::DeclChecker::visitAssociatedTypeDecl(swift::AssociatedTypeDecl*) (line 102)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                – Crash case at this location: stacks/1536-getselftypeforcontainer.txt
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                        swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                          swift::TypeBase::getCanonicalType() (line 775)
                                            swift::TypeBase::getCanonicalType() (line 1403)
                                            – Crash case at this location: stacks/0288-swift-typebase-getcanonicaltype.txt
                                              void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                              – Crash case at this location: stacks/1078-void.txt
                                              swift::PrintingDiagnosticConsumer::handleDiagnostic(swift::SourceManager&, swift::SourceLoc, swift::DiagnosticKind, llvm::StringRef, swift::DiagnosticInfo const&) (line 1288)
                                              – Crash case at this location: stacks/1244-swift-printingdiagnosticconsumer-handlediagnostic.txt
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                        swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                          swift::TypeBase::getCanonicalType() (line 775)
                                            swift::TypeBase::getCanonicalType() (line 1403)
                                            – Crash case at this location: stacks/0398-no-stacktrace.txt
                                              llvm::raw_fd_ostream::write_impl(char const*, unsigned long) (line 89)
                                              – Crash case at this location: stacks/0646-llvm-raw-fd-ostream-write-impl.txt
                                              swift::Lexer::lexIdentifier() (line 498)
                                              – Crash case at this location: stacks/0918-swift-lexer-lexidentifier.txt
                                              std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 239)
                                              – Crash case at this location: stacks/0524-std-function-func-swift-type-subst.txt
                                              swift::TuplePattern::createSimple(swift::ASTContext&, swift::SourceLoc, llvm::ArrayRef<swift::TuplePatternElt>, swift::SourceLoc, bool, swift::SourceLoc) (line 240)
                                              – Crash case at this location: stacks/1567-swift-tuplepattern-createsimple.txt
                                              swift::Lexer::lexImpl() (line 3320)
                                              – Crash case at this location: stacks/0917-swift-lexer-leximpl.txt
                                              swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 173)
                                              – Crash case at this location: stacks/1492-swift-constraints-constraintsystem-matchtypes.txt
                                              swift::ModuleFile::lookupValue(swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&) (line 1472)
                                              – Crash case at this location: stacks/1575-swift-modulefile-lookupvalue.txt
                                              bool swift::Parser::parseIdentifier<>(swift::Identifier&, swift::SourceLoc&, swift::Diag<>) (line 134)
                                              – Crash case at this location: stacks/0961-bool.txt
                                              swift::constraints::Solution::simplifyType(swift::TypeChecker&, swift::Type) const (line 86)
                                              – Crash case at this location: stacks/1885-swift-constraints-solution-simplifytype.txt
                                              swift::Parser::parseToken(swift::tok, swift::SourceLoc&, swift::Diagnostic const&) (line 643)
                                              – Crash case at this location: stacks/0708-swift-parser-parsetoken.txt
                                              swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 115)
                                              – Crash case at this location: stacks/1539-swift-metatypetype-get.txt
                                              swift::TypeBase::getAnyOptionalObjectType(swift::OptionalTypeKind&) (line 15)
                                              – Crash case at this location: stacks/1415-swift-typebase-getanyoptionalobjecttype.txt
                                              swift::DiagnosticEngine::diagnose(swift::SourceLoc, swift::Diagnostic const&) (line 500)
                                              – Crash case at this location: stacks/0943-swift-diagnosticengine-diagnose.txt
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 599)
                                              – Crash case at this location: stacks/0470-swift-constraints-constraintsystem-simplifyconstraint.txt
                                              void swift::constraints::ConstraintSystem::recordFailureSimplified<swift::Type, swift::Type>(swift::constraints::ConstraintLocator*, swift::constraints::Failure::FailureKind, swift::Type&&, swift::Type&&) (line 692)
                                              – Crash case at this location: stacks/0639-void.txt
                                              swift::Lexer::lexStringLiteral() (line 330)
                                              – Crash case at this location: stacks/1753-swift-lexer-lexstringliteral.txt
                                              swift::StreamPrinter::printText(llvm::StringRef) (line 51)
                                              – Crash case at this location: stacks/1675-swift-streamprinter-printtext.txt
                                              swift::Parser::parseBraceItems(llvm::SmallVectorImpl<swift::ASTNode>&, swift::BraceItemListKind, swift::BraceItemListKind) (line 3673)
                                              – Crash case at this location: stacks/0971-swift-parser-parsebraceitems.txt
                                              swift::ModuleFile::getDecl(swift::Fixnum<31u, unsigned int>, swift::Optional<swift::DeclContext*>) (line 9392)
                                              – Crash case at this location: stacks/1469-swift-modulefile-getdecl.txt
                                              swift::constraints::ConstraintSystem::simplifyType(swift::Type, llvm::SmallPtrSet<swift::TypeVariableType*, 16u>&) (line 90)
                                              – Crash case at this location: stacks/1040-swift-constraints-constraintsystem-simplifytype.txt
                                              swift::constraints::ConstraintSystem::lookupMember(swift::Type, swift::DeclName) (line 436)
                                              – Crash case at this location: stacks/1410-swift-constraints-constraintsystem-lookupmember.txt
                                              swift::TypeAliasDecl::TypeAliasDecl(swift::SourceLoc, swift::Identifier, swift::SourceLoc, swift::TypeLoc, swift::DeclContext*) (line 258)
                                              – Crash case at this location: stacks/1828-swift-typealiasdecl-typealiasdecl.txt
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                          validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                                  swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                                    swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                                    – Crash case at this location: stacks/0709-getselftypeforcontainer.txt
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                  swift::GenericParamList::addNestedArchetypes(swift::ArchetypeType*, llvm::SmallPtrSetImpl<swift::ArchetypeType*>&, llvm::SmallVectorImpl<swift::ArchetypeType*>&) (line 153)
                                                                  – Crash case at this location: stacks/1851-swift-genericparamlist-addnestedarchetypes.txt
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                    swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                                                              swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                                                                swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                                                                – Crash case at this location: stacks/1044-getselftypeforcontainer.txt
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 846)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                                    swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                                      swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                                        std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 785)
                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                            – Crash case at this location: stacks/0875-getselftypeforcontainer.txt
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 13395)
                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                swift::ASTContext::getConformsTo(swift::CanType, swift::ProtocolDecl*) (line 74)
                                                – Crash case at this location: stacks/1656-swift-astcontext-getconformsto.txt
                                                swift::DiagnosticEngine::diagnose(swift::SourceLoc, swift::Diagnostic const&) (line 500)
                                                – Crash case at this location: stacks/0717-swift-diagnosticengine-diagnose.txt
                                                swift::ClangModuleUnit::getAdapterModule() const (line 71)
                                                – Crash case at this location: stacks/0605-swift-clangmoduleunit-getadaptermodule.txt
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                                              validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                                                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                    – Crash case at this location: stacks/0390-getselftypeforcontainer.txt
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                                      swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                                        swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                                        – Crash case at this location: stacks/0729-swift-pattern-foreachvariable.txt
                                                                          swift::ModuleFile::getType(swift::Fixnum<31u, unsigned int>) (line 8359)
                                                                          – Crash case at this location: stacks/1377-swift-modulefile-gettype.txt
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                        swift::ModuleFile::maybeReadGenericParams(swift::DeclContext*, llvm::BitstreamCursor&, swift::GenericParamList*) (line 1910)
                                                                        – Crash case at this location: stacks/1317-swift-modulefile-maybereadgenericparams.txt
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                              swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                  std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 785)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                      – Crash case at this location: stacks/0593-getselftypeforcontainer.txt
                                                        void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                                        – Crash case at this location: stacks/0947-void.txt
                                                        swift::ModuleFile::getType(swift::Fixnum<31u, unsigned int>) (line 8359)
                                                        – Crash case at this location: stacks/1910-swift-modulefile-gettype.txt
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                              – Crash case at this location: stacks/0400-getselftypeforcontainer.txt
                                                swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 200)
                                                – Crash case at this location: stacks/0463-swift-metatypetype-get.txt
                                                swift::AvailabilityAttr::isUnavailable(swift::Decl const*) (line 22)
                                                – Crash case at this location: stacks/0388-swift-availabilityattr-isunavailable.txt
                                                swift::SubstitutedType::get(swift::Type, swift::Type, swift::ASTContext const&) (line 102)
                                                – Crash case at this location: stacks/0772-swift-substitutedtype-get.txt
                                                swift::TypeBase::getCanonicalType() (line 1403)
                                                – Crash case at this location: stacks/1048-swift-typebase-getcanonicaltype.txt
                                                swift::AbstractStorageDecl::makeComputed(swift::SourceLoc, swift::FuncDecl*, swift::FuncDecl*, swift::FuncDecl*, swift::SourceLoc) (line 108)
                                                – Crash case at this location: stacks/1333-swift-abstractstoragedecl-makecomputed.txt
                                                bool swift::Parser::parseIdentifier<>(swift::Identifier&, swift::SourceLoc&, swift::Diag<>) (line 134)
                                                – Crash case at this location: stacks/1509-bool.txt
                                                swift::TypeBase::operator new(unsigned long, swift::ASTContext const&, swift::AllocationArena, unsigned int) (line 92)
                                                – Crash case at this location: stacks/0368-no-stacktrace.txt
                                                swift::Optional<swift::InfixOperatorDecl*> lookupOperatorDeclForName<swift::InfixOperatorDecl>(swift::FileUnit const&, swift::SourceLoc, swift::Identifier, bool, llvm::DenseMap<swift::Identifier, llvm::PointerIntPair<swift::InfixOperatorDecl*, 1u, bool, llvm::PointerLikeTypeTraits<swift::InfixOperatorDecl*> >, llvm::DenseMapInfo<swift::Identifier> > swift::SourceFile::*) (line 1610)
                                                – Crash case at this location: stacks/1512-swift-optional-swift-infixoperatordecl.txt
                                                swift::ValueDecl::setType(swift::Type) (line 37)
                                                – Crash case at this location: stacks/1864-swift-valuedecl-settype.txt
                                                swift::GenericParamList::addNestedArchetypes(swift::ArchetypeType*, llvm::SmallPtrSetImpl<swift::ArchetypeType*>&, llvm::SmallVectorImpl<swift::ArchetypeType*>&) (line 153)
                                                – Crash case at this location: stacks/1435-swift-genericparamlist-addnestedarchetypes.txt
                                                swift::TuplePattern::create(swift::ASTContext&, swift::SourceLoc, llvm::ArrayRef<swift::TuplePatternElt>, swift::SourceLoc, bool, swift::SourceLoc, swift::Optional<bool>) (line 280)
                                                – Crash case at this location: stacks/0521-swift-tuplepattern-create.txt
                                                swift::NominalTypeDecl::computeType() (line 185)
                                                – Crash case at this location: stacks/1037-swift-nominaltypedecl-computetype.txt
                                                swift::constraints::ConstraintGraphScope::~ConstraintGraphScope() (line 57)
                                                – Crash case at this location: stacks/1737-swift-constraints-constraintgraphscope-constraintgraphscope.txt
                                                swift::Parser::parseToken(swift::tok, swift::SourceLoc&, swift::Diagnostic const&) (line 643)
                                                – Crash case at this location: stacks/1440-swift-parser-parsetoken.txt
                                                swift::ArchetypeType::setNestedTypes(swift::ASTContext&, llvm::MutableArrayRef<std::__1::pair<swift::Identifier, llvm::PointerUnion<swift::ArchetypeType*, swift::Type> > >) (line 45)
                                                – Crash case at this location: stacks/0867-swift-archetypetype-setnestedtypes.txt
                                                swift::Parser::parseDeclImport(swift::OptionSet<swift::Parser::ParseDeclFlags, unsigned int>, swift::DeclAttributes&) (line 299)
                                                – Crash case at this location: stacks/1001-swift-parser-parsedeclimport.txt
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6131)
                                            checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                    – Crash case at this location: stacks/0585-getselftypeforcontainer.txt
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                  – Crash case at this location: stacks/0661-getselftypeforcontainer.txt
                                                    swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 107)
                                                    – Crash case at this location: stacks/1873-swift-pattern-foreachvariable.txt
                                                    swift::TypeBase::getTypeVariables(llvm::SmallVectorImpl<swift::TypeVariableType*>&) (line 113)
                                                    – Crash case at this location: stacks/0992-swift-typebase-gettypevariables.txt
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                              swift::constraints::ConstraintSystem::matchFunctionTypes(swift::FunctionType*, swift::FunctionType*, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 881)
                                              – Crash case at this location: stacks/1756-swift-constraints-constraintsystem-matchfunctiontypes.txt
                                              swift::constraints::ConstraintSystem::getConstraintLocator(swift::Expr*, llvm::ArrayRef<swift::constraints::ConstraintLocator::PathElement>, unsigned int) (line 137)
                                              – Crash case at this location: stacks/1852-swift-constraints-constraintsystem-getconstraintlocator.txt
                                              swift::InOutType::get(swift::Type) (line 340)
                                              – Crash case at this location: stacks/1014-swift-inouttype-get.txt
                                              swift::TypeDecl::getDeclaredType() const (line 38)
                                              – Crash case at this location: stacks/1791-swift-typedecl-getdeclaredtype.txt
                                              swift::constraints::ConstraintSystem::simplifyType(swift::Type, llvm::SmallPtrSet<swift::TypeVariableType*, 16u>&) (line 90)
                                              – Crash case at this location: stacks/1371-swift-constraints-constraintsystem-simplifytype.txt
                                              swift::Parser::parseTypeIdentifier() (line 1450)
                                              – Crash case at this location: stacks/1658-swift-parser-parsetypeidentifier.txt
                                              clang::declvisitor::Base<clang::declvisitor::make_const_ptr, (anonymous namespace)::SwiftDeclConverter, swift::Decl*>::Visit(clang::Decl const*) (line 10401)
                                              – Crash case at this location: stacks/0833-clang-declvisitor-base-clang-declvisitor-make-const-ptr.txt
                                              swift::Parser::parseDeclFunc(swift::SourceLoc, swift::StaticSpellingKind, swift::OptionSet<swift::Parser::ParseDeclFlags, unsigned int>, swift::DeclAttributes&) (line 2871)
                                              – Crash case at this location: stacks/1661-swift-parser-parsedeclfunc.txt
                                              swift::Parser::skipSingle() (line 203)
                                              – Crash case at this location: stacks/1938-swift-parser-skipsingle.txt
                                              swift::TypeBase::isExistentialType(llvm::SmallVectorImpl<swift::ProtocolDecl*>&) (line 22)
                                              – Crash case at this location: stacks/1877-swift-typebase-isexistentialtype.txt
                                              swift::constraints::ConstraintGraph::gatherConstraints(swift::TypeVariableType*, llvm::SmallVectorImpl<swift::constraints::Constraint*>&) (line 843)
                                              – Crash case at this location: stacks/0952-swift-constraints-constraintgraph-gatherconstraints.txt
                                              swift::ClangModuleUnit::getImportedModules(llvm::SmallVectorImpl<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >&, swift::Module::ImportFilter) const (line 1576)
                                              – Crash case at this location: stacks/0856-swift-clangmoduleunit-getimportedmodules.txt
                                              swift::DiagnosticEngine::flushActiveDiagnostic() (line 4667)
                                              – Crash case at this location: stacks/0799-e.txt
                                              swift::DeclName::printPretty(llvm::raw_ostream&) const (line 139)
                                              – Crash case at this location: stacks/1517-swift-declname-printpretty.txt
                                              swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 3521)
                                              – Crash case at this location: stacks/0702-swift-constraints-constraintsystem-matchtypes.txt
                                              swift::ModuleFile::getType(swift::Fixnum<31u, unsigned int>) (line 8359)
                                              – Crash case at this location: stacks/0617-swift-modulefile-gettype.txt
                                              swift::Parser::parseExprClosure() (line 1815)
                                              – Crash case at this location: stacks/1861-swift-parser-parseexprclosure.txt
                                              swift::ModuleFile::lookupValue(swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&) (line 1472)
                                              – Crash case at this location: stacks/0806-swift-modulefile-lookupvalue.txt
                                              swift::InFlightDiagnostic swift::DiagnosticEngine::diagnose<>(swift::SourceLoc, swift::Diag<>, swift::detail::PassArgument<>::type) (line 278)
                                              – Crash case at this location: stacks/1400-swift-inflightdiagnostic.txt
                                              swift::Lexer::getLocForEndOfToken(swift::SourceManager const&, swift::SourceLoc) (line 535)
                                              – Crash case at this location: stacks/0841-swift-lexer-getlocforendoftoken.txt
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18426)
                                            (anonymous namespace)::DeclChecker::checkDynamicSelfReturn(swift::FuncDecl*, swift::TypeRepr*, unsigned int) (line 574)
                                              swift::ClangImporter::create(swift::ASTContext&, swift::ClangImporterOptions const&, swift::IRGenOptions const&, swift::DependencyTracker*) (line 6133)
                                              – Crash case at this location: stacks/0600-swift-clangimporter-implementation-mapselectortodeclname.txt
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                          swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                            swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                  swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                    std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                          getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                            swift::AvailabilityAttr::isUnavailable(swift::Decl const*) (line 22)
                                                                            – Crash case at this location: stacks/1776-swift-availabilityattr-isunavailable.txt
                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                                          swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                                            swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                                              std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 785)
                                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                  – Crash case at this location: stacks/1827-getselftypeforcontainer.txt
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6131)
                                                                        checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                              – Crash case at this location: stacks/0723-getselftypeforcontainer.txt
                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                        getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                          llvm::FoldingSet<swift::TupleType>::NodeEquals(llvm::FoldingSetImpl::Node*, llvm::FoldingSetNodeID const&, unsigned int, llvm::FoldingSetNodeID&) const (line 71)
                                                                          – Crash case at this location: stacks/1456-getselftypeforcontainer.txt
                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                    swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                      swift::TypeBase::getCanonicalType() (line 775)
                                                                        swift::TypeBase::getCanonicalType() (line 1403)
                                                                        – Crash case at this location: stacks/0668-swift-typebase-getcanonicaltype.txt
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 13395)
                                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                              – Crash case at this location: stacks/0594-getselftypeforcontainer.txt
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                        swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                          swift::TypeBase::getCanonicalType() (line 775)
                                                            swift::TypeBase::getCanonicalType() (line 1403)
                                                            – Crash case at this location: stacks/0534-swift-typebase-getcanonicaltype.txt
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2552)
                                      swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 194)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                  swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                    std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 785)
                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                        getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                        – Crash case at this location: stacks/1780-getselftypeforcontainer.txt
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                          swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                            swift::TypeBase::getCanonicalType() (line 775)
                                              swift::TypeBase::getCanonicalType() (line 1403)
                                                swift::FunctionType::get(swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 158)
                                                – Crash case at this location: stacks/1939-swift-functiontype-get.txt
                                                swift::constraints::ConstraintGraphScope::~ConstraintGraphScope() (line 57)
                                                – Crash case at this location: stacks/1416-swift-constraints-constraintgraphscope-constraintgraphscope.txt
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                swift::constraints::ConstraintGraph::removeConstraint(swift::constraints::Constraint*) (line 234)
                                                – Crash case at this location: stacks/1324-swift-constraints-constraintgraph-removeconstraint.txt
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                    – Crash case at this location: stacks/0541-resolvetypedecl.txt
                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                      applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                        swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 238)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                  – Crash case at this location: stacks/1893-resolvetypedecl.txt
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                            – Crash case at this location: stacks/0796-getselftypeforcontainer.txt
                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                            swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                              swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                                std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 785)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                    – Crash case at this location: stacks/1831-getselftypeforcontainer.txt
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                      swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                        swift::TypeBase::getCanonicalType() (line 775)
                                                          swift::TypeBase::getCanonicalType() (line 1403)
                                                          – Crash case at this location: stacks/1321-swift-typebase-getcanonicaltype.txt
                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2552)
                                    swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 194)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                        swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                          swift::TypeBase::getCanonicalType() (line 775)
                                            swift::TypeBase::getCanonicalType() (line 1403)
                                            – Crash case at this location: stacks/0546-swift-typebase-getcanonicaltype.txt
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 13395)
                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 688)
                                                – Crash case at this location: stacks/0641-swift-constraints-constraintsystem-solve.txt
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                              swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 200)
                                              – Crash case at this location: stacks/0649-swift-metatypetype-get.txt
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                            – Crash case at this location: stacks/0058-get-self-type-for-container.txt
                                              swift::TypeChecker::getBridgedToObjC(swift::DeclContext const*, swift::Type) (line 120)
                                              – Crash case at this location: stacks/0332-swift-typechecker-getbridgedtoobjc.txt
                                              swift::TypeChecker::callWitness(swift::Expr*, swift::DeclContext*, swift::ProtocolDecl*, swift::ProtocolConformance*, swift::DeclName, llvm::MutableArrayRef<swift::Expr*>, swift::Diag<>) (line 816)
                                              – Crash case at this location: stacks/0321-swift-typechecker-callwitness.txt
                                              swift::constraints::ConstraintGraphScope::~ConstraintGraphScope() (line 57)
                                              – Crash case at this location: stacks/0098-swift-constraints-constraintgraph-addconstraint.txt
                                              swift::ModuleFile::getImportedModules(llvm::SmallVectorImpl<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >&, swift::Module::ImportFilter) (line 356)
                                              – Crash case at this location: stacks/1011-swift-modulefile-getimportedmodules.txt
                                              swift::FunctionType::get(swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 243)
                                              – Crash case at this location: stacks/0900-swift-functiontype-get.txt
                                              swift::Parser::parseDeclFunc(swift::SourceLoc, swift::StaticSpellingKind, swift::OptionSet<swift::Parser::ParseDeclFlags, unsigned int>, swift::DeclAttributes&) (line 2871)
                                              – Crash case at this location: stacks/0329-swift-parser-parsedeclfunc.txt
                                              swift::Lexer::lexStringLiteral() (line 330)
                                              – Crash case at this location: stacks/0945-swift-lexer-lexstringliteral.txt
                                              swift::Parser::parseToken(swift::tok, swift::SourceLoc&, swift::Diagnostic const&) (line 96)
                                              – Crash case at this location: stacks/0779-swift-parser-parsetoken.txt
                                              swift::Lexer::lexImpl() (line 1152)
                                              – Crash case at this location: stacks/1443-swift-lexer-leximpl.txt
                                              swift::Parser::parseDecl(llvm::SmallVectorImpl<swift::Decl*>&, swift::OptionSet<swift::Parser::ParseDeclFlags, unsigned int>) (line 1964)
                                              – Crash case at this location: stacks/1682-swift-parser-parsedecl.txt
                                              swift::Parser::diagnose(swift::Token, swift::Diagnostic) (line 565)
                                              – Crash case at this location: stacks/0869-swift-parser-diagnose.txt
                                              swift::Parser::parseFunctionArguments(llvm::SmallVectorImpl<swift::Identifier>&, llvm::SmallVectorImpl<swift::Pattern*>&, swift::Parser::ParameterContextKind, swift::Parser::DefaultArgumentInfo&) (line 317)
                                              – Crash case at this location: stacks/1898-swift-parser-parsefunctionarguments.txt
                                              swift::ModuleFile::getType(swift::Fixnum<31u, unsigned int>) (line 8359)
                                              – Crash case at this location: stacks/1010-swift-modulefile-gettype.txt
                                              swift::ScopeInfo::addToScope(swift::ValueDecl*, swift::Parser&) (line 239)
                                              – Crash case at this location: stacks/0595-swift-scopeinfo-addtoscope.txt
                                              swift::Type::print(llvm::raw_ostream&, swift::PrintOptions const&) const (line 87)
                                              – Crash case at this location: stacks/0956-swift-type-print.txt
                                              llvm::FoldingSet<swift::TupleType>::NodeEquals(llvm::FoldingSetImpl::Node*, llvm::FoldingSetNodeID const&, unsigned int, llvm::FoldingSetNodeID&) const (line 36)
                                              – Crash case at this location: stacks/0467-llvm-foldingset-swift-tupletype-nodeequals.txt
                                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                              – Crash case at this location: stacks/1135-swift-constraints-constraintsystem-addconstraint.txt
                                              swift::DeclName::printPretty(llvm::raw_ostream&) const (line 139)
                                              – Crash case at this location: stacks/1407-swift-declname-printpretty.txt
                                              swift::DiagnosticEngine::flushActiveDiagnostic() (line 4667)
                                              – Crash case at this location: stacks/0970-swift-diagnosticengine-flushactivediagnostic.txt
                                              swift::Parser::skipSingle() (line 327)
                                              – Crash case at this location: stacks/1395-swift-parser-skipsingle.txt
                                              swift::TuplePattern::create(swift::ASTContext&, swift::SourceLoc, llvm::ArrayRef<swift::TuplePatternElt>, swift::SourceLoc, bool, swift::SourceLoc, swift::Optional<bool>) (line 280)
                                              – Crash case at this location: stacks/1162-swift-tuplepattern-create.txt
                                              swift::PrintingDiagnosticConsumer::handleDiagnostic(swift::SourceManager&, swift::SourceLoc, swift::DiagnosticKind, llvm::StringRef, swift::DiagnosticInfo const&) (line 1288)
                                              – Crash case at this location: stacks/0573-swift-printingdiagnosticconsumer-handlediagnostic.txt
                                              swift::Lexer::lexIdentifier() (line 183)
                                              – Crash case at this location: stacks/0505-swift-lexer-lexidentifier.txt
                                              swift::Parser::parseStmtForCStyle(swift::SourceLoc, swift::LabeledStmtInfo) (line 165)
                                              – Crash case at this location: stacks/0336-swift-parser-parsetoplevelcodedecldelayed.txt
                                              swift::Parser::consumeToken() (line 68)
                                              – Crash case at this location: stacks/1871-swift-parser-consumetoken.txt
                                              swift::TypeBase::isSpecialized() (line 122)
                                              – Crash case at this location: stacks/1822-swift-typebase-isspecialized.txt
                                              void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                              – Crash case at this location: stacks/0559-void.txt
                                              swift::DiagnosticEngine::diagnose(swift::SourceLoc, swift::Diagnostic const&) (line 500)
                                              – Crash case at this location: stacks/0672-swift-diagnosticengine-diagnose.txt
                                              swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 3885)
                                              – Crash case at this location: stacks/1610-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                                              swift::Parser::parseTypeIdentifier() (line 1450)
                                              – Crash case at this location: stacks/1000-swift-parser-parsetypeidentifier.txt
                                              swift::Lexer::getLocForEndOfToken(swift::SourceManager const&, swift::SourceLoc) (line 535)
                                              – Crash case at this location: stacks/0913-no-stacktrace.txt
                                              swift::Parser::parseExprSequence(swift::Diag<>, bool, bool) (line 153)
                                              – Crash case at this location: stacks/0821-b-x.txt
                                              llvm::SmallVectorImpl<swift::DiagnosticArgument>::operator=(llvm::SmallVectorImpl<swift::DiagnosticArgument>&&) (line 285)
                                              – Crash case at this location: stacks/1746-llvm-smallvectorimpl-swift-diagnosticargument-operator.txt
                                              swift::constraints::ConstraintLocator::Profile(llvm::FoldingSetNodeID&, swift::Expr*, llvm::ArrayRef<swift::constraints::ConstraintLocator::PathElement>) (line 46)
                                              – Crash case at this location: stacks/0754-x.txt
                                              swift::constraints::Constraint::create(swift::constraints::ConstraintSystem&, swift::constraints::ConstraintKind, swift::Type, swift::Type, swift::DeclName, swift::constraints::ConstraintLocator*) (line 559)
                                              – Crash case at this location: stacks/0658-swift-constraints-constraint-create.txt
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                          swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                            swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                  swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                    std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                    swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                      swift::TypeBase::getCanonicalType() (line 775)
                                                                        swift::TypeBase::getCanonicalType() (line 1403)
                                                                          swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 133)
                                                                          – Crash case at this location: stacks/0466-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                        getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                          llvm::FoldingSet<swift::BoundGenericType>::NodeEquals(llvm::FoldingSetImpl::Node*, llvm::FoldingSetNodeID const&, unsigned int, llvm::FoldingSetNodeID&) const (line 91)
                                                                          – Crash case at this location: stacks/1809-llvm-foldingset-swift-boundgenerictype-nodeequals.txt
                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                                      swift::TypeAliasDecl::TypeAliasDecl(swift::SourceLoc, swift::Identifier, swift::SourceLoc, swift::TypeLoc, swift::DeclContext*) (line 258)
                                                                                                      – Crash case at this location: stacks/0908-l.txt
                                                  swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                    std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                        getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                        – Crash case at this location: stacks/0540-getselftypeforcontainer.txt
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                          swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                            swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 812)
                                                swift::ArchetypeBuilder::addRequirement(swift::RequirementRepr const&) (line 83)
                                                  swift::ArchetypeBuilder::resolveArchetype(swift::Type) (line 25)
                                                  – Crash case at this location: stacks/1813-swift-archetypebuilder-resolvearchetype.txt
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                          validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                                            swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                              validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                    swift::constraints::Solution::Solution(swift::constraints::Solution&&) (line 319)
                                                                    – Crash case at this location: stacks/1540-swift-constraints-solution-solution.txt
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                    swift::AssociatedTypeDecl::AssociatedTypeDecl(swift::DeclContext*, swift::SourceLoc, swift::Identifier, swift::SourceLoc, swift::LazyMemberLoader*, unsigned long long) (line 322)
                                                                    – Crash case at this location: stacks/1842-swift-associatedtypedecl-associatedtypedecl.txt
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                – Crash case at this location: stacks/0657-getselftypeforcontainer.txt
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 434)
                                                – Crash case at this location: stacks/1062-swift-typechecker-resolvetypeincontext.txt
                                                swift::AvailabilityAttr::isUnavailable(swift::Decl const*) (line 22)
                                                – Crash case at this location: stacks/0678-swift-availabilityattr-isunavailable.txt
                                                swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 173)
                                                – Crash case at this location: stacks/0706-swift-constraints-constraintsystem-matchtypes.txt
                                                swift::StructType::get(swift::StructDecl*, swift::Type, swift::ASTContext const&) (line 211)
                                                – Crash case at this location: stacks/1597-swift-structtype-get.txt
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                              swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                  std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 785)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                      – Crash case at this location: stacks/0688-getselftypeforcontainer.txt
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                                              validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                                                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                                        swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                                          swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                                          – Crash case at this location: stacks/1581-swift-pattern-foreachvariable.txt
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6131)
                                            checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                  – Crash case at this location: stacks/1426-no-stacktrace.txt
                                                    swift::constraints::ConstraintSystem::getConstraintLocator(swift::constraints::ConstraintLocatorBuilder const&) (line 87)
                                                    – Crash case at this location: stacks/1598-swift-constraints-constraintsystem-getconstraintlocator.txt
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                            – Crash case at this location: stacks/0473-getselftypeforcontainer.txt
                                                              swift::constraints::Solution::Solution(swift::constraints::Solution&&) (line 319)
                                                              – Crash case at this location: stacks/0624-swift-constraints-solution-solution.txt
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                        swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                          swift::TypeBase::getCanonicalType() (line 775)
                                            swift::TypeBase::getCanonicalType() (line 1403)
                                            – Crash case at this location: stacks/0435-swift-typebase-getcanonicaltype.txt
                                              swift::ScopeInfo::addToScope(swift::ValueDecl*, swift::Parser&) (line 239)
                                              – Crash case at this location: stacks/1785-swift-scopeinfo-addtoscope.txt
                                              std::__1::__function::__func<swift::TypeBase::getTypeVariables(llvm::SmallVectorImpl<swift::TypeVariableType*>&)::$_1, std::__1::allocator<swift::TypeBase::getTypeVariables(llvm::SmallVectorImpl<swift::TypeVariableType*>&)::$_1>, bool (swift::Type)>::operator()(swift::Type&&) (line 50)
                                              – Crash case at this location: stacks/1434-std-function-func-swift-typebase-gettypevariables.txt
                                              swift::FunctionType::get(swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 243)
                                              – Crash case at this location: stacks/1322-swift-functiontype-get.txt
                                              swift::SourceFile::getCache() const (line 142)
                                              – Crash case at this location: stacks/1771-swift-sourcefile-getcache.txt
                                              swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 3885)
                                              – Crash case at this location: stacks/1352-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 599)
                                              – Crash case at this location: stacks/1038-swift-constraints-constraintsystem-simplifyconstraint.txt
                                              swift::DiagnosticEngine::diagnose(swift::SourceLoc, swift::Diagnostic const&) (line 500)
                                              – Crash case at this location: stacks/0823-no-stacktrace.txt
                                              vtable for (anonymous namespace)::ColoredStream (line 16)
                                              – Crash case at this location: stacks/1709-vtable.txt
                                              swift::ClangModuleUnit::getImportedModules(llvm::SmallVectorImpl<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >&, swift::Module::ImportFilter) const (line 1538)
                                              – Crash case at this location: stacks/1918-swift-clangmoduleunit-getimportedmodules.txt
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 248)
                                              – Crash case at this location: stacks/1865-swift-typechecker-validatetype.txt
                                              swift::constraints::Solution::simplifyType(swift::TypeChecker&, swift::Type) const (line 86)
                                              – Crash case at this location: stacks/1433-swift-constraints-solution-simplifytype.txt
                                              swift::Lexer::lexStringLiteral() (line 330)
                                              – Crash case at this location: stacks/1923-swift-lexer-lexstringliteral.txt
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                      swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                        void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                            swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                              swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                  swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                    swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                      std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                          getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                          – Crash case at this location: stacks/0774-unowned.txt
                                                                            std::__1::__function::__func<swift::constraints::ConstraintSystem::simplifyType(swift::Type, llvm::SmallPtrSet<swift::TypeVariableType*, 16u>&)::$_5, std::__1::allocator<swift::constraints::ConstraintSystem::simplifyType(swift::Type, llvm::SmallPtrSet<swift::TypeVariableType*, 16u>&)::$_5>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 608)
                                                                            – Crash case at this location: stacks/1031-getselftypeforcontainer.txt
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                    – Crash case at this location: stacks/0566-resolvetypedecl.txt
                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                      applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                        swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 238)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                      swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                        swift::TypeBase::getCanonicalType() (line 775)
                                                          swift::TypeBase::getCanonicalType() (line 1403)
                                                          – Crash case at this location: stacks/1553-swift-typebase-getcanonicaltype.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 9436)
            checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19092)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                  swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                  – Crash case at this location: stacks/1816-swift-type-walk.txt
                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                  swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                  – Crash case at this location: stacks/1678-swift-type-walk.txt
                                                    swift::ModuleFile::maybeReadPattern() (line 772)
                                                    – Crash case at this location: stacks/0827-swift-modulefile-maybereadpattern.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2287)
            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 194)
                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 535)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 1288)
                            swift::CompleteGenericTypeResolver::resolveDependentMemberType(swift::Type, swift::DeclContext*, swift::SourceRange, swift::Identifier, swift::SourceLoc) (line 183)
                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                – Crash case at this location: stacks/0365-getselftypeforcontainer.txt
                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                  void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                      – Crash case at this location: stacks/1172-getselftypeforcontainer.txt
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                              swift::Type::walk(swift::TypeWalker&) const (line 75)
                                              – Crash case at this location: stacks/1571-swift-type-walk.txt
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1582)
                                      finalizeGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::DeclContext*, swift::TypeChecker&) (line 522)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                                  – Crash case at this location: stacks/0569-swift-declcontext-lookupqualified.txt
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                        getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 53)
                                                          swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                          – Crash case at this location: stacks/1436-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                  swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 1070)
                                                    swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                    – Crash case at this location: stacks/0412-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 812)
                    swift::ArchetypeBuilder::addRequirement(swift::RequirementRepr const&) (line 56)
                      swift::ArchetypeBuilder::addSameTypeRequirement(swift::Type, swift::SourceLoc, swift::Type) (line 34)
                        swift::ArchetypeBuilder::resolveArchetype(swift::Type) (line 25)
                        – Crash case at this location: stacks/0414-swift-archetypebuilder-resolvearchetype.txt
                    swift::ArchetypeBuilder::addRequirement(swift::RequirementRepr const&) (line 83)
                      swift::ArchetypeBuilder::resolveArchetype(swift::Type) (line 25)
                      – Crash case at this location: stacks/0423-swift-archetypebuilder-resolvearchetype.txt
            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                          swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                            void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                          swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                            swift::TypeBase::getCanonicalType() (line 775)
                                                              swift::TypeBase::getCanonicalType() (line 1403)
                                                              – Crash case at this location: stacks/0858-swift-typebase-getcanonicaltype.txt
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1582)
                                finalizeGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::DeclContext*, swift::TypeChecker&) (line 522)
                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                            – Crash case at this location: stacks/1182-swift-declcontext-lookupqualified.txt
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                                  applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                                    swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 750)
                                                      swift::TypeChecker::checkSubstitutions(llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, llvm::DenseMap<swift::SubstitutableType*, llvm::SmallVector<swift::ProtocolConformance*, 2u>, llvm::DenseMapInfo<swift::SubstitutableType*> >&, swift::DeclContext*, swift::SourceLoc, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >*) (line 300)
                                                      – Crash case at this location: stacks/1634-swift-typechecker-checksubstitutions.txt
                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                    swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                              swift::GenericTypeParamDecl::GenericTypeParamDecl(swift::DeclContext*, swift::Identifier, swift::SourceLoc, unsigned int, unsigned int) (line 301)
                                                              – Crash case at this location: stacks/1576-swift-generictypeparamdecl-generictypeparamdecl.txt
                                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                        swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                          swift::TypeBase::getCanonicalType() (line 775)
                                                            swift::TypeBase::getCanonicalType() (line 1403)
                                                              swift::TypeBase::isEqual(swift::Type) (line 26)
                                                              – Crash case at this location: stacks/0677-swift-typebase-isequal.txt
                                                              llvm::FoldingSet<swift::TupleType>::NodeEquals(llvm::FoldingSetImpl::Node*, llvm::FoldingSetNodeID const&, unsigned int, llvm::FoldingSetNodeID&) const (line 71)
                                                              – Crash case at this location: stacks/1906-llvm-foldingset-swift-tupletype-nodeequals.txt
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                              validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                    swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                      swift::Expr::walk(swift::ASTWalker&) (line 76)
                                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                            swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                                    – Crash case at this location: stacks/1590-resolvetypedecl.txt
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                              swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                  swift::ClangModuleUnit::getAdapterModule() const (line 71)
                                                                  – Crash case at this location: stacks/0655-swift-clangmoduleunit-getadaptermodule.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6018)
            void checkCircularity<swift::ProtocolDecl>(swift::TypeChecker&, swift::ProtocolDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::ProtocolDecl*>&) (line 200)
              void checkCircularity<swift::ProtocolDecl>(swift::TypeChecker&, swift::ProtocolDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::ProtocolDecl*>&) (line 200)
                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                – Crash case at this location: stacks/0394-void.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 10732)
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 1844)
              swift::TypeChecker::coercePatternToType(swift::Pattern*&, swift::DeclContext*, swift::Type, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 2019)
              – Crash case at this location: stacks/0724-swift-typechecker-coercepatterntotype.txt
              (anonymous namespace)::DeclChecker::checkUnsupportedNestedGeneric(swift::NominalTypeDecl*) (line 413)
                swift::DiagnosticEngine::flushActiveDiagnostic() (line 4452)
                  formatDiagnosticText(llvm::StringRef, llvm::ArrayRef<swift::DiagnosticArgument>, llvm::raw_ostream&) (line 1657)
                    swift::DeclName::printPretty(llvm::raw_ostream&) const (line 60)
                      llvm::raw_fd_ostream::write_impl(char const*, unsigned long) (line 89)
                      – Crash case at this location: stacks/0396-llvm-raw-fd-ostream-write-impl.txt
                      NaNL (line 98506)
                      – Crash case at this location: stacks/0452-nanl.txt
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 5482)
                      – Crash case at this location: stacks/0817-swift-typechecker-checkinheritanceclause.txt
                      swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 251)
                      – Crash case at this location: stacks/0260-swift-declname-printpretty.txt
              swift::ObjCAttr::createUnnamedImplicit(swift::ASTContext&) (line 68)
              – Crash case at this location: stacks/0333-swift-objcattr-createunnamedimplicit.txt
              swift::SourceManager::addNewSourceBuffer(llvm::MemoryBuffer*) (line 288)
              – Crash case at this location: stacks/0703-swift-sourcemanager-addnewsourcebuffer.txt
              swift::DeclName::DeclName(swift::ASTContext&, swift::Identifier, llvm::ArrayRef<swift::Identifier>) (line 423)
              – Crash case at this location: stacks/0690-swift-declname-declname.txt
              std::__1::__function::__func<setBoundVarsTypeError(swift::Pattern*, swift::ASTContext&)::$_5, std::__1::allocator<setBoundVarsTypeError(swift::Pattern*, swift::ASTContext&)::$_5>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 31)
              – Crash case at this location: stacks/0901-ab.txt
              llvm::FoldingSetImpl::FindNodeOrInsertPos(llvm::FoldingSetNodeID const&, void*&) (line 175)
              – Crash case at this location: stacks/0450-llvm-foldingsetimpl-findnodeorinsertpos.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2274)
            – Crash case at this location: stacks/1525-swift-astvisitor.txt
              (anonymous namespace)::DeclChecker::checkUnsupportedNestedGeneric(swift::NominalTypeDecl*) (line 413)
                swift::DiagnosticEngine::flushActiveDiagnostic() (line 4452)
                  formatDiagnosticText(llvm::StringRef, llvm::ArrayRef<swift::DiagnosticArgument>, llvm::raw_ostream&) (line 1657)
                    swift::DeclName::printPretty(llvm::raw_ostream&) const (line 60)
                      llvm::PrettyStackTraceEntry::~PrettyStackTraceEntry() (line 34)
                      – Crash case at this location: stacks/0392-llvm-prettystacktraceentry-prettystacktraceentry.txt
                      swift::Lexer::lexIdentifier() (line 2722)
                      – Crash case at this location: stacks/0424-no-stacktrace.txt
              swift::isPlatformActive(swift::PlatformKind, swift::LangOptions&) (line 138)
              – Crash case at this location: stacks/0816-swift-isplatformactive.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 441)
                                      (anonymous namespace)::DeclChecker::visitAssociatedTypeDecl(swift::AssociatedTypeDecl*) (line 102)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3178)
                                                    swift::NominalTypeDecl::lookupDirect(swift::DeclName) (line 45)
                                                      swift::ExtensionDecl::getMembers(bool) const (line 21)
                                                        swift::IterableDeclContext::loadAllMembers() const (line 102)
                                                          swift::ClangImporter::Implementation::loadAllMembers(swift::Decl const*, unsigned long long, bool*) (line 2951)
                                                            (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool, swift::ObjCSelector, swift::DeclName, llvm::ArrayRef<clang::ParmVarDecl const*>, bool, bool&) (line 1498)
                                                            – Crash case at this location: stacks/0433-no-stacktrace.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 629)
              (anonymous namespace)::DeclChecker::checkUnsupportedNestedGeneric(swift::NominalTypeDecl*) (line 413)
                swift::DiagnosticEngine::flushActiveDiagnostic() (line 4452)
                  formatDiagnosticText(llvm::StringRef, llvm::ArrayRef<swift::DiagnosticArgument>, llvm::raw_ostream&) (line 1657)
                    swift::DeclName::printPretty(llvm::raw_ostream&) const (line 60)
                      vtable for (anonymous namespace)::ColoredStream (line 16)
                      – Crash case at this location: stacks/0429-vtable.txt
                      swift::Type::print(llvm::raw_ostream&, swift::PrintOptions const&) const (line 87)
                      – Crash case at this location: stacks/1944-swift-type-print.txt
                      swift::TypeBase::isExistentialType(llvm::SmallVectorImpl<swift::ProtocolDecl*>&) (line 22)
                      – Crash case at this location: stacks/0968-swift-typebase-isexistentialtype.txt
              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 248)
              – Crash case at this location: stacks/0693-swift-typechecker-validatetype.txt
              swift::TypeBase::isExistentialType(llvm::SmallVectorImpl<swift::ProtocolDecl*>&) (line 22)
              – Crash case at this location: stacks/0789-swift-typebase-isexistentialtype.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                      validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                  swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                    void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                        getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                          swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 200)
                                                                          – Crash case at this location: stacks/1370-swift-metatypetype-get.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2287)
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                      validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                        swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                          swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                            swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                              swift::Expr::walk(swift::ASTWalker&) (line 76)
                                                (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                                    (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                                          swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                                                swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 600)
                                                                  swift::TypeChecker::lookupConstructors(swift::Type, swift::DeclContext*) (line 34)
                                                                    swift::TypeChecker::lookupMember(swift::Type, swift::DeclName, swift::DeclContext*, bool) (line 112)
                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3148)
                                                                        swift::TypeChecker::resolveImplicitConstructors(swift::NominalTypeDecl*) (line 38)
                                                                          swift::TypeChecker::addImplicitConstructors(swift::NominalTypeDecl*, llvm::SmallVectorImpl<swift::Decl*>&) (line 912)
                                                                            swift::TypeChecker::defineDefaultConstructor(swift::NominalTypeDecl*) (line 259)
                                                                              swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                                              – Crash case at this location: stacks/1916-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                  swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 852)
                                                    swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                    – Crash case at this location: stacks/0844-no-stacktrace.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 9408)
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2287)
                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                      swift::ModuleFile::getDecl(swift::Fixnum<31u, unsigned int>, swift::Optional<swift::DeclContext*>) (line 9392)
                                      – Crash case at this location: stacks/1803-swift-modulefile-getdecl.txt
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                              swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                  swift::ModuleFile::resolveCrossReference(swift::Module*, unsigned int) (line 3891)
                                                  – Crash case at this location: stacks/1006-swift-modulefile-resolvecrossreference.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2695)
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5734)
                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                              swift::Pattern::operator new(unsigned long, swift::ASTContext&) (line 78)
                              – Crash case at this location: stacks/1695-swift-pattern-operator.txt
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                  swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                    swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                      swift::Expr::walk(swift::ASTWalker&) (line 53)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3458)
                            (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                  swift::ModuleFile::getType(swift::Fixnum<31u, unsigned int>) (line 8359)
                                  – Crash case at this location: stacks/1875-swift-modulefile-gettype.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 1857)
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3178)
                              swift::NominalTypeDecl::lookupDirect(swift::DeclName) (line 45)
                                swift::ExtensionDecl::getMembers(bool) const (line 21)
                                  swift::IterableDeclContext::loadAllMembers() const (line 102)
                                    swift::ClangImporter::Implementation::loadAllMembers(swift::Decl const*, unsigned long long, bool*) (line 2951)
                                      (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool, swift::ObjCSelector, swift::DeclName, llvm::ArrayRef<clang::ParmVarDecl const*>, bool, bool&) (line 1498)
                                      – Crash case at this location: stacks/0522-no-stacktrace.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                        swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                          void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                    swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                        swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                          swift::TypeBase::getCanonicalType() (line 775)
                                                                            swift::TypeBase::getCanonicalType() (line 1403)
                                                                            – Crash case at this location: stacks/0686-swift-typebase-getcanonicaltype.txt
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                          swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                            swift::TypeBase::getCanonicalType() (line 775)
                                              swift::TypeBase::getCanonicalType() (line 1403)
                                                swift::ModuleFile::getType(swift::Fixnum<31u, unsigned int>) (line 8359)
                                                – Crash case at this location: stacks/1700-swift-modulefile-gettype.txt
                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                  swift::ValueDecl::getInterfaceType() const (line 50)
                                                  – Crash case at this location: stacks/1373-swift-valuedecl-getinterfacetype.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
              validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                    swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                      swift::Expr::walk(swift::ASTWalker&) (line 53)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3502)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 9064)
                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                  swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 7321)
                                    swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                      swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                          swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                            swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 626)
                                            – Crash case at this location: stacks/0760-swift-constraints-constraintsystem-gettypeofmemberreference.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6591)
                          (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                            swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 5482)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                        swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                          void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                    swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                swift::GenericSignature::get(llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>) (line 324)
                                                                                – Crash case at this location: stacks/1697-swift-genericsignature-get.txt
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                    swift::Expr::walk(swift::ASTWalker&) (line 53)
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1341)
                        (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3178)
                              swift::NominalTypeDecl::lookupDirect(swift::DeclName) (line 45)
                                swift::ExtensionDecl::getMembers(bool) const (line 21)
                                  swift::IterableDeclContext::loadAllMembers() const (line 102)
                                    swift::ClangImporter::Implementation::loadAllMembers(swift::Decl const*, unsigned long long, bool*) (line 2951)
                                      (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool, swift::ObjCSelector, swift::DeclName, llvm::ArrayRef<clang::ParmVarDecl const*>, bool, bool&) (line 1498)
                                      – Crash case at this location: stacks/0581-no-stacktrace.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2099)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3914)
                          (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                  swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                    swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                    – Crash case at this location: stacks/1698-swift-type-walk.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1009)
                          (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                              swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                          swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                            swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                              std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                  – Crash case at this location: stacks/1754-getselftypeforcontainer.txt
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1000)
                    swift::constraints::ConstraintSystem::salvage(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::Expr*, bool) (line 817)
                      swift::constraints::ConstraintSystem::diagnoseFailureFromConstraints(swift::Expr*) (line 924)
                        getBoundTypesFromConstraint(swift::constraints::ConstraintSystem*, swift::Expr*, swift::constraints::Constraint*) (line 112)
                          swift::TypeBase::isEqual(swift::Type) (line 26)
                          – Crash case at this location: stacks/1325-swift-typebase-isequal.txt
              validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                          swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                            existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                                  applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                                    swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 750)
                                                      swift::TypeChecker::checkSubstitutions(llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, llvm::DenseMap<swift::SubstitutableType*, llvm::SmallVector<swift::ProtocolConformance*, 2u>, llvm::DenseMapInfo<swift::SubstitutableType*> >&, swift::DeclContext*, swift::SourceLoc, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >*) (line 300)
                                                      – Crash case at this location: stacks/1454-swift-typechecker-checksubstitutions.txt
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3178)
                                swift::NominalTypeDecl::lookupDirect(swift::DeclName) (line 45)
                                  swift::ExtensionDecl::getMembers(bool) const (line 21)
                                    swift::IterableDeclContext::loadAllMembers() const (line 102)
                                      swift::ClangImporter::Implementation::loadAllMembers(swift::Decl const*, unsigned long long, bool*) (line 2951)
                                        (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool, swift::ObjCSelector, swift::DeclName, llvm::ArrayRef<clang::ParmVarDecl const*>, bool, bool&) (line 1498)
                                        – Crash case at this location: stacks/0448-no-stacktrace.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
              swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 5671)
                  addAccessorsToStoredVar(swift::AbstractStorageDecl*, swift::TypeChecker&) (line 617)
                    addMaterializeForSet(swift::AbstractStorageDecl*, swift::TypeChecker&) (line 1215)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 832)
                        checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 365)
                          swift::NominalTypeDecl::lookupDirect(swift::DeclName) (line 45)
                            swift::ExtensionDecl::getMembers(bool) const (line 21)
                              swift::IterableDeclContext::loadAllMembers() const (line 102)
                                swift::ClangImporter::Implementation::loadAllMembers(swift::Decl const*, unsigned long long, bool*) (line 2951)
                                  (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool, swift::ObjCSelector, swift::DeclName, llvm::ArrayRef<clang::ParmVarDecl const*>, bool, bool&) (line 1498)
                                  – Crash case at this location: stacks/1097-no-stacktrace.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5734)
              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3178)
                          swift::NominalTypeDecl::lookupDirect(swift::DeclName) (line 45)
                            swift::ExtensionDecl::getMembers(bool) const (line 21)
                              swift::IterableDeclContext::loadAllMembers() const (line 102)
                                swift::ClangImporter::Implementation::loadAllMembers(swift::Decl const*, unsigned long long, bool*) (line 2951)
                                  (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool, swift::ObjCSelector, swift::DeclName, llvm::ArrayRef<clang::ParmVarDecl const*>, bool, bool&) (line 1498)
                                  – Crash case at this location: stacks/0383-no-stacktrace.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 569)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3178)
                                swift::NominalTypeDecl::lookupDirect(swift::DeclName) (line 45)
                                  swift::ExtensionDecl::getMembers(bool) const (line 21)
                                    swift::IterableDeclContext::loadAllMembers() const (line 102)
                                      swift::ClangImporter::Implementation::loadAllMembers(swift::Decl const*, unsigned long long, bool*) (line 2951)
                                        (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool, swift::ObjCSelector, swift::DeclName, llvm::ArrayRef<clang::ParmVarDecl const*>, bool, bool&) (line 1498)
                                        – Crash case at this location: stacks/1079-no-stacktrace.txt
                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                              swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                swift::GenericSignature::get(llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>) (line 324)
                                                – Crash case at this location: stacks/1052-swift-genericsignature-get.txt
                                                swift::GenericFunctionType::get(swift::GenericSignature*, swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 438)
                                                – Crash case at this location: stacks/0755-swift-genericfunctiontype-get.txt
                                                clang::declvisitor::Base<clang::declvisitor::make_const_ptr, (anonymous namespace)::SwiftDeclConverter, swift::Decl*>::Visit(clang::Decl const*) (line 3076)
                                                – Crash case at this location: stacks/1375-clang-declvisitor-base-clang-declvisitor-make-const-ptr.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 13583)
              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 173)
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                      validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3178)
                                    swift::NominalTypeDecl::lookupDirect(swift::DeclName) (line 45)
                                      swift::ExtensionDecl::getMembers(bool) const (line 21)
                                        swift::IterableDeclContext::loadAllMembers() const (line 102)
                                          swift::ClangImporter::Implementation::loadAllMembers(swift::Decl const*, unsigned long long, bool*) (line 2951)
                                            (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool, swift::ObjCSelector, swift::DeclName, llvm::ArrayRef<clang::ParmVarDecl const*>, bool, bool&) (line 1498)
                                            – Crash case at this location: stacks/0548-no-stacktrace.txt
                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3178)
                                  swift::NominalTypeDecl::lookupDirect(swift::DeclName) (line 45)
                                    swift::ExtensionDecl::getMembers(bool) const (line 21)
                                      swift::IterableDeclContext::loadAllMembers() const (line 102)
                                        swift::ClangImporter::Implementation::loadAllMembers(swift::Decl const*, unsigned long long, bool*) (line 1486)
                                          swift::ClangImporter::Implementation::importDeclAndCacheImpl(clang::NamedDecl const*, bool) (line 226)
                                            swift::ClangImporter::Implementation::importDeclImpl(clang::NamedDecl const*, bool&, bool&) (line 316)
                                              clang::declvisitor::Base<clang::declvisitor::make_const_ptr, (anonymous namespace)::SwiftDeclConverter, swift::Decl*>::Visit(clang::Decl const*) (line 3076)
                                                (anonymous namespace)::SwiftDeclConverter::VisitObjCMethodDecl(clang::ObjCMethodDecl const*, swift::DeclContext*, bool) (line 94)
                                                  (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool) (line 1142)
                                                    (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool, swift::ObjCSelector, swift::DeclName, llvm::ArrayRef<clang::ParmVarDecl const*>, bool, bool&) (line 1328)
                                                      swift::NominalTypeDecl::lookupDirect(swift::DeclName) (line 45)
                                                        swift::ExtensionDecl::getMembers(bool) const (line 21)
                                                          swift::IterableDeclContext::loadAllMembers() const (line 102)
                                                            swift::ClangImporter::Implementation::loadAllMembers(swift::Decl const*, unsigned long long, bool*) (line 1486)
                                                              swift::ClangImporter::Implementation::importDeclAndCacheImpl(clang::NamedDecl const*, bool) (line 226)
                                                                swift::ClangImporter::Implementation::importDeclImpl(clang::NamedDecl const*, bool&, bool&) (line 316)
                                                                  clang::declvisitor::Base<clang::declvisitor::make_const_ptr, (anonymous namespace)::SwiftDeclConverter, swift::Decl*>::Visit(clang::Decl const*) (line 3076)
                                                                    (anonymous namespace)::SwiftDeclConverter::VisitObjCMethodDecl(clang::ObjCMethodDecl const*, swift::DeclContext*, bool) (line 94)
                                                                      (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool) (line 1142)
                                                                        (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool, swift::ObjCSelector, swift::DeclName, llvm::ArrayRef<clang::ParmVarDecl const*>, bool, bool&) (line 1328)
                                                                          swift::NominalTypeDecl::lookupDirect(swift::DeclName) (line 45)
                                                                            swift::ExtensionDecl::getMembers(bool) const (line 21)
                                                                              swift::IterableDeclContext::loadAllMembers() const (line 102)
                                                                                swift::ClangImporter::Implementation::loadAllMembers(swift::Decl const*, unsigned long long, bool*) (line 2951)
                                                                                  (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool, swift::ObjCSelector, swift::DeclName, llvm::ArrayRef<clang::ParmVarDecl const*>, bool, bool&) (line 1328)
                                                                                    swift::NominalTypeDecl::lookupDirect(swift::DeclName) (line 45)
                                                                                      swift::ExtensionDecl::getMembers(bool) const (line 21)
                                                                                        swift::IterableDeclContext::loadAllMembers() const (line 102)
                                                                                          swift::ClangImporter::Implementation::loadAllMembers(swift::Decl const*, unsigned long long, bool*) (line 1486)
                                                                                            swift::ClangImporter::Implementation::importDeclAndCacheImpl(clang::NamedDecl const*, bool) (line 226)
                                                                                              swift::ClangImporter::Implementation::importDeclImpl(clang::NamedDecl const*, bool&, bool&) (line 316)
                                                                                                clang::declvisitor::Base<clang::declvisitor::make_const_ptr, (anonymous namespace)::SwiftDeclConverter, swift::Decl*>::Visit(clang::Decl const*) (line 3130)
                                                                                                  (anonymous namespace)::SwiftDeclConverter::VisitObjCPropertyDecl(clang::ObjCPropertyDecl const*, swift::DeclContext*) (line 183)
                                                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3178)
                                                                                                      swift::NominalTypeDecl::lookupDirect(swift::DeclName) (line 79)
                                                                                                        swift::NominalTypeDecl::getMembers(bool) const (line 28)
                                                                                                          swift::IterableDeclContext::loadAllMembers() const (line 102)
                                                                                                            swift::ClangImporter::Implementation::loadAllMembers(swift::Decl const*, unsigned long long, bool*) (line 5322)
                                                                                                              (anonymous namespace)::SwiftDeclConverter::importInheritedConstructors(swift::ClassDecl*, llvm::SmallVectorImpl<swift::Decl*>&)::'lambda'(swift::IteratorRange<swift::DeclIterator>, swift::Optional<swift::CtorInitializerKind>)::operator()(swift::IteratorRange<swift::DeclIterator>, swift::Optional<swift::CtorInitializerKind>) const (line 521)
                                                                                                                (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool) (line 1040)
                                                                                                                  (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool, swift::ObjCSelector, swift::DeclName, llvm::ArrayRef<clang::ParmVarDecl const*>, bool, bool&) (line 1476)
                                                                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 13583)
                                                                                                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                                                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                                                                              swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                                                                swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                                                                – Crash case at this location: stacks/0704-swift-type-walk.txt
                                        swift::ClangImporter::Implementation::loadAllMembers(swift::Decl const*, unsigned long long, bool*) (line 2951)
                                          (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool, swift::ObjCSelector, swift::DeclName, llvm::ArrayRef<clang::ParmVarDecl const*>, bool, bool&) (line 1498)
                                          – Crash case at this location: stacks/0514-no-stacktrace.txt
                                          (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool, swift::ObjCSelector, swift::DeclName, llvm::ArrayRef<clang::ParmVarDecl const*>, bool, bool&) (line 1328)
                                            swift::NominalTypeDecl::lookupDirect(swift::DeclName) (line 45)
                                              swift::ExtensionDecl::getMembers(bool) const (line 21)
                                                swift::IterableDeclContext::loadAllMembers() const (line 102)
                                                  swift::ClangImporter::Implementation::loadAllMembers(swift::Decl const*, unsigned long long, bool*) (line 1486)
                                                    swift::ClangImporter::Implementation::importDeclAndCacheImpl(clang::NamedDecl const*, bool) (line 226)
                                                      swift::ClangImporter::Implementation::importDeclImpl(clang::NamedDecl const*, bool&, bool&) (line 316)
                                                        clang::declvisitor::Base<clang::declvisitor::make_const_ptr, (anonymous namespace)::SwiftDeclConverter, swift::Decl*>::Visit(clang::Decl const*) (line 3130)
                                                          (anonymous namespace)::SwiftDeclConverter::VisitObjCPropertyDecl(clang::ObjCPropertyDecl const*, swift::DeclContext*) (line 183)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3178)
                                                              swift::NominalTypeDecl::lookupDirect(swift::DeclName) (line 79)
                                                                swift::NominalTypeDecl::getMembers(bool) const (line 28)
                                                                  swift::IterableDeclContext::loadAllMembers() const (line 102)
                                                                    swift::ClangImporter::Implementation::loadAllMembers(swift::Decl const*, unsigned long long, bool*) (line 1486)
                                                                      swift::ClangImporter::Implementation::importDeclAndCacheImpl(clang::NamedDecl const*, bool) (line 226)
                                                                        swift::ClangImporter::Implementation::importDeclImpl(clang::NamedDecl const*, bool&, bool&) (line 316)
                                                                          clang::declvisitor::Base<clang::declvisitor::make_const_ptr, (anonymous namespace)::SwiftDeclConverter, swift::Decl*>::Visit(clang::Decl const*) (line 3076)
                                                                            (anonymous namespace)::SwiftDeclConverter::VisitObjCMethodDecl(clang::ObjCMethodDecl const*, swift::DeclContext*, bool) (line 94)
                                                                              (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool) (line 1142)
                                                                                (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool, swift::ObjCSelector, swift::DeclName, llvm::ArrayRef<clang::ParmVarDecl const*>, bool, bool&) (line 1476)
                                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 13583)
                                                                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                              swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                              – Crash case at this location: stacks/0287-clang-astcontext-getobjcinterfacetype.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 21588)
              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3178)
                                swift::NominalTypeDecl::lookupDirect(swift::DeclName) (line 45)
                                  swift::ExtensionDecl::getMembers(bool) const (line 21)
                                    swift::IterableDeclContext::loadAllMembers() const (line 102)
                                      swift::ClangImporter::Implementation::loadAllMembers(swift::Decl const*, unsigned long long, bool*) (line 2951)
                                        (anonymous namespace)::SwiftDeclConverter::importConstructor(clang::ObjCMethodDecl const*, swift::DeclContext*, bool, swift::Optional<swift::CtorInitializerKind>, bool, swift::ObjCSelector, swift::DeclName, llvm::ArrayRef<clang::ParmVarDecl const*>, bool, bool&) (line 1498)
                                        – Crash case at this location: stacks/0239-swiftdeclconverter-importconstructor.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 1857)
            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                              – Crash case at this location: stacks/0444-resolvetypedecl.txt
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                  void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                                – Crash case at this location: stacks/1104-getselftypeforcontainer.txt
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                    – Crash case at this location: stacks/0345-vtable.txt
                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 812)
                    swift::ArchetypeBuilder::addRequirement(swift::RequirementRepr const&) (line 56)
                      swift::ArchetypeBuilder::addSameTypeRequirement(swift::Type, swift::SourceLoc, swift::Type) (line 34)
                        swift::ArchetypeBuilder::resolveArchetype(swift::Type) (line 25)
                          llvm::raw_ostream::write(char const*, unsigned long) (line 412)
                          – Crash case at this location: stacks/1491-llvm-raw-ostream-write.txt
                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 635)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                              applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 750)
                                  swift::TypeChecker::checkSubstitutions(llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, llvm::DenseMap<swift::SubstitutableType*, llvm::SmallVector<swift::ProtocolConformance*, 2u>, llvm::DenseMapInfo<swift::SubstitutableType*> >&, swift::DeclContext*, swift::SourceLoc, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >*) (line 300)
                                  – Crash case at this location: stacks/0990-swift-typechecker-checksubstitutions.txt
                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                            – Crash case at this location: stacks/1591-resolvetypedecl.txt
            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1582)
              finalizeGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::DeclContext*, swift::TypeChecker&) (line 522)
                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                          – Crash case at this location: stacks/0115-swift-declcontext-lookupqualified.txt
            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                        resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                        – Crash case at this location: stacks/0430-resolvetypedecl.txt
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                          swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                            void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                swift::GenericFunctionType::get(swift::GenericSignature*, swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 438)
                                                                – Crash case at this location: stacks/1638-swift-genericfunctiontype-get.txt
                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                                    validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                                      swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                        swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                                                          swift::Expr::walk(swift::ASTWalker&) (line 26)
                                                            (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                          swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                            swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                              std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                                                                                                            swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                                                                              swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                                                                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                                                                                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                                                                                                                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                                                                                                                              swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 852)
                                                                                                                                                                swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                                                                                                                                – Crash case at this location: stacks/1237-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                                applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                                  swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 750)
                                                    swift::TypeChecker::checkSubstitutions(llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, llvm::DenseMap<swift::SubstitutableType*, llvm::SmallVector<swift::ProtocolConformance*, 2u>, llvm::DenseMapInfo<swift::SubstitutableType*> >&, swift::DeclContext*, swift::SourceLoc, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >*) (line 300)
                                                    – Crash case at this location: stacks/1344-swift-typechecker-checksubstitutions.txt
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19092)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                        resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                        – Crash case at this location: stacks/0974-resolvetypedecl.txt
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                    swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                        swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                          swift::TypeBase::getCanonicalType() (line 775)
                                                            swift::TypeBase::getCanonicalType() (line 1403)
                                                              swift::ModuleFile::maybeReadGenericParams(swift::DeclContext*, llvm::BitstreamCursor&, swift::GenericParamList*) (line 1910)
                                                              – Crash case at this location: stacks/1670-swift-modulefile-maybereadgenericparams.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2193)
            checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                              swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                swift::ArchetypeType::setNestedTypes(swift::ASTContext&, llvm::MutableArrayRef<std::__1::pair<swift::Identifier, llvm::PointerUnion<swift::ArchetypeType*, swift::Type> > >) (line 45)
                                                                                – Crash case at this location: stacks/0810-a-cd-x.txt
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                  swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                    swift::ModuleFile::configureStorage(swift::AbstractStorageDecl*, unsigned int, swift::Fixnum<31u, unsigned int>, swift::Fixnum<31u, unsigned int>, swift::Fixnum<31u, unsigned int>, swift::Fixnum<31u, unsigned int>, swift::Fixnum<31u, unsigned int>, swift::Fixnum<31u, unsigned int>, swift::Fixnum<31u, unsigned int>) (line 155)
                                                    – Crash case at this location: stacks/1472-swift-modulefile-configurestorage.txt
                                                    swift::constraints::ConstraintSystem::getConstraintLocator(swift::Expr*, llvm::ArrayRef<swift::constraints::ConstraintLocator::PathElement>, unsigned int) (line 137)
                                                    – Crash case at this location: stacks/1032-no-stacktrace.txt
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                              swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                llvm::BitstreamCursor::ReadVBR(unsigned int) (line 142)
                                                                                – Crash case at this location: stacks/0721-no-stacktrace.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2526)
            void checkCircularity<swift::ClassDecl>(swift::TypeChecker&, swift::ClassDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::ClassDecl*>&) (line 132)
              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                              llvm::OnDiskChainedHashTable<swift::ModuleFile::DeclTableInfo>::find(swift::Identifier const&, swift::ModuleFile::DeclTableInfo*) (line 47)
                              – Crash case at this location: stacks/0500-llvm-ondiskchainedhashtable-swift-modulefile-decltableinfo-find.txt
                              llvm::FoldingSet<swift::TupleType>::NodeEquals(llvm::FoldingSetImpl::Node*, llvm::FoldingSetNodeID const&, unsigned int, llvm::FoldingSetNodeID&) const (line 71)
                              – Crash case at this location: stacks/1699-llvm-foldingset-swift-tupletype-nodeequals.txt
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                          – Crash case at this location: stacks/0227-swift-clangimporter-implementation-getknownobjcmethod.txt
                            std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 239)
                            – Crash case at this location: stacks/1177-std-function-func-swift-type-subst.txt
                            swift::GenericFunctionType::get(swift::GenericSignature*, swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 438)
                            – Crash case at this location: stacks/1761-swift-genericfunctiontype-get.txt
                            llvm::TinyPtrVector<swift::ValueDecl*>::push_back(swift::ValueDecl*) (line 58)
                            – Crash case at this location: stacks/1724-llvm-tinyptrvector-swift-valuedecl-push-back.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2695)
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18426)
              (anonymous namespace)::DeclChecker::checkDynamicSelfReturn(swift::FuncDecl*, swift::TypeRepr*, unsigned int) (line 268)
                swift::Lexer::getLocForEndOfToken(swift::SourceManager const&, swift::SourceLoc) (line 535)
                – Crash case at this location: stacks/1074-swift-lexer-getlocforendoftoken.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                          swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                            existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 200)
                                                                – Crash case at this location: stacks/1874-swift-metatypetype-get.txt
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                    validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 80)
                                – Crash case at this location: stacks/0854-swift-typechecker-validatedecl.txt
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                              swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                  swift::ModuleFile::lookupValue(swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&) (line 1472)
                                                  – Crash case at this location: stacks/1392-swift-modulefile-lookupvalue.txt
                                                  swift::constraints::ConstraintGraph::removeConstraint(swift::constraints::Constraint*) (line 145)
                                                  – Crash case at this location: stacks/1535-swift-constraints-constraintgraph-removeconstraint.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 642)
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                        getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 53)
                                          swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                          – Crash case at this location: stacks/0701-swift-nominaltypedecl-getdeclaredtypeincontext.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19092)
              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                          swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                            void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                          swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                            swift::TypeBase::getCanonicalType() (line 775)
                                                              swift::TypeBase::getCanonicalType() (line 1403)
                                                                swift::ModuleFile::getDecl(swift::Fixnum<31u, unsigned int>, swift::Optional<swift::DeclContext*>) (line 7248)
                                                                – Crash case at this location: stacks/1403-swift-modulefile-getdecl.txt
                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                        swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                          void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                    swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                              swift::ModuleFile::getDecl(swift::Fixnum<31u, unsigned int>, swift::Optional<swift::DeclContext*>) (line 7248)
                                                              – Crash case at this location: stacks/1449-swift-modulefile-getdecl.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2287)
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 685)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                    validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                      swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                        swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                                          swift::Expr::walk(swift::ASTWalker&) (line 53)
                                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1543)
                                              (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                                  swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 1070)
                                                                    swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                                    – Crash case at this location: stacks/1836-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                      swift::constraints::Solution::Solution(swift::constraints::Solution&&) (line 319)
                                                                      – Crash case at this location: stacks/1168-swift-constraints-solution-solution.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 11591)
              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 53)
                swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                  void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                  – Crash case at this location: stacks/1337-void.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 53)
                swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                  swift::InFlightDiagnostic swift::Parser::diagnose<>(swift::SourceLoc, swift::Diag<>) (line 205)
                  – Crash case at this location: stacks/1891-swift-inflightdiagnostic.txt
                swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                  swift::Optional<swift::Diagnostic>::operator=(swift::Optional<swift::Diagnostic>&&) (line 245)
                  – Crash case at this location: stacks/0555-swift-optional-swift-diagnostic-operator.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1582)
                                    finalizeGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::DeclContext*, swift::TypeChecker&) (line 522)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                                – Crash case at this location: stacks/1087-swift-declcontext-lookupqualified.txt
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                          swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                            swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                              std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                  – Crash case at this location: stacks/0071-getselftypeforcontainer.txt
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                  void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1582)
                                      finalizeGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::DeclContext*, swift::TypeChecker&) (line 522)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                                  – Crash case at this location: stacks/1183-swift-declcontext-lookupqualified.txt
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2552)
                                                    swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 194)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                  swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                    swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                    – Crash case at this location: stacks/1408-swift-type-walk.txt
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                – Crash case at this location: stacks/1722-getselftypeforcontainer.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5734)
              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 53)
                                swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                  llvm::sys::path::append(llvm::SmallVectorImpl<char>&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&, llvm::Twine const&) (line 1496)
                                  – Crash case at this location: stacks/1823-llvm-sys-path-append.txt
                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 846)
                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                            swift::ModuleFile::getImportedModules(llvm::SmallVectorImpl<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >&, swift::Module::ImportFilter) (line 356)
                            – Crash case at this location: stacks/1468-swift-modulefile-getimportedmodules.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 685)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                              swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                          swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                            swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                              std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                  – Crash case at this location: stacks/0937-getselftypeforcontainer.txt
                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2552)
                              swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 194)
                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                              swift::Type::walk(swift::TypeWalker&) const (line 54)
                                              – Crash case at this location: stacks/1186-swift-type-walk.txt
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                    swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                      swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                        swift::DependentMemberType::get(swift::Type, swift::AssociatedTypeDecl*, swift::ASTContext const&) (line 211)
                                                                        – Crash case at this location: stacks/0778-swift-dependentmembertype-get.txt
                                                                        swift::ClassType::get(swift::ClassDecl*, swift::Type, swift::ASTContext const&) (line 211)
                                                                        – Crash case at this location: stacks/0879-swift-classtype-get.txt
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                              swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                swift::TypeChecker::coercePatternToType(swift::Pattern*&, swift::DeclContext*, swift::Type, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 2019)
                                                – Crash case at this location: stacks/1798-swift-typechecker-coercepatterntotype.txt
                                                swift::ModuleFile::maybeReadGenericParams(swift::DeclContext*, llvm::BitstreamCursor&, swift::GenericParamList*) (line 1910)
                                                – Crash case at this location: stacks/1008-swift-modulefile-maybereadgenericparams.txt
                                                swift::TuplePattern::create(swift::ASTContext&, swift::SourceLoc, llvm::ArrayRef<swift::TuplePatternElt>, swift::SourceLoc, bool, swift::SourceLoc, swift::Optional<bool>) (line 280)
                                                – Crash case at this location: stacks/0886-swift-tuplepattern-create.txt
                                                swift::InFlightDiagnostic swift::Parser::diagnose<>(swift::SourceLoc, swift::Diag<>) (line 205)
                                                – Crash case at this location: stacks/1869-swift-inflightdiagnostic.txt
                                                swift::Parser::parseExprSequence(swift::Diag<>, bool, bool) (line 153)
                                                – Crash case at this location: stacks/1676-swift-parser-parseexprsequence.txt
                                                swift::ModuleFile::getDecl(swift::Fixnum<31u, unsigned int>, swift::Optional<swift::DeclContext*>) (line 9392)
                                                – Crash case at this location: stacks/0660-swift-modulefile-getdecl.txt
                                                swift::Parser::parseToken(swift::tok, swift::SourceLoc&, swift::Diagnostic const&) (line 96)
                                                – Crash case at this location: stacks/1376-swift-parser-parsetoken.txt
                                                swift::constraints::ConstraintSystem::simplify() (line 103)
                                                – Crash case at this location: stacks/1046-swift-constraints-constraintsystem-simplify.txt
                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                                      swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                          validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                  swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                    swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                    – Crash case at this location: stacks/0507-std-basic-string-char.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
              validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                swift::PrintingDiagnosticConsumer::handleDiagnostic(swift::SourceManager&, swift::SourceLoc, swift::DiagnosticKind, llvm::StringRef, swift::DiagnosticInfo const&) (line 1288)
                                – Crash case at this location: stacks/0489-swift-printingdiagnosticconsumer-handlediagnostic.txt
                                swift::ModuleFile::lookupValue(swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&) (line 1472)
                                – Crash case at this location: stacks/0897-swift-modulefile-lookupvalue.txt
                                bool swift::Parser::parseToken<>(swift::tok, swift::SourceLoc&, swift::Diag<>) (line 134)
                                – Crash case at this location: stacks/1543-bool.txt
                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 53)
                                      swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                      – Crash case at this location: stacks/1587-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 489)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 53)
                                        swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                          swift::Type::walk(swift::TypeWalker&) const (line 75)
                                          – Crash case at this location: stacks/1768-swift-type-walk.txt
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                                  – Crash case at this location: stacks/1775-resolvetypedecl.txt
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 2539)
                        (anonymous namespace)::TypeResolver::resolveASTFunctionType(swift::FunctionTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::AnyFunctionType::ExtInfo) (line 39)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1605)
                                        swift::NominalTypeDecl::computeType() (line 29)
                                          swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                            llvm::BitstreamCursor::readRecord(unsigned int, llvm::SmallVectorImpl<unsigned long long>&, llvm::StringRef*) (line 671)
                                            – Crash case at this location: stacks/1520-llvm-bitstreamcursor-readrecord.txt
              validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                    swift::Expr::walk(swift::ASTWalker&) (line 26)
                      (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                            swift::ClangModuleUnit::getAdapterModule() const (line 71)
                            – Crash case at this location: stacks/0461-swift-clangmoduleunit-getadaptermodule.txt
                            void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                            – Crash case at this location: stacks/0405-void.txt
                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                                                          swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                            swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                                                                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                                                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                                                                                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 325)
                                                                                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                                                                                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                                                                                                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                                                                                                                                  swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 852)
                                                                                                                                                    swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                                                                                                                                    – Crash case at this location: stacks/1300-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 2394)
                              swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                              – Crash case at this location: stacks/1583-llvm-prettystacktraceentry-prettystacktraceentry.txt
                    swift::Expr::walk(swift::ASTWalker&) (line 53)
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2687)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1543)
                          (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 53)
                                      swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                      – Crash case at this location: stacks/1326-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3458)
                        (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                                  – Crash case at this location: stacks/1158-resolvetypedecl.txt
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                          swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                            swift::TypeBase::getCanonicalType() (line 775)
                                                              swift::TypeBase::getCanonicalType() (line 1403)
                                                                (anonymous namespace)::RawMemoryObject::readBytes(unsigned long long, unsigned long long, unsigned char*) const (line 58)
                                                                – Crash case at this location: stacks/1445-swift-typebase-getcanonicaltype.txt
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                      swift::ModuleFile::getDecl(swift::Fixnum<31u, unsigned int>, swift::Optional<swift::DeclContext*>) (line 7248)
                                                                                      – Crash case at this location: stacks/1283-swift-modulefile-getdecl.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3478)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 115)
                          (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                              swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                          swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                            swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                              std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                              swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                swift::TypeBase::getCanonicalType() (line 775)
                                                                  swift::TypeBase::getCanonicalType() (line 1403)
                                                                  – Crash case at this location: stacks/1429-swift-typebase-getcanonicaltype.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1543)
                        (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                                            validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                                                              swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                                validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 1212)
                                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6131)
                                                                                    checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                                                                            swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                                                                              swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                                                                              – Crash case at this location: stacks/1653-swift-pattern-foreachvariable.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1935)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1563)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3458)
                                (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                      – Crash case at this location: stacks/1140-getselftypeforcontainer.txt
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3572)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                                (anonymous namespace)::Traversal::visit(swift::Expr*) (line 2687)
                                  (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1543)
                                    (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                        swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                          void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                    swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                            – Crash case at this location: stacks/1295-getselftypeforcontainer.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1635)
                          (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                  – Crash case at this location: stacks/1312-getselftypeforcontainer.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1563)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1563)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1843)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3914)
                                (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1605)
                                        swift::NominalTypeDecl::computeType() (line 29)
                                          swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                          – Crash case at this location: stacks/1849-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                      (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3217)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3115)
                          (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                swift::constraints::ConstraintLocator::Profile(llvm::FoldingSetNodeID&, swift::Expr*, llvm::ArrayRef<swift::constraints::ConstraintLocator::PathElement>) (line 46)
                                – Crash case at this location: stacks/1703-swift-constraints-constraintlocator-profile.txt
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1000)
                    swift::constraints::ConstraintSystem::salvage(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::Expr*, bool) (line 300)
                      swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                        swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                          swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 4065)
                            swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                              swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                  swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 4065)
                                    swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 182)
                                        swift::constraints::ConstraintSystem::simplifyFixConstraint(swift::constraints::Fix, swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 993)
                                          swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 113)
                                            swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 125)
                                            – Crash case at this location: stacks/0603-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                    swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                      swift::Expr::walk(swift::ASTWalker&) (line 76)
                        (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                            (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                  swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                    swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                      swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                        swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 971)
                                          swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                            swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 216)
                                              swift::constraints::ConstraintSystem::simplifyMemberConstraint(swift::constraints::Constraint const&) (line 2146)
                                                swift::constraints::ConstraintSystem::addOverloadSet(swift::Type, llvm::ArrayRef<swift::constraints::OverloadChoice>, swift::constraints::ConstraintLocator*) (line 204)
                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 816)
                                                      swift::constraints::ConstraintSystem::resolveOverload(swift::constraints::ConstraintLocator*, swift::Type, swift::constraints::OverloadChoice) (line 329)
                                                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 802)
                                                          swift::constraints::ConstraintSystem::openType(swift::Type, swift::constraints::ConstraintLocatorBuilder, swift::DeclContext*, bool, swift::constraints::DependentTypeOpener*) (line 264)
                                                            swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                                              (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 1050)
                                                                swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 335)
                                                                – Crash case at this location: stacks/0933-no-stacktrace.txt
                          swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                            swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                  swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                    existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                      – Crash case at this location: stacks/1783-getselftypeforcontainer.txt
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                        swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                          swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                          – Crash case at this location: stacks/1343-swift-type-walk.txt
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                    resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                    – Crash case at this location: stacks/0471-resolvetypedecl.txt
                      swift::Expr::walk(swift::ASTWalker&) (line 53)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6567)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6498)
                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 5482)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                        resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                        – Crash case at this location: stacks/1299-resolvetypedecl.txt
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                  – Crash case at this location: stacks/0562-swift-typechecker-typecheckexpression.txt
                    swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                      swift::Expr::walk(swift::ASTWalker&) (line 53)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 3572)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1635)
                            swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*)::ExprWalker::walkToExprPre(swift::Expr*) (line 1112)
                              swift::TypeChecker::typeCheckClosureBody(swift::ClosureExpr*) (line 143)
                                swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 473)
                                  swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 123)
                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2526)
                                      void checkCircularity<swift::ClassDecl>(swift::TypeChecker&, swift::ClassDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::ClassDecl*>&) (line 132)
                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                                    – Crash case at this location: stacks/0307-addminimumprotocols.txt
                                                      void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                                      – Crash case at this location: stacks/1138-void.txt
                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                      – Crash case at this location: stacks/1249-getselftypeforcontainer.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 365)
                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                – Crash case at this location: stacks/0942-getselftypeforcontainer.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2695)
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                    validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 79)
                                swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 1070)
                                  swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                                  – Crash case at this location: stacks/0888-swift-nominaltypedecl-getdeclaredtypeincontext.txt
                validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                  swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                    swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                      swift::Expr::walk(swift::ASTWalker&) (line 26)
                        (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                              swift::TypeBase::isEqual(swift::Type) (line 26)
                              – Crash case at this location: stacks/0991-swift-typebase-isequal.txt
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2164)
                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2287)
                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1605)
                    swift::NominalTypeDecl::computeType() (line 29)
                      swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                        llvm::OnDiskChainedHashTable<swift::ModuleFile::DeclTableInfo>::find(swift::Identifier const&, swift::ModuleFile::DeclTableInfo*) (line 47)
                        – Crash case at this location: stacks/1949-llvm-ondiskchainedhashtable-swift-modulefile-decltableinfo-find.txt
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                              swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                  swift::OptionalType::get(swift::Type) (line 295)
                                                  – Crash case at this location: stacks/1941-swift-optionaltype-get.txt
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                                        swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 167)
                                          swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                            validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                    swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                      swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                        swift::Optional<std::__1::pair<swift::api_notes::ContextID, swift::api_notes::ObjCContextInfo> >::operator=(swift::Optional<std::__1::pair<swift::api_notes::ContextID, swift::api_notes::ObjCContextInfo> >&&) (line 309)
                                                                        – Crash case at this location: stacks/1781-swift-optional-std-pair-swift-api-notes-contextid.txt
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2695)
                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                  validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                    swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                      validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                    swift::ModuleFile::maybeReadGenericParams(swift::DeclContext*, llvm::BitstreamCursor&, swift::GenericParamList*) (line 1910)
                                    – Crash case at this location: stacks/1641-swift-modulefile-maybereadgenericparams.txt
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                    swift::ModuleFile::getDecl(swift::Fixnum<31u, unsigned int>, swift::Optional<swift::DeclContext*>) (line 7248)
                                                    – Crash case at this location: stacks/0687-swift-modulefile-getdecl.txt
                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                            swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                              swift::TypeBase::getCanonicalType() (line 775)
                                                swift::TypeBase::getCanonicalType() (line 1403)
                                                  swift::DiagnosticEngine::flushActiveDiagnostic() (line 4667)
                                                  – Crash case at this location: stacks/0640-swift-diagnosticengine-flushactivediagnostic.txt
                                                  swift::InFlightDiagnostic swift::Parser::diagnose<>(swift::Token, swift::Diag<>) (line 206)
                                                  – Crash case at this location: stacks/1744-swift-inflightdiagnostic.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 865)
                swift::NominalTypeDecl::computeType() (line 29)
                  swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
                    swift::StructType::get(swift::StructDecl*, swift::Type, swift::ASTContext const&) (line 211)
                    – Crash case at this location: stacks/1671-swift-structtype-get.txt
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                          swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                            swift::TypeBase::getCanonicalType() (line 775)
                                              swift::TypeBase::getCanonicalType() (line 1403)
                                                swift::constraints::ConstraintLocator::Profile(llvm::FoldingSetNodeID&, swift::Expr*, llvm::ArrayRef<swift::constraints::ConstraintLocator::PathElement>) (line 46)
                                                – Crash case at this location: stacks/1493-swift-constraints-constraintlocator-profile.txt
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                swift::TypeChecker::getDefaultType(swift::ProtocolDecl*, swift::DeclContext*) (line 203)
                                                – Crash case at this location: stacks/1345-swift-typechecker-getdefaulttype.txt
                                                swift::InOutType::get(swift::Type) (line 340)
                                                – Crash case at this location: stacks/1467-swift-inouttype-get.txt
                                                swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 200)
                                                – Crash case at this location: stacks/0932-swift-metatypetype-get.txt
                                                swift::ASTContext::setConformsTo(swift::CanType, swift::ProtocolDecl*, llvm::PointerIntPair<swift::ProtocolConformance*, 1u, bool, llvm::PointerLikeTypeTraits<swift::ProtocolConformance*> >) (line 102)
                                                – Crash case at this location: stacks/0983-a.txt
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                              swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                                                    validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                                                      swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                                        swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 153)
                                                                          swift::Expr::walk(swift::ASTWalker&) (line 26)
                                                                            (anonymous namespace)::PreCheckExpression::walkToExprPre(swift::Expr*) (line 125)
                                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                                              swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                              – Crash case at this location: stacks/1903-swift-type-walk.txt
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                                      swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                                        checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                                              swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                                                swift::NominalTypeDecl::getProtocols(bool) const (line 22)
                                                                                – Crash case at this location: stacks/1496-swift-nominaltypedecl-getprotocols.txt
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                  swift::FuncDecl::setDeserializedSignature(llvm::ArrayRef<swift::Pattern*>, swift::TypeLoc) (line 298)
                                                  – Crash case at this location: stacks/0960-swift-funcdecl-setdeserializedsignature.txt
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
                                            validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                                              swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                                                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                                                  swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                                                    swift::Expr::walk(swift::ASTWalker&) (line 76)
                                                      (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                                        swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 70)
                                                          (anonymous namespace)::ConstraintGenerator::visitApplyExpr(swift::ApplyExpr*) (line 2200)
                                                            swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 767)
                                                                swift::constraints::ConstraintSystem::simplifyApplicableFnConstraint(swift::constraints::Constraint const&) (line 878)
                                                                  swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                                                    swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 658)
                                                                      swift::constraints::ConstraintSystem::simplifyConstructionConstraint(swift::Type, swift::FunctionType*, unsigned int, swift::constraints::ConstraintLocator*) (line 600)
                                                                        swift::TypeChecker::lookupConstructors(swift::Type, swift::DeclContext*) (line 34)
                                                                          swift::TypeChecker::lookupMember(swift::Type, swift::DeclName, swift::DeclContext*, bool) (line 112)
                                                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 13395)
                                                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                                  – Crash case at this location: stacks/1769-getselftypeforcontainer.txt
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                            swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                              swift::TypeBase::getCanonicalType() (line 775)
                                                swift::TypeBase::getCanonicalType() (line 1403)
                                                  swift::ModuleFile::maybeReadPattern() (line 103)
                                                  – Crash case at this location: stacks/1804-swift-modulefile-maybereadpattern.txt
                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                          swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                            swift::TypeBase::getCanonicalType() (line 775)
                                              swift::TypeBase::getCanonicalType() (line 1403)
                                                swift::Parser::parseExprUnary(swift::Diag<>, bool) (line 805)
                                                – Crash case at this location: stacks/1558-swift-parser-parseexprunary.txt
                                                swift::UnboundGenericType::get(swift::NominalTypeDecl*, swift::Type, swift::ASTContext const&) (line 392)
                                                – Crash case at this location: stacks/1431-swift-unboundgenerictype-get.txt
                                                swift::Parser::parseExprPostfix(swift::Diag<>, bool) (line 86)
                                                – Crash case at this location: stacks/0885-swift-parser-parseexprpostfix.txt
                                                swift::constraints::ConstraintGraph::removeConstraint(swift::constraints::Constraint*) (line 145)
                                                – Crash case at this location: stacks/1441-swift-constraints-constraintgraph-removeconstraint.txt
                                                swift::OptionalType::get(swift::Type) (line 295)
                                                – Crash case at this location: stacks/1905-swift-optionaltype-get.txt
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                  swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                    std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 785)
                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                        getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                          swift::constraints::Solution::Solution(swift::constraints::Solution&&) (line 319)
                                                          – Crash case at this location: stacks/1631-swift-constraints-solution-solution.txt
                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                  swift::TypeChecker::resolveTypeInContext(swift::TypeDecl*, swift::DeclContext*, bool, swift::GenericTypeResolver*) (line 434)
                                                  – Crash case at this location: stacks/0726-swift-typechecker-resolvetypeincontext.txt
                                                  swift::GenericSignature::get(llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>) (line 324)
                                                  – Crash case at this location: stacks/1022-swift-genericsignature-get.txt
                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                                                validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                                                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                    validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                                        swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                                          swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                                            swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 200)
                                                                            – Crash case at this location: stacks/0683-swift-metatypetype-get.txt
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                swift::ModuleFile::maybeReadPattern() (line 772)
                                                – Crash case at this location: stacks/1007-swift-modulefile-maybereadpattern.txt
                                                swift::constraints::ConstraintGraph::Change::undo(swift::constraints::ConstraintGraph&) (line 74)
                                                – Crash case at this location: stacks/1649-swift-constraints-constraintgraph-change-undo.txt
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 117)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                            swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                              swift::TypeBase::getCanonicalType() (line 775)
                                                swift::TypeBase::getCanonicalType() (line 1403)
                                                  swift::ProtocolCompositionType::build(swift::ASTContext const&, llvm::ArrayRef<swift::Type>) (line 474)
                                                  – Crash case at this location: stacks/1931-swift-protocolcompositiontype-build.txt
                                                  swift::ClangModuleUnit::getAdapterModule() const (line 71)
                                                  – Crash case at this location: stacks/0749-swift-clangmoduleunit-getadaptermodule.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
              swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                  std::__1::__function::__func<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*), std::__1::allocator<(anonymous namespace)::DeclChecker::visitBoundVars(swift::Pattern*)::'lambda'(swift::VarDecl*)>, void (swift::VarDecl*)>::operator()(swift::VarDecl*&&) (line 139)
                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 2394)
                      swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                        swift::GenericFunctionType::get(swift::GenericSignature*, swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 438)
                        – Crash case at this location: stacks/0771-x.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 1857)
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18785)
                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 405)
                                            swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                              swift::Type::walk(swift::TypeWalker&) const (line 75)
                                                swift::TypeBase::getAnyOptionalObjectType(swift::OptionalTypeKind&) (line 15)
                                                – Crash case at this location: stacks/1719-swift-typebase-getanyoptionalobjecttype.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 20984)
              finalizeGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::DeclContext*, swift::TypeChecker&) (line 522)
                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2552)
                        swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 659)
                          swift::TypeBase::getTypeOfMember(swift::Module*, swift::ValueDecl const*, swift::LazyResolver*, swift::Type) (line 534)
                          – Crash case at this location: stacks/0317-swift-typebase-gettypeofmember.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 9408)
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 9408)
                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                  swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                    swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 200)
                                                    – Crash case at this location: stacks/0669-swift-metatypetype-get.txt
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                      swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                        swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                          checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                              swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                  swift::TypeChecker::callWitness(swift::Expr*, swift::DeclContext*, swift::ProtocolDecl*, swift::ProtocolConformance*, swift::DeclName, llvm::MutableArrayRef<swift::Expr*>, swift::Diag<>) (line 816)
                                                  – Crash case at this location: stacks/1710-swift-typechecker-callwitness.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2164)
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 53)
                  swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                    llvm::FoldingSet<swift::ClassType>::NodeEquals(llvm::FoldingSetImpl::Node*, llvm::FoldingSetNodeID const&, unsigned int, llvm::FoldingSetNodeID&) const (line 46)
                    – Crash case at this location: stacks/0280-llvm-foldingset-swift-classtype-nodeequals.txt
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 642)
                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1605)
                  swift::NominalTypeDecl::computeType() (line 29)
                    swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                      swift::NominalType::get(swift::NominalTypeDecl*, swift::Type, swift::ASTContext const&) (line 53)
                      – Crash case at this location: stacks/1683-swift-nominaltype-get.txt
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 5947)
                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                            swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                              swift::TypeBase::getCanonicalType() (line 775)
                                                swift::TypeBase::getCanonicalType() (line 1403)
                                                  swift::GenericSignature::get(llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>) (line 324)
                                                  – Crash case at this location: stacks/1016-swift-genericsignature-get.txt
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 9408)
                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 642)
                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                    swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                      swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                        swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 3521)
                                        – Crash case at this location: stacks/0938-swift-constraints-constraintsystem-matchtypes.txt
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 1857)
                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                                      swift::NominalTypeDecl::computeInterfaceType() const (line 529)
                                      – Crash case at this location: stacks/0543-swift-nominaltypedecl-computeinterfacetype.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19092)
            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                  swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                    existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                          swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                            checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                              checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                            swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                  swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                    checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                        swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                          swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                          – Crash case at this location: stacks/0736-swift-type-walk.txt
                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 22856)
                          swift::FunctionType::get(swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 158)
                          – Crash case at this location: stacks/1952-swift-functiontype-get.txt
                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                        swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                          swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                            checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                              swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                      – Crash case at this location: stacks/0949-d.txt
                                swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                  std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                  swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                    swift::TypeBase::getCanonicalType() (line 775)
                                                      swift::TypeBase::getCanonicalType() (line 1403)
                                                      – Crash case at this location: stacks/0642-llvm-errs.txt
                                                swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                  swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                      getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                      – Crash case at this location: stacks/0850-getselftypeforcontainer.txt
                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2552)
                    swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 194)
                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                            swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                              checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                                                    swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                                                      checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                                                        checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 304)
                                                          swift::ArchetypeBuilder::inferRequirements(swift::TypeLoc) (line 52)
                                                            swift::Type::walk(swift::TypeWalker&) const (line 54)
                                                            – Crash case at this location: stacks/1519-swift-type-walk.txt
                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                      swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                        void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                            swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                              swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                  swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                    swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                      std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                      swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                        swift::TypeBase::getCanonicalType() (line 775)
                                                                          swift::TypeBase::getCanonicalType() (line 1403)
                                                                          – Crash case at this location: stacks/0697-swift-typebase-getcanonicaltype.txt
                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                          getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                          – Crash case at this location: stacks/0659-s.txt
                                    swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                      std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                        swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                          getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                            swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 729)
                                                            – Crash case at this location: stacks/1599-swift-constraints-constraintsystem-getfixedtyperecursive.txt
        swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 152)
          checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                    swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                              swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                  void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                                        swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                                          void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                                                          swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                                                            void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                                                swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                  swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                    (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                      swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                        resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                                          swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                                                                                            swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                                                                                              void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                                                                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                                                                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                                                                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                                                                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                                                                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                                                                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                                                                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                                                                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                                                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                                                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                                                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                                                                                                        resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                                                                                                        – Crash case at this location: stacks/0137-swift-modulefile-gettype.txt
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                              – Crash case at this location: stacks/1240-resolvetypedecl.txt
            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 552)
              validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 560)
                swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                    swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                      swift::Expr::walk(swift::ASTWalker&) (line 76)
                        swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 4209)
                          (anonymous namespace)::ExprRewriter::applyMemberRefExpr(swift::Expr*, swift::Expr*, swift::SourceLoc, swift::SourceLoc, bool) (line 1100)
                            (anonymous namespace)::ExprRewriter::buildMemberRef(swift::Expr*, swift::Type, swift::SourceLoc, swift::ValueDecl*, swift::SourceLoc, swift::Type, swift::constraints::ConstraintLocatorBuilder, bool, swift::AccessKind) (line 511)
                              swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const (line 684)
                                swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 93)
                                  swift::TypeBase::getCanonicalType() (line 1734)
                                  – Crash case at this location: stacks/1619-swift-typebase-getcanonicaltype.txt
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1000)
                    swift::constraints::ConstraintSystem::salvage(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::Expr*, bool) (line 300)
                      swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                        swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                          swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                            swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                              swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 3230)
                                  swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                    swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 3230)
                                      swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                        swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6521)
                                          swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                                            swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                                              swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 182)
                                                swift::constraints::ConstraintSystem::simplifyFixConstraint(swift::constraints::Fix, swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 993)
                                                  swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 113)
                                                    swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 125)
                                                    – Crash case at this location: stacks/0404-swift-constraints-constraintsystem-getfixedtyperecursive.txt
                  swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 479)
                    swift::constraints::ConstraintSystem::generateConstraints(swift::Expr*) (line 96)
                      swift::Expr::walk(swift::ASTWalker&) (line 53)
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                            (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                              swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 2460)
                                        resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                        – Crash case at this location: stacks/0773-resolvetypedecl.txt
                        (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1655)
                          (anonymous namespace)::Traversal::visit(swift::Expr*) (line 6474)
                            (anonymous namespace)::Traversal::visit(swift::Expr*) (line 4115)
                              (anonymous namespace)::Traversal::visit(swift::Expr*) (line 1864)
                                (anonymous namespace)::ConstraintWalker::walkToExprPost(swift::Expr*) (line 162)
                                  swift::ASTVisitor<(anonymous namespace)::ConstraintGenerator, swift::Type, void, void, void, void, void>::visit(swift::Expr*) (line 1373)
                                    swift::TypeChecker::resolveType(swift::TypeRepr*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 174)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                                          swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                                            existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                                              – Crash case at this location: stacks/1596-llvm-bitstreamcursor-readvbr.txt
            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
              swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                  checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                    swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                              swift::Parser::parseTypeTupleBody() (line 407)
                                              – Crash case at this location: stacks/1664-swift-parser-parsetypetuplebody.txt
                                              swift::Type::walk(swift::TypeWalker&) const (line 75)
                                              – Crash case at this location: stacks/0934-swift-type-walk.txt
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6018)
                                            void checkCircularity<swift::ProtocolDecl>(swift::TypeChecker&, swift::ProtocolDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::ProtocolDecl*>&) (line 200)
                                              void checkCircularity<swift::ProtocolDecl>(swift::TypeChecker&, swift::ProtocolDecl*, swift::Diag<llvm::StringRef>, swift::Diag<swift::Identifier>, llvm::SmallVectorImpl<swift::ProtocolDecl*>&) (line 200)
                                                void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                                                – Crash case at this location: stacks/1669-void.txt
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6131)
                                            checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 532)
                                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                  getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                  – Crash case at this location: stacks/1815-getselftypeforcontainer.txt
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 224)
                                              validatePatternBindingDecl(swift::TypeChecker&, swift::PatternBindingDecl*) (line 533)
                                                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                                                  validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 3132)
                                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6103)
                                                                    swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 381)
                                                                      swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 312)
                                                                        swift::Pattern::forEachVariable(std::__1::function<void (swift::VarDecl*)> const&) const (line 235)
                                                                        – Crash case at this location: stacks/1795-swift-pattern-foreachvariable.txt
                      swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                        std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                          swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                            swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                              (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                  resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                    swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                      swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                        swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                            getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                            – Crash case at this location: stacks/1902-getselftypeforcontainer.txt
            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19223)
                swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 435)
                  swift::TypeChecker::typeCheckPattern(swift::Pattern*, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 683)
                    validateTypedPattern(swift::TypeChecker&, swift::DeclContext*, swift::TypedPattern*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*) (line 79)
                      swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                        (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                          swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                            resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                              resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                              – Crash case at this location: stacks/0384-resolvetypedecl.txt
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18673)
                swift::TypeChecker::validateGenericFuncSignature(swift::AbstractFunctionDecl*) (line 86)
                  checkGenericFuncSignature(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::AbstractFunctionDecl*, swift::GenericTypeResolver&) (line 51)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                                – Crash case at this location: stacks/0845-resolvetypedecl.txt
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 19092)
                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 3850)
                          swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >) (line 243)
                            void lookupInModule<llvm::SmallSet<swift::CanType, 4u, (anonymous namespace)::SortCanType>, swift::namelookup::lookupInModule(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::DeclName, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::NLKind, swift::namelookup::ResolutionKind, swift::LazyResolver*, swift::DeclContext const*, llvm::ArrayRef<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> >)::$_0>(swift::Module*, llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::namelookup::ResolutionKind, bool, swift::LazyResolver*, llvm::SmallDenseMap<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*>, llvm::TinyPtrVector<swift::ValueDecl*>, 32u, llvm::DenseMapInfo<std::__1::pair<llvm::ArrayRef<std::__1::pair<swift::Identifier, swift::SourceLoc> >, swift::Module*> (line 0)
                              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                              – Crash case at this location: stacks/1609-getselftypeforcontainer.txt
                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 621)
                      swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 930)
                        existentialConformsToItself(swift::TypeChecker&, swift::Type, swift::ProtocolDecl*, swift::SourceLoc, llvm::SmallPtrSet<swift::ProtocolDecl*, 4u>&) (line 316)
                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                            swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                              swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                                checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                                  swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                                    swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                      std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                      swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                                                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                                                  swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                                                    swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                                                      swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                                                        swift::TypeBase::getCanonicalType() (line 775)
                                                                          swift::TypeBase::getCanonicalType() (line 1403)
                                                                            swift::MetatypeType::get(swift::Type, swift::Optional<swift::MetatypeRepresentation>, swift::ASTContext const&) (line 200)
                                                                            – Crash case at this location: stacks/0494-swift-metatypetype-get.txt
      swift::performTypeChecking(swift::SourceFile&, swift::TopLevelContext&, unsigned int) (line 1514)
        swift::TypeChecker::typeCheckDecl(swift::Decl*, bool) (line 123)
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6649)
            swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
              swift::LangOptions::getTargetConfigOption(llvm::StringRef) (line 124)
              – Crash case at this location: stacks/0765-swift-langoptions-gettargetconfigoption.txt
              swift::GenericFunctionType::get(swift::GenericSignature*, swift::Type, swift::Type, swift::AnyFunctionType::ExtInfo const&) (line 184)
              – Crash case at this location: stacks/1550-swift-genericfunctiontype-get.txt
            swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 228)
              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 248)
              – Crash case at this location: stacks/1316-swift-typechecker-validatetype.txt
              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 5482)
              – Crash case at this location: stacks/0975-no-stacktrace.txt
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 441)
              – Crash case at this location: stacks/1632-swift-typechecker-validatedecl.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 9408)
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2695)
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2164)
                swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6649)
                  swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                    swift::StreamPrinter::printText(llvm::StringRef) (line 51)
                    – Crash case at this location: stacks/1545-swift-streamprinter-printtext.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6663)
            void (anonymous namespace)::DeclChecker::checkExplicitConformance<swift::EnumDecl>(swift::EnumDecl*, swift::Type) (line 138)
              swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3426)
                (anonymous namespace)::ConformanceChecker::resolveTypeWitnessViaLookup(swift::AssociatedTypeDecl*) (line 174)
                  swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 659)
                    swift::TypeBase::getTypeOfMember(swift::Module*, swift::ValueDecl const*, swift::LazyResolver*, swift::Type) (line 534)
                    – Crash case at this location: stacks/1061-swift-typebase-gettypeofmember.txt
              swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3988)
                (anonymous namespace)::ConformanceChecker::resolveTypeWitnessViaDefault(swift::AssociatedTypeDecl*) (line 543)
                  swift::TypeChecker::substType(swift::Module*, swift::Type, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool) (line 36)
                    swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const (line 122)
                      swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                        std::__1::__function::__func<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4, std::__1::allocator<swift::Type::subst(swift::Module*, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, bool, swift::LazyResolver*) const::$_4>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 949)
                        – Crash case at this location: stacks/1847-std-function-func-swift-type-subst.txt
              swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3691)
                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                  swift::TypeBase::getCanonicalType() (line 424)
                                                  – Crash case at this location: stacks/1773-swift-typebase-getcanonicaltype.txt
                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1582)
                  finalizeGenericParamList(swift::ArchetypeBuilder&, swift::GenericParamList*, swift::DeclContext*, swift::TypeChecker&) (line 522)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 68)
                              – Crash case at this location: stacks/1077-swift-declcontext-lookupqualified.txt
                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                        swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                          swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                            (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                              swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                  resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                    applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                      swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 750)
                                        swift::TypeChecker::checkSubstitutions(llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, llvm::DenseMap<swift::SubstitutableType*, llvm::SmallVector<swift::ProtocolConformance*, 2u>, llvm::DenseMapInfo<swift::SubstitutableType*> >&, swift::DeclContext*, swift::SourceLoc, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >*) (line 300)
                                        – Crash case at this location: stacks/0801-swift-typechecker-checksubstitutions.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 3728)
            void (anonymous namespace)::DeclChecker::checkExplicitConformance<swift::StructDecl>(swift::StructDecl*, swift::Type) (line 138)
              swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3691)
                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 1631)
                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                            resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 100)
                            – Crash case at this location: stacks/1767-resolvetypedecl.txt
                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                  swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                    swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                      checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                        swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                            swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                  (anonymous namespace)::IdentifierLookupVisitor::visit(clang::serialization::ModuleFile&, void*) (line 113)
                                                  – Crash case at this location: stacks/0936-no-stacktrace.txt
                          swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                            std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                              swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                  (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                    swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                      resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                        swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                          swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                            swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                              swift::TypeBase::getCanonicalType() (line 775)
                                                swift::TypeBase::getCanonicalType() (line 1403)
                                                – Crash case at this location: stacks/0783-swift-typebase-getcanonicaltype.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2164)
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 16984)
              checkRedeclaration(swift::TypeChecker&, swift::ValueDecl*) (line 778)
                swift::DiagnosticEngine::flushActiveDiagnostic() (line 3586)
                  swift::Decl::print(swift::ASTPrinter&, swift::PrintOptions const&) const (line 61)
                    swift::ASTVisitor<(anonymous namespace)::PrintAST, void, void, void, void, void, void>::visit(swift::Decl*) (line 4654)
                      (anonymous namespace)::PrintAST::printMembers(swift::IteratorRange<swift::DeclIterator>, bool) (line 153)
                        swift::ASTVisitor<(anonymous namespace)::PrintAST, void, void, void, void, void, void>::visit(swift::Decl*) (line 4654)
                          (anonymous namespace)::PrintAST::printMembers(swift::IteratorRange<swift::DeclIterator>, bool) (line 153)
                            swift::ASTVisitor<(anonymous namespace)::PrintAST, void, void, void, void, void, void>::visit(swift::Decl*) (line 544)
                            – Crash case at this location: stacks/1802-swift-astvisitor.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 17223)
              swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3731)
                (anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*) (line 1141)
                  matchWitness(swift::TypeChecker&, swift::NormalProtocolConformance*, swift::DeclContext*, swift::ValueDecl*, swift::ValueDecl*) (line 1021)
                    swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 802)
                      swift::constraints::ConstraintSystem::openType(swift::Type, swift::constraints::ConstraintLocatorBuilder, swift::DeclContext*, bool, swift::constraints::DependentTypeOpener*) (line 264)
                        swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                          (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 1050)
                            swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 992)
                              swift::constraints::ConstraintSystem::addConstraint(swift::constraints::Constraint*, bool, bool) (line 28)
                                swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 599)
                                  swift::constraints::ConstraintSystem::matchDeepEqualityTypes(swift::Type, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 489)
                                  – Crash case at this location: stacks/0700-swift-constraints-constraintsystem-matchdeepequalitytypes.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2695)
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 17223)
                swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3731)
                  (anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*) (line 1141)
                    matchWitness(swift::TypeChecker&, swift::NormalProtocolConformance*, swift::DeclContext*, swift::ValueDecl*, swift::ValueDecl*) (line 1021)
                      swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 802)
                        swift::constraints::ConstraintSystem::openType(swift::Type, swift::constraints::ConstraintLocatorBuilder, swift::DeclContext*, bool, swift::constraints::DependentTypeOpener*) (line 264)
                          swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                            (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 1050)
                              swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 327)
                                swift::ArchetypeBuilder::mapTypeIntoContext(swift::DeclContext*, swift::Type) (line 149)
                                  swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                  – Crash case at this location: stacks/0529-swift-type-transform.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6663)
              void (anonymous namespace)::DeclChecker::checkExplicitConformance<swift::EnumDecl>(swift::EnumDecl*, swift::Type) (line 138)
                swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3731)
                  (anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*) (line 1141)
                    matchWitness(swift::TypeChecker&, swift::NormalProtocolConformance*, swift::DeclContext*, swift::ValueDecl*, swift::ValueDecl*) (line 3559)
                      swift::constraints::Solution::computeSubstitutions(swift::Type, swift::DeclContext*, swift::Type, llvm::SmallVectorImpl<swift::Substitution>&) const (line 432)
                        swift::ArchetypeBuilder::mapTypeIntoContext(swift::DeclContext*, swift::Type) (line 149)
                          swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                            std::__1::__function::__func<swift::ArchetypeBuilder::mapTypeIntoContext(swift::Module*, swift::GenericParamList*, swift::Type)::$_3, std::__1::allocator<swift::ArchetypeBuilder::mapTypeIntoContext(swift::Module*, swift::GenericParamList*, swift::Type)::$_3>, swift::Type (swift::Type)>::operator()(swift::Type&&) (line 331)
                              llvm::FoldingSetNodeID::operator==(llvm::FoldingSetNodeID const&) const (line 40)
                              – Crash case at this location: stacks/0238-llvm-foldingsetnodeid-operator.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 10732)
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2164)
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 3728)
                void (anonymous namespace)::DeclChecker::checkExplicitConformance<swift::StructDecl>(swift::StructDecl*, swift::Type) (line 138)
                  swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3731)
                    (anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*) (line 1141)
                      matchWitness(swift::TypeChecker&, swift::NormalProtocolConformance*, swift::DeclContext*, swift::ValueDecl*, swift::ValueDecl*) (line 1021)
                        swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 1252)
                          swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 327)
                            swift::ArchetypeBuilder::mapTypeIntoContext(swift::DeclContext*, swift::Type) (line 149)
                              swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                              – Crash case at this location: stacks/1356-swift-type-transform.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2695)
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6663)
              void (anonymous namespace)::DeclChecker::checkExplicitConformance<swift::EnumDecl>(swift::EnumDecl*, swift::Type) (line 138)
                swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3731)
                  (anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*) (line 1141)
                    matchWitness(swift::TypeChecker&, swift::NormalProtocolConformance*, swift::DeclContext*, swift::ValueDecl*, swift::ValueDecl*) (line 1021)
                      swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 802)
                        swift::constraints::ConstraintSystem::openType(swift::Type, swift::constraints::ConstraintLocatorBuilder, swift::DeclContext*, bool, swift::constraints::DependentTypeOpener*) (line 264)
                          swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                            (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 1050)
                              swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 327)
                                swift::ArchetypeBuilder::mapTypeIntoContext(swift::DeclContext*, swift::Type) (line 149)
                                  swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                                  – Crash case at this location: stacks/0493-swift-type-transform.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 271)
              swift::TypeChecker::typeCheckBinding(swift::PatternBindingDecl*) (line 162)
                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                  swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                    swift::Expr::walk(swift::ASTWalker&) (line 26)
                      swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*)::ExprWalker::walkToExprPre(swift::Expr*) (line 1112)
                        swift::TypeChecker::typeCheckClosureBody(swift::ClosureExpr*) (line 143)
                          swift::ASTVisitor<(anonymous namespace)::StmtChecker, void, swift::Stmt*, void, void, void, void>::visit(swift::Stmt*) (line 554)
                            swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 1241)
                              swift::constraints::ConstraintSystem::applySolution(swift::constraints::Solution&, swift::Expr*) (line 8967)
                                swift::Expr::walk(swift::ASTWalker&) (line 76)
                                  swift::ASTVisitor<(anonymous namespace)::ExprRewriter, swift::Expr*, void, void, void, void, void>::visit(swift::Expr*) (line 90)
                                    (anonymous namespace)::ExprRewriter::visitApplyExpr(swift::ApplyExpr*) (line 79)
                                      (anonymous namespace)::ExprRewriter::finishApply(swift::ApplyExpr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 585)
                                        (anonymous namespace)::ExprRewriter::coerceCallArguments(swift::Expr*, swift::Type, swift::constraints::ConstraintLocatorBuilder) (line 2391)
                                          getCallerDefaultArg(swift::TypeChecker&, swift::DeclContext*, swift::SourceLoc, swift::ConcreteDeclRef&, unsigned int) (line 61)
                                          – Crash case at this location: stacks/1091-getcallerdefaultarg.txt
                swift::TypeChecker::typeCheckExpression(swift::Expr*&, swift::DeclContext*, swift::Type, swift::Type, bool, swift::FreeTypeVariableBinding, swift::ExprTypeCheckListener*) (line 946)
                  swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 364)
                    swift::constraints::ConstraintSystem::solve(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 1338)
                      swift::constraints::ConstraintSystem::solveSimplified(llvm::SmallVectorImpl<swift::constraints::Solution>&, swift::FreeTypeVariableBinding) (line 6249)
                        swift::constraints::ConstraintSystem::simplifyConstraint(swift::constraints::Constraint const&) (line 182)
                          swift::constraints::ConstraintSystem::simplifyFixConstraint(swift::constraints::Fix, swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 993)
                            swift::constraints::ConstraintSystem::matchTypes(swift::Type, swift::Type, swift::constraints::TypeMatchKind, unsigned int, swift::constraints::ConstraintLocatorBuilder) (line 113)
                              swift::constraints::ConstraintSystem::getFixedTypeRecursive(swift::Type, swift::TypeVariableType*&, bool, bool) (line 125)
                              – Crash case at this location: stacks/0557-swift-constraints-constraintsystem-getfixedtyperecursive.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 17223)
              swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3731)
                (anonymous namespace)::ConformanceChecker::resolveWitnessViaLookup(swift::ValueDecl*) (line 1141)
                  matchWitness(swift::TypeChecker&, swift::NormalProtocolConformance*, swift::DeclContext*, swift::ValueDecl*, swift::ValueDecl*) (line 1021)
                    swift::constraints::ConstraintSystem::getTypeOfMemberReference(swift::Type, swift::ValueDecl*, bool, bool, swift::constraints::ConstraintLocatorBuilder, swift::constraints::DependentTypeOpener*) (line 802)
                      swift::constraints::ConstraintSystem::openType(swift::Type, swift::constraints::ConstraintLocatorBuilder, swift::DeclContext*, bool, swift::constraints::DependentTypeOpener*) (line 264)
                        swift::Type::transform(std::__1::function<swift::Type (swift::Type)> const&) const (line 55)
                          (anonymous namespace)::ReplaceDependentTypes::operator()(swift::Type) (line 1050)
                            swift::constraints::ConstraintSystem::openGeneric(swift::DeclContext*, llvm::ArrayRef<swift::GenericTypeParamType*>, llvm::ArrayRef<swift::Requirement>, bool, swift::constraints::DependentTypeOpener*, swift::constraints::ConstraintLocatorBuilder, llvm::DenseMap<swift::CanType, swift::TypeVariableType*, llvm::DenseMapInfo<swift::CanType> >&) (line 335)
                            – Crash case at this location: stacks/1762-swift-constraints-constraintsystem-opengeneric.txt
            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 2695)
              swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 6649)
                swift::NominalTypeDecl::getDeclaredTypeInContext() const (line 51)
                  swift::DeclName::printPretty(llvm::raw_ostream&) const (line 139)
                  – Crash case at this location: stacks/1030-swift-declname-printpretty.txt
          swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 17223)
            swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3426)
              (anonymous namespace)::ConformanceChecker::resolveTypeWitnessViaLookup(swift::AssociatedTypeDecl*) (line 174)
                swift::TypeChecker::lookupMemberType(swift::Type, swift::Identifier, swift::DeclContext*) (line 194)
                  swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                    swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                      swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                        swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                          checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                            swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                              swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                                std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                                  swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                                    swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                      (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                        swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                          resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                            swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                              swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                                swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                                  swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                                    getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                    – Crash case at this location: stacks/1354-getselftypeforcontainer.txt
            swift::TypeChecker::conformsToProtocol(swift::Type, swift::ProtocolDecl*, swift::DeclContext*, swift::ProtocolConformance**, swift::SourceLoc, swift::Decl*) (line 3691)
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 876)
                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 238)
                      swift::ArchetypeBuilder::addGenericParameter(swift::GenericTypeParamDecl*, swift::Optional<unsigned int>) (line 222)
                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 205)
                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_0>, llvm::ArrayRef<swift::ProtocolDecl*> (swift::ProtocolDecl*)>::operator()(swift::ProtocolDecl*&&) (line 25)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 3232)
                                          swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 363)
                                            swift::ASTVisitor<(anonymous namespace)::DeclChecker, void, void, void, void, void, void>::visit(swift::Decl*) (line 18514)
                                              getSelfTypeForContainer(swift::AbstractFunctionDecl*, bool, bool, swift::GenericParamList**) (line 385)
                                                (anonymous namespace)::RawMemoryObject::readBytes(unsigned long long, unsigned long long, unsigned char*) const (line 58)
                                                – Crash case at this location: stacks/0342-getselftypeforcontainer.txt
                        swift::ArchetypeBuilder::addConformanceRequirement(swift::ArchetypeBuilder::PotentialArchetype*, swift::ProtocolDecl*) (line 463)
                          std::__1::__function::__func<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1, std::__1::allocator<swift::TypeChecker::createArchetypeBuilder(swift::Module*)::$_1>, std::__1::pair<swift::Type, llvm::ArrayRef<swift::ProtocolDecl*> > (swift::AbstractTypeParamDecl*)>::operator()(swift::AbstractTypeParamDecl*&&) (line 32)
                            swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                              swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                                (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                                  swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                                    resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 549)
                                      swift::UnqualifiedLookup::UnqualifiedLookup(swift::DeclName, swift::DeclContext*, swift::LazyResolver*, swift::SourceLoc, bool) (line 1898)
                                        swift::DeclContext::lookupQualified(swift::Type, swift::DeclName, unsigned int, swift::LazyResolver*, llvm::SmallVectorImpl<swift::ValueDecl*>&) const (line 5665)
                                          swift::removeShadowedDecls(llvm::SmallVectorImpl<swift::ValueDecl*>&, swift::Module const*, swift::LazyResolver*) (line 451)
                                            swift::TypeBase::getCanonicalType() (line 775)
                                              swift::TypeBase::getCanonicalType() (line 1403)
                                              – Crash case at this location: stacks/0847-swift-typebase-getcanonicaltype.txt
              swift::TypeChecker::validateDecl(swift::ValueDecl*, bool) (line 238)
                swift::TypeChecker::validateGenericTypeSignature(swift::NominalTypeDecl*) (line 69)
                  swift::TypeChecker::validateGenericSignature(swift::GenericParamList*, swift::DeclContext*, std::__1::function<bool (swift::ArchetypeBuilder&)>, bool&) (line 97)
                    checkGenericParameters(swift::TypeChecker&, swift::ArchetypeBuilder*, swift::GenericParamList*, swift::DeclContext*, swift::GenericTypeResolver&) (line 212)
                      swift::TypeChecker::checkInheritanceClause(swift::Decl*, swift::DeclContext*, swift::GenericTypeResolver*) (line 2907)
                        swift::TypeChecker::validateType(swift::TypeLoc&, swift::DeclContext*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, swift::GenericTypeResolver*, swift::ValueDecl*) (line 221)
                          (anonymous namespace)::TypeResolver::resolveType(swift::TypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>) (line 241)
                            swift::TypeChecker::resolveIdentifierType(swift::DeclContext*, swift::IdentTypeRepr*, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*, swift::ValueDecl*) (line 116)
                              resolveIdentTypeComponent(swift::TypeChecker&, swift::DeclContext*, llvm::ArrayRef<swift::ComponentIdentTypeRepr*>, swift::OptionSet<swift::TypeResolutionFlags, unsigned int>, bool, swift::GenericTypeResolver*) (line 895)
                                resolveTypeDecl(swift::TypeChecker&, swift::TypeDecl*, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, bool, swift::GenericTypeResolver*) (line 305)
                                  applyGenericTypeReprArgs(swift::TypeChecker&, swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::ArrayRef<swift::TypeRepr*>, swift::GenericTypeResolver*) (line 266)
                                    swift::TypeChecker::applyGenericArguments(swift::Type, swift::SourceLoc, swift::DeclContext*, llvm::MutableArrayRef<swift::TypeLoc>, swift::GenericTypeResolver*) (line 750)
                                      swift::TypeChecker::checkSubstitutions(llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >&, llvm::DenseMap<swift::SubstitutableType*, llvm::SmallVector<swift::ProtocolConformance*, 2u>, llvm::DenseMapInfo<swift::SubstitutableType*> >&, swift::DeclContext*, swift::SourceLoc, llvm::DenseMap<swift::TypeBase*, swift::Type, llvm::DenseMapInfo<swift::TypeBase*> >*) (line 300)
                                      – Crash case at this location: stacks/0447-swift-typechecker-checksubstitutions.txt

Distributed under the terms of the MIT license.
